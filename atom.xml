<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>晓婷成长记录</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-03-23T10:01:58.543Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>xiaoting</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vue常见面试题</title>
    <link href="http://yoursite.com/2020/03/23/vue%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    <id>http://yoursite.com/2020/03/23/vue常见面试题/</id>
    <published>2020-03-23T02:50:33.000Z</published>
    <updated>2020-03-23T10:01:58.543Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-什么是单页面应用，有什么优缺点？"><a href="#1-什么是单页面应用，有什么优缺点？" class="headerlink" title="1.什么是单页面应用，有什么优缺点？"></a>1.什么是单页面应用，有什么优缺点？</h2><p>SPA——–single page application。单页面应用，即一个web项目就只有一个页面，其实，单页面应用，就是把整个项目的所有页面的所有内容分成了很多的组件，可以重复利用的，可以任意调整的组件，每个组件就是一个独立的部分（包括html，css和javascript代码）。</p><p>单页面跳转仅刷新局部资源，公共资源仅刷新一次，之后的操作交互，数据交互是通过路由、ajax来进行的，页面本身没有进行刷新。</p><p><strong>优点：</strong></p><p> ①前后端分离</p><p> ②良好的交互体验——用户不用刷新页面，页面显示流畅</p><p>  ③减轻服务器压力——服务器只出数据</p><p>  ④共用一套后端代码——多个客户端可共用一套后端代码</p><p><strong>缺点：</strong></p><p> ①seo难度高——数据渲染在前端进行，seo主要是让网站对于搜索引擎的爬虫更加友好，spa页数据动态生成，爬虫识别不了</p><p>②前进后退管理——单页面不能使用浏览器的前进后退，页面切换要自己建立堆栈管理，解决方法：利用url的散列+iframe实现</p><p>③初次加载耗时长</p><p><strong>单页面应用的优化</strong></p><p>①注意网站标题、关键字和描述的写法。</p><p> ②网页标签的合理使用——标签的规范使用可以让搜索引擎更好的理解网页内容层次。（例如：h1&gt; h2的逐级展示）尽可能使网页符合W3C的标准</p><p> ③注重外联锚文本多样化——单页面网站不代表网站只有一个关键字，避免网站的过度优化，所以要多样化外联锚文本。（外联关键词加超链接）</p><p>④增加一个二级博客目录——可通过博客内容增加单页面网站的权重</p><p> ⑤合理设置锚点——页面上合理的设置锚点，有利于用户快速到达想看的内容区域</p><p> ⑥网站内容高质量——将用户的关注点尽可能完整的展示出来，通过不同区域展示相关内容，解决用户烦恼</p><p>⑦避免全是图片展示——网站文字内容少不利于搜索引擎抓取和索引</p><h2 id="2-vue优点？"><a href="#2-vue优点？" class="headerlink" title="2.vue优点？"></a>2.vue优点？</h2><p>轻量级框架：只关注视图层，是一个构建数据的视图集合，大小只有几十kb；<br>简单易学：国人开发，中文文档，不存在语言障碍 ，易于理解和学习；<br>双向数据绑定：保留了angular的特点，在数据操作方面更为简单；<br>组件化：保留了react的优点，实现了html的封装和重用，在构建单页面应用方面有着独特的优势；<br>视图，数据，结构分离：使数据的更改更为简单，不需要进行逻辑代码的修改，只需要操作数据就能完成相关操作；<br>虚拟DOM：dom操作是非常耗费性能的， 不再使用原生的dom操作节点，极大解放dom操作，但具体操作的还是dom不过是换了另一种方式；<br>运行速度更快:相比较与react而言，同样是操作虚拟dom，就性能而言，vue存在很大的优势。</p><h2 id="3-vue组件之间值的传递"><a href="#3-vue组件之间值的传递" class="headerlink" title="3.vue组件之间值的传递"></a>3.vue组件之间值的传递</h2><p><strong>一：父组件像子组件传值</strong></p><p>①父组件内设置要传的数据『data(){ fields: []}』</p><p>②在父组件中引用的子组件上绑定一个自定义属性并把数据绑定在自定义属性上『<add-date-set :formdata='formdata' :fields='fields' ></add-date-set>』</p><p>③在子组件添加参数props:[‘fields’],即可</p><p><strong>二：子组件像父组件传值</strong></p><p>①由于父组件需要参数，所以在父组件中的标签上定义自定义事件，在事件内部获取参数；『&lt;add-date-set @deleteField=”deleteField”&gt;</add-date-set>』</p><p>②在子组件中触发自定义事件，并传参。『deleteField(val, index){<br>      this.$emit(‘deleteField’, index, this.formdata);<br>    },』</p><p>结合的组件传值</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">&lt;add-date-<span class="keyword">set</span> :formdata='formdata' :fields='fields' @deleteField="deleteField" styleType="field"&gt;&lt;/add-date-<span class="keyword">set</span>&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import addDateSet from '@/components/createData/addDateSet'</span><br><span class="line">export default &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    addDateSet</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      formdata:[],</span><br><span class="line">      fields:  [&#123;</span><br><span class="line">          label: <span class="string">'热门城市'</span>,</span><br><span class="line">          options: [&#123;</span><br><span class="line">            value: <span class="string">'Shanghai'</span>,</span><br><span class="line">            label: <span class="string">'上海'</span></span><br><span class="line">          &#125;, &#123;</span><br><span class="line">            value: <span class="string">'Beijing'</span>,</span><br><span class="line">            label: <span class="string">'北京'</span></span><br><span class="line">          &#125;]</span><br><span class="line">        &#125;, &#123;</span><br><span class="line">          label: <span class="string">'城市名'</span>,</span><br><span class="line">          options: [&#123;</span><br><span class="line">            value: <span class="string">'Chengdu'</span>,</span><br><span class="line">            label: <span class="string">'成都'</span></span><br><span class="line">          &#125;, &#123;</span><br><span class="line">            value: <span class="string">'Shenzhen'</span>,</span><br><span class="line">            label: <span class="string">'深圳'</span></span><br><span class="line">          &#125;, &#123;</span><br><span class="line">            value: <span class="string">'Guangzhou'</span>,</span><br><span class="line">            label: <span class="string">'广州'</span></span><br><span class="line">          &#125;, &#123;</span><br><span class="line">            value: <span class="string">'Dalian'</span>,</span><br><span class="line">            label: <span class="string">'大连'</span></span><br><span class="line">          &#125;]</span><br><span class="line">        &#125;],</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        deleteField(val, index)&#123;</span><br><span class="line">        <span class="keyword">this</span>.formdata.splice(index,<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">this</span>.$message.success(<span class="string">"删除成功"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>子组件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">  &lt;div v-<span class="keyword">if</span>=<span class="string">"styleType == 'dataSet'"</span>&gt;</span><br><span class="line">    &lt;el-col :span=<span class="string">"24"</span>   v-<span class="keyword">for</span>=<span class="string">"(item, index) in formdataSet"</span> :key=<span class="string">"index"</span>&gt;</span><br><span class="line">      &lt;el-form-item label=<span class="string">"选择"</span> prop=<span class="string">"dataSet"</span>&gt;</span><br><span class="line">        &lt;el-autocomplete</span><br><span class="line">          <span class="class"><span class="keyword">class</span></span>=<span class="string">"inline-input"</span></span><br><span class="line">          v-model=<span class="string">"item.dataSet"</span></span><br><span class="line">          :fetch-suggestions=<span class="string">"querySearchData"</span></span><br><span class="line">          placeholder=<span class="string">"请输入"</span></span><br><span class="line">          @select=<span class="string">"handleSelect"</span></span><br><span class="line">          clearable</span><br><span class="line">        &gt;<span class="xml"><span class="tag">&lt;/<span class="name">el-autocomplete</span>&gt;</span></span></span><br><span class="line">        &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">"el-icon-close"</span>  @click=<span class="string">"deleteDataSet(item, index)"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">      &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>el-col&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  &lt;div v-else-if="styleType == 'field'"&gt;</span></span><br><span class="line"><span class="regexp">    &lt;el-col :span="24" v-for="(item, index) in formdata" :key="index"&gt;</span></span><br><span class="line"><span class="regexp">      &lt;el-form-item label="选择" prop="field"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;el-select v-model="item.field" placeholder="请选择"&gt;</span></span><br><span class="line"><span class="regexp">          &lt;el-option-group</span></span><br><span class="line"><span class="regexp">              v-for="group in fields"</span></span><br><span class="line"><span class="regexp">              :key="group.label"</span></span><br><span class="line"><span class="regexp">              :label="group.label"&gt;</span></span><br><span class="line"><span class="regexp">              &lt;el-option</span></span><br><span class="line"><span class="regexp">                v-for="item in group.options"</span></span><br><span class="line"><span class="regexp">                :key="item.value"</span></span><br><span class="line"><span class="regexp">                :label="item.label"</span></span><br><span class="line"><span class="regexp">                :value="item.value"&gt;</span></span><br><span class="line"><span class="regexp">              &lt;/</span>el-option&gt;</span><br><span class="line">            &lt;<span class="regexp">/el-option-group&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>el-select&gt;</span><br><span class="line">        &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">"el-icon-close"</span>  @click=<span class="string">"deleteField(item, index)"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">      &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>el-col&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">export default &#123;</span></span><br><span class="line"><span class="regexp">  props:&#123;</span></span><br><span class="line"><span class="regexp">    styleType: &#123;</span></span><br><span class="line"><span class="regexp">      default: 'dataSet', /</span><span class="regexp">/ icon | btn</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    formdataSet:&#123;</span></span><br><span class="line"><span class="regexp">      type: Array,</span></span><br><span class="line"><span class="regexp">      default() &#123;</span></span><br><span class="line"><span class="regexp">        return []</span></span><br><span class="line"><span class="regexp">      &#125;</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    formdata:&#123;</span></span><br><span class="line"><span class="regexp">      type: Array,</span></span><br><span class="line"><span class="regexp">      default() &#123;</span></span><br><span class="line"><span class="regexp">        return []</span></span><br><span class="line"><span class="regexp">      &#125;</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    fields:&#123;</span></span><br><span class="line"><span class="regexp">      type: Array,</span></span><br><span class="line"><span class="regexp">      default() &#123;</span></span><br><span class="line"><span class="regexp">        return []</span></span><br><span class="line"><span class="regexp">      &#125;</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    dataSetfield:&#123;</span></span><br><span class="line"><span class="regexp">      type: Array,</span></span><br><span class="line"><span class="regexp">      default() &#123;</span></span><br><span class="line"><span class="regexp">        return []</span></span><br><span class="line"><span class="regexp">      &#125;</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    charsList:&#123;</span></span><br><span class="line"><span class="regexp">      type: Array,</span></span><br><span class="line"><span class="regexp">      default() &#123;</span></span><br><span class="line"><span class="regexp">        return []</span></span><br><span class="line"><span class="regexp">      &#125;</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">  &#125;,</span></span><br><span class="line"><span class="regexp">  mounted()&#123;</span></span><br><span class="line"><span class="regexp">  &#125;,</span></span><br><span class="line"><span class="regexp">  methods: &#123;</span></span><br><span class="line"><span class="regexp">    deleteDataSet(val, index)&#123;</span></span><br><span class="line"><span class="regexp">      this.$emit('deleteDataSet', index, this.formdataSet);</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    deleteField(val, index)&#123;</span></span><br><span class="line"><span class="regexp">      this.$emit('deleteField', index, this.formdata);</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    handleSelect(item) &#123;</span></span><br><span class="line"><span class="regexp">      console.log(item);</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    deleteChars(val, index)&#123;</span></span><br><span class="line"><span class="regexp">      this.$emit('deleteChars', index, this.charsList);</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure><p><strong>三： 组件之间传值</strong></p><p>对于平级组件来说其实也一样，他们也需要一个中间介质来作为一个中央事件总线,</p><p>①建立一个公共的通信组件( Vue)，需要传值的组件里引入该通信组件</p><p>②在一个中绑定一个事件this.on(‘eventname’, this. id)</p><p>③在另一个组件中触发事件this.$ emit(‘eventname’,( options)=&gt;{})</p><p>一 .我们先来创建中央事件总线，在src/assets/下创建一个eventBus.js,内容如下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vue();</span><br><span class="line"><span class="comment">// eventBus中我们只创建了一个新的Vue实例，以后它就承担起了组件之间通信的桥梁了，也就是中央事件总线。</span></span><br></pre></td></tr></table></figure><p>二 . 创建一个firstChild组件，引入eventBus这个事件总线，接着添加一个按钮并绑定一个点击事件</p><p><img src="D:%5Chexo%5Csource_posts%5Canjing%5C1916203-c19c1e67938c927a.png" alt="1916203-c19c1e67938c927a"></p><p>我们在响应点击事件的sendMsg函数中用$emit触发了一个自定义的userDefinedEvent事件，并传递了一个字符串参数<br>PS:$emit实例方法触发当前实例(这里的当前实例就是bus)上的事件,附加参数都会传给监听器回调。</p><p>三 . 我们再创建一个secondChild组件，引入eventBus事件总线，并用一个p标签来显示传递过来的值</p><p><img src="D:%5Chexo%5Csource_posts%5Canjing%5C1916203-8d804a33faf2887d.png" alt="1916203-8d804a33faf2887d"></p><p>我们在mounted中，监听了userDefinedEvent,并把传递过来的字符串参数传递给了$on监听器的回调函数<br><strong>PS:</strong><br>mounted:是一个<strong>Vue生命周期中的钩子函数</strong>，简单点说就类似于jquery的ready，Vue会在文档加载完毕后调用mounted函数。<br>$on:监听当前实例上的自定义事件(此处当前实例为bus)。事件可以由$emit触发，回调函数会接收所有传入事件触发函数($emit)的额外参数。</p><p>四 . 在父组件中，注册这两个组件，并添加这两个组件的标签</p><p><img src="D:%5Chexo%5Csource_posts%5Canjing%5C1916203-761d1c793b3b3a97.png" alt="1916203-761d1c793b3b3a97"></p><ul><li>创建一个事件总线，例如demo中的eventBus，用它作为通信桥梁</li><li>在需要传值的组件中用bus.$emit触发一个自定义事件，并传递参数</li><li>在需要接收数据的组件中用bus.$on监听自定义事件，并在回调函数中处理传递过来的参</li></ul><h2 id="4-v-show和v-if指令的共同点和不同点？"><a href="#4-v-show和v-if指令的共同点和不同点？" class="headerlink" title="4.v-show和v-if指令的共同点和不同点？"></a>4.v-show和v-if指令的共同点和不同点？</h2><p>答: 共同点：都能控制元素的显示和隐藏；<br>不同点：实现本质方法不同，v-show本质就是通过控制css中的display设置为none，控制隐藏，只会编译一次；v-if是动态的向DOM树内添加或者删除DOM元素，若初始值为false，就不会编译了。而且v-if不停的销毁和创建比较消耗性能。<br>总结：如果要频繁切换某节点，使用v-show(切换开销比较小，初始开销较大)。如果不需要频繁切换某节点使用v-if（初始渲染开销较小，切换开销比较大）。</p><h2 id="5-如何让CSS只在当前组件中起作用？"><a href="#5-如何让CSS只在当前组件中起作用？" class="headerlink" title="5.如何让CSS只在当前组件中起作用？"></a>5.如何让CSS只在当前组件中起作用？</h2><p>答：在组件中的style前面加上scoped</p><h2 id="6-keep-alive的作用是什么"><a href="#6-keep-alive的作用是什么" class="headerlink" title="6.keep-alive的作用是什么?"></a>6.keep-alive的作用是什么?</h2><p>答:keep-alive 是 Vue 内置的一个组件，可以使被包含的组件保留状态，或避免重新渲染。</p><h2 id="7-如何获取dom"><a href="#7-如何获取dom" class="headerlink" title="7.如何获取dom?"></a>7.如何获取dom?</h2><p>答：ref=”domName” 用法：this.$refs.domName</p><h2 id="8-说出几种vue当中的指令和它的用法？"><a href="#8-说出几种vue当中的指令和它的用法？" class="headerlink" title="8.说出几种vue当中的指令和它的用法？"></a>8.说出几种vue当中的指令和它的用法？</h2><p>答：v-model双向数据绑定；<br>v-for循环；<br>v-if v-show 显示与隐藏；<br>v-on事件；v-once: 只绑定一次。</p><h2 id="9-vue-loader是什么？使用它的用途有哪些？"><a href="#9-vue-loader是什么？使用它的用途有哪些？" class="headerlink" title="9. vue-loader是什么？使用它的用途有哪些？"></a>9. vue-loader是什么？使用它的用途有哪些？</h2><p>答：vue文件的一个加载器，将template/js/style转换成js模块。<br>用途：js可以写es6、style样式可以scss或less、template可以加jade等</p><h2 id="10-为什么使用key"><a href="#10-为什么使用key" class="headerlink" title="10.为什么使用key?"></a>10.为什么使用key?</h2><p>答：需要使用key来给每个节点做一个唯一标识，Diff算法就可以正确的识别此节点。<br>作用主要是为了高效的更新虚拟DOM。</p><h2 id="11-axios及安装"><a href="#11-axios及安装" class="headerlink" title="11.axios及安装?"></a>11.axios及安装?</h2><p>答：请求后台资源的模块。npm install axios –save装好，<br>js中使用import进来，然后.get或.post。返回在.then函数中如果成功，失败则是在.catch函数中。</p><ul><li>从浏览器中创建 XMLHttpRequests</li><li>从 node.js 创建 http 请求</li><li>支持 Promise API</li><li>拦截请求和响应</li><li>转换请求数据和响应数据</li><li>取消请求</li><li>自动转换 JSON 数据</li><li>客户端支持防御 XSRF</li></ul><h2 id="12-v-model的使用。"><a href="#12-v-model的使用。" class="headerlink" title="12.v-model的使用。"></a>12.v-model的使用。</h2><p>答：v-model用于表单数据的双向绑定，其实它就是一个语法糖，这个背后就做了两个操作：<br>v-bind绑定一个value属性；<br>v-on指令给当前元素绑定input事件。</p><p>以 input 表单元素为例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input v-model=<span class="string">'something'</span>&gt;</span><br></pre></td></tr></table></figure><p>相当于</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input v-bind:value=<span class="string">"something"</span> v-on:input=<span class="string">"something = $event.target.value"</span>&gt;</span><br></pre></td></tr></table></figure><h2 id="13-请说出vue-cli项目中src目录每个文件夹和文件的用法？"><a href="#13-请说出vue-cli项目中src目录每个文件夹和文件的用法？" class="headerlink" title="13.请说出vue.cli项目中src目录每个文件夹和文件的用法？"></a>13.请说出vue.cli项目中src目录每个文件夹和文件的用法？</h2><p>答：assets文件夹是放静态资源；components是放组件；router是定义路由相关的配置; app.vue是一个应用主组件；main.js是入口文件。</p><h2 id="14-分别简述computed和watch的使用场景"><a href="#14-分别简述computed和watch的使用场景" class="headerlink" title="14.分别简述computed和watch的使用场景"></a>14.分别简述computed和watch的使用场景</h2><p>computed:<br>　　　　当一个属性受多个属性影响的时候就需要用到computed<br>　　　　最典型的栗子： 购物车商品结算的时候<br>watch:<br>　　　　当一条数据影响多条数据的时候就需要用watch<br>　　　　栗子：搜索数据</p><h2 id="15-v-on可以监听多个方法吗？"><a href="#15-v-on可以监听多个方法吗？" class="headerlink" title="15.v-on可以监听多个方法吗？"></a>15.v-on可以监听多个方法吗？</h2><p>可以，<input type="text" v-on="{ input:onInput,focus:onFocus,blur:onBlur, }">。</p><h2 id="16-nextTick的使用"><a href="#16-nextTick的使用" class="headerlink" title="16.$nextTick的使用"></a>16.$nextTick的使用</h2><p>答：当你修改了data的值然后马上获取这个dom元素的值，是不能获取到更新后的值，<br>你需要使用$nextTick这个回调，让修改后的data值渲染更新到dom元素之后在获取，才能成功。<br><strong>17.vue组件中data为什么必须是一个函数？</strong><br>答：因为JavaScript的特性所导致，在component中，data必须以函数的形式存在，不可以是对象。<br>　　组建中的data写成一个函数，数据以函数返回值的形式定义，这样每次复用组件的时候，都会返回一份新的data，相当于每个组件实例都有自己私有的数据空间，它们只负责各自维护的数据，不会造成混乱。而单纯的写成对象形式，就是所有的组件实例共用了一个data，这样改一个全都改了。</p><h2 id="18-渐进式框架的理解"><a href="#18-渐进式框架的理解" class="headerlink" title="18.渐进式框架的理解"></a>18.渐进式框架的理解</h2><p>答：主张最少；可以根据不同的需求选择不同的层级；</p><h2 id="19-Vue中双向数据绑定是如何实现的？"><a href="#19-Vue中双向数据绑定是如何实现的？" class="headerlink" title="19.Vue中双向数据绑定是如何实现的？"></a>19.Vue中双向数据绑定是如何实现的？</h2><p>答：vue 双向数据绑定是通过 数据劫持 结合 发布订阅模式的方式来实现的， 也就是说数据和视图同步，数据发生变化，视图跟着变化，视图变化，数据也随之发生改变；<br>核心：关于VUE双向数据绑定，其核心是 Object.defineProperty()方法。</p><h2 id="20-单页面应用和多页面应用区别及优缺点"><a href="#20-单页面应用和多页面应用区别及优缺点" class="headerlink" title="20.单页面应用和多页面应用区别及优缺点"></a>20.单页面应用和多页面应用区别及优缺点</h2><p>答：单页面应用（SPA），通俗一点说就是指只有一个主页面的应用，浏览器一开始要加载所有必须的 html, js, css。所有的页面内容都包含在这个所谓的主页面中。但在写的时候，还是会分开写（页面片段），然后在交互的时候由路由程序动态载入，单页面的页面跳转，仅刷新局部资源。多应用于pc端。<br>多页面（MPA），就是指一个应用中有多个页面，页面跳转时是整页刷新<br>单页面的优点：<br>用户体验好，快，内容的改变不需要重新加载整个页面，基于这一点spa对服务器压力较小；前后端分离；页面效果会比较炫酷（比如切换页面内容时的专场动画）。<br>单页面缺点：<br>不利于seo；导航不可用，如果一定要导航需要自行实现前进、后退。（由于是单页面不能用浏览器的前进后退功能，所以需要自己建立堆栈管理）；初次加载时耗时多；页面复杂度提高很多。</p><h2 id="21-v-if和v-for的优先级"><a href="#21-v-if和v-for的优先级" class="headerlink" title="21.v-if和v-for的优先级"></a>21.v-if和v-for的优先级</h2><p>答：当 v-if 与 v-for 一起使用时，v-for 具有比 v-if 更高的优先级，这意味着 v-if 将分别重复运行于每个 v-for 循环中。所以，不推荐v-if和v-for同时使用。<br>如果v-if和v-for一起用的话，vue中的的会自动提示v-if应该放到外层去。</p><h2 id="22-assets和static的区别"><a href="#22-assets和static的区别" class="headerlink" title="22.assets和static的区别"></a>22.assets和static的区别</h2><p>答：相同点：assets和static两个都是存放静态资源文件。项目中所需要的资源文件图片，字体图标，样式文件等都可以放在这两个文件下，这是相同点<br>不相同点：assets中存放的静态资源文件在项目打包时，也就是运行npm run build时会将assets中放置的静态资源文件进行打包上传，所谓打包简单点可以理解为压缩体积，代码格式化。而压缩后的静态资源文件最终也都会放置在static文件中跟着index.html一同上传至服务器。static中放置的静态资源文件就不会要走打包压缩格式化等流程，而是直接进入打包好的目录，直接上传至服务器。因为避免了压缩直接进行上传，在打包时会提高一定的效率，但是static中的资源文件由于没有进行压缩等操作，所以文件的体积也就相对于assets中打包后的文件提交较大点。在服务器中就会占据更大的空间。<br>建议：将项目中template需要的样式文件js文件等都可以放置在assets中，走打包这一流程。减少体积。而项目中引入的第三方的资源文件如iconfoont.css等文件可以放置在static中，因为这些引入的第三方文件已经经过处理，我们不再需要处理，直接上传。</p><h2 id="23-vue常用的修饰符"><a href="#23-vue常用的修饰符" class="headerlink" title="23.vue常用的修饰符"></a>23.vue常用的修饰符</h2><p>答：.stop：等同于JavaScript中的event.stopPropagation()，防止事件冒泡；<br>.prevent：等同于JavaScript中的event.preventDefault()，防止执行预设的行为（如果事件可取消，则取消该事件，而不停止事件的进一步传播）；<br>.capture：与事件冒泡的方向相反，事件捕获由外到内；<br>.self：只会触发自己范围内的事件，不包含子元素；<br>.once：只会触发一次。</p><h2 id="24-vue的两个核心点"><a href="#24-vue的两个核心点" class="headerlink" title="24.vue的两个核心点"></a>24.vue的两个核心点</h2><p>答：数据驱动、组件系统<br>数据驱动：ViewModel，保证数据和视图的一致性。<br>组件系统：应用类UI可以看作全部是由组件树构成的。</p><h2 id="25-vue和jQuery的区别"><a href="#25-vue和jQuery的区别" class="headerlink" title="25.vue和jQuery的区别"></a>25.vue和jQuery的区别</h2><p>答：jQuery是使用选择器（$）选取DOM对象，对其进行赋值、取值、事件绑定等操作，其实和原生的HTML的区别只在于可以更方便的选取和操作DOM对象，而数据和界面是在一起的。比如需要获取label标签的内容：$(“lable”).val();,它还是依赖DOM元素的值。<br>Vue则是通过Vue对象将数据和View完全分离开来了。对数据进行操作不再需要引用相应的DOM对象，可以说数据和View是分离的，他们通过Vue对象这个vm实现相互的绑定。这就是传说中的MVVM。</p><h2 id="26-引进组件的步骤"><a href="#26-引进组件的步骤" class="headerlink" title="26. 引进组件的步骤"></a>26. 引进组件的步骤</h2><p>答: 在template中引入组件；<br>在script的第一行用import引入路径；<br>用component中写上组件名称。</p><h2 id="27-delete和Vue-delete删除数组的区别"><a href="#27-delete和Vue-delete删除数组的区别" class="headerlink" title="27.delete和Vue.delete删除数组的区别"></a>27.delete和Vue.delete删除数组的区别</h2><p>答：delete只是被删除的元素变成了 empty/undefined 其他的元素的键值还是不变。Vue.delete 直接删除了数组 改变了数组的键值。</p><h2 id="28-SPA首屏加载慢如何解决"><a href="#28-SPA首屏加载慢如何解决" class="headerlink" title="28.SPA首屏加载慢如何解决"></a>28.SPA首屏加载慢如何解决</h2><p>答：安装动态懒加载所需插件；使用CDN资源。</p><h2 id="29-Vue-router跳转和location-href有什么区别"><a href="#29-Vue-router跳转和location-href有什么区别" class="headerlink" title="29.Vue-router跳转和location.href有什么区别"></a>29.Vue-router跳转和location.href有什么区别</h2><p>答：使用location.href=’/url’来跳转，简单方便，但是刷新了页面；<br>使用history.pushState(‘/url’)，无刷新页面，静态跳转；<br>引进router，然后使用router.push(‘/url’)来跳转，使用了diff算法，实现了按需加载，减少了dom的消耗。<br>其实使用router跳转和使用history.pushState()没什么差别的，因为vue-router就是用了history.pushState()，尤其是在history模式下。</p><h2 id="30-vue-slot"><a href="#30-vue-slot" class="headerlink" title="30. vue slot"></a>30. vue slot</h2><p>答：简单来说，假如父组件需要在子组件内放一些DOM，那么这些DOM是显示、不显示、在哪个地方显示、如何显示，就是slot分发负责的活。</p><h2 id="31-你们vue项目是打包了一个js文件，一个css文件，还是有多个文件？"><a href="#31-你们vue项目是打包了一个js文件，一个css文件，还是有多个文件？" class="headerlink" title="31.你们vue项目是打包了一个js文件，一个css文件，还是有多个文件？"></a>31.你们vue项目是打包了一个js文件，一个css文件，还是有多个文件？</h2><p>答：根据vue-cli脚手架规范，一个js文件，一个CSS文件。</p><h2 id="32-Vue里面router-link在电脑上有用，在安卓上没反应怎么解决？"><a href="#32-Vue里面router-link在电脑上有用，在安卓上没反应怎么解决？" class="headerlink" title="32.Vue里面router-link在电脑上有用，在安卓上没反应怎么解决？"></a>32.Vue里面router-link在电脑上有用，在安卓上没反应怎么解决？</h2><p>答：Vue路由在Android机上有问题，babel问题，安装babel polypill插件解决。</p><p>父组件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"crootbox"</span>&gt;</span><br><span class="line">&lt;v-anchor :list=list&gt;</span><br><span class="line">&lt;template v-slot&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">&lt;div id=<span class="string">"anchor-1"</span>&gt;</span><br><span class="line">&lt;img src=<span class="string">"@/assets/images/details1.jpg"</span> width=<span class="string">"100%"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">&lt;img src=<span class="string">"@/assets/images/details2.jpg"</span> width=<span class="string">"100%"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">&lt;img src=<span class="string">"@/assets/images/details3.jpg"</span> width=<span class="string">"100%"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>v-anchor&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">import</span> Vanchor <span class="keyword">from</span> <span class="string">'@/views/product/v_anchor.vue'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">name: <span class="string">"prd-details"</span>,</span><br><span class="line">components: &#123; </span><br><span class="line">           [Vanchor.name]: Vanchor,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>子组件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line"> &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"anchor-box"</span>&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"anchor-nav"</span>&gt;</span><br><span class="line">&lt;a </span><br><span class="line">href=<span class="string">"javascript:void(0)"</span> </span><br><span class="line">rel=<span class="string">"external nofollow"</span> </span><br><span class="line">@click=<span class="string">"goAnchor('#anchor-'+item.index, item.index)"</span></span><br><span class="line">v-<span class="keyword">for</span>=<span class="string">"item in list"</span> </span><br><span class="line">:key=<span class="string">"item.index"</span></span><br><span class="line">:<span class="class"><span class="keyword">class</span></span>=<span class="string">"item.index == activeClass ? 'active' : ''"</span></span><br><span class="line">&gt;</span><br><span class="line">&#123;&#123;item.name&#125;&#125;</span><br><span class="line">&lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"anchor-content"</span>&gt;</span><br><span class="line">&lt;slot&gt;<span class="xml"><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br></pre></td></tr></table></figure><h2 id="33-Vue2中注册在router-link上事件无效解决方法"><a href="#33-Vue2中注册在router-link上事件无效解决方法" class="headerlink" title="33.Vue2中注册在router-link上事件无效解决方法"></a>33.Vue2中注册在router-link上事件无效解决方法</h2><p>答： 使用@click.native。原因：router-link会阻止click事件，.native指直接监听一个原生事件。</p><h2 id="34-RouterLink在IE和Firefox中不起作用（路由不跳转）的问题"><a href="#34-RouterLink在IE和Firefox中不起作用（路由不跳转）的问题" class="headerlink" title="34.RouterLink在IE和Firefox中不起作用（路由不跳转）的问题"></a>34.RouterLink在IE和Firefox中不起作用（路由不跳转）的问题</h2><p>答: 方法一：只用a标签，不适用button标签；方法二：使用button标签和Router.navigate方法</p><h2 id="35-axios的特点有哪些"><a href="#35-axios的特点有哪些" class="headerlink" title="35.axios的特点有哪些"></a>35.axios的特点有哪些</h2><p>答：从浏览器中创建XMLHttpRequests；<br>node.js创建http请求；<br>支持Promise API；<br>拦截请求和响应；<br>转换请求数据和响应数据；<br>取消请求；<br>自动换成json。<br>axios中的发送字段的参数是data跟params两个，两者的区别在于params是跟请求地址一起发送的，data的作为一个请求体进行发送<br>params一般适用于get请求，data一般适用于post put 请求。</p><h2 id="36-请说下封装-vue-组件的过程？"><a href="#36-请说下封装-vue-组件的过程？" class="headerlink" title="36.请说下封装 vue 组件的过程？"></a>36.请说下封装 vue 组件的过程？</h2><p>答：1. 建立组件的模板，先把架子搭起来，写写样式，考虑好组件的基本逻辑。(os：思考1小时，码码10分钟，程序猿的准则。)</p><p>　　2. 准备好组件的数据输入。即分析好逻辑，定好 props 里面的数据、类型。<br>　　3. 准备好组件的数据输出。即根据组件逻辑，做好要暴露出来的方法。<br>　　4. 封装完毕了，直接调用即可</p><h2 id="37-params和query的区别"><a href="#37-params和query的区别" class="headerlink" title="37.params和query的区别"></a>37.params和query的区别</h2><p>答：用法：query要用path来引入，params要用name来引入，接收参数都是类似的，分别是this.$route.query.name和this.$route.params.name。<br>url地址显示：query更加类似于我们ajax中get传参，params则类似于post，说的再简单一点，前者在浏览器地址栏中显示参数，后者则不显示<br>注意点：query刷新不会丢失query里面的数据<br>params刷新 会 丢失 params里面的数据。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//query要用path来引入</span></span><br><span class="line">      <span class="keyword">this</span>.$router.push(&#123;</span><br><span class="line">          path: <span class="string">"/resbindex"</span>,</span><br><span class="line">          query: &#123;</span><br><span class="line">            menuId: <span class="keyword">this</span>.searchList.menuIds,</span><br><span class="line">            parentId: <span class="keyword">this</span>.searchList.menuIds,</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"><span class="comment">//params要用name来引入</span></span><br><span class="line">        <span class="keyword">this</span>.$router.push(&#123;</span><br><span class="line">          name: <span class="string">"resbindex"</span>,</span><br><span class="line">          params: &#123;</span><br><span class="line">            menuId: <span class="keyword">this</span>.searchList.menuIds,</span><br><span class="line">            parentId: <span class="keyword">this</span>.searchList.menuIds,</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><h2 id="38-vue初始化页面闪动问题"><a href="#38-vue初始化页面闪动问题" class="headerlink" title="38.vue初始化页面闪动问题"></a>38.vue初始化页面闪动问题</h2><p>答：使用vue开发时，在vue初始化之前，由于div是不归vue管的，所以我们写的代码在还没有解析的情况下会容易出现花屏现象，看到类似于的字样，虽然一般情况下这个时间很短暂，但是我们还是有必要让解决这个问题的。<br>首先：在css里加上[v-cloak] {<br>display: none;<br>}。<br>如果没有彻底解决问题，则在根元素加上style=”display: none;” :style=”{display: ‘block’}”</p><h2 id="39-vue更新数组时触发视图更新的方法"><a href="#39-vue更新数组时触发视图更新的方法" class="headerlink" title="39.vue更新数组时触发视图更新的方法"></a>39.vue更新数组时触发视图更新的方法</h2><p>答:push()；pop()；shift()；unshift()；splice()； sort()；reverse()</p><h2 id="40-vue常用的UI组件库"><a href="#40-vue常用的UI组件库" class="headerlink" title="40.vue常用的UI组件库"></a>40.vue常用的UI组件库</h2><p>答：Mint UI，element，VUX</p><h2 id="41-vue修改打包后静态资源路径的修改"><a href="#41-vue修改打包后静态资源路径的修改" class="headerlink" title="41.vue修改打包后静态资源路径的修改"></a>41.vue修改打包后静态资源路径的修改</h2><p>答：cli2版本：将 config/index.js 里的 assetsPublicPath 的值改为 ‘./‘ 。<br>build: {<br>…<br>assetsPublicPath: ‘./‘,<br>…<br>}<br>cli3版本：在根目录下新建vue.config.js 文件，然后加上以下内容：（如果已经有此文件就直接修改）<br>module.exports = {<br>publicPath: ‘’, // 相对于 HTML 页面（目录相同） }</p><h2 id="42-Class-与-Style-如何动态绑定？"><a href="#42-Class-与-Style-如何动态绑定？" class="headerlink" title="42.Class 与 Style 如何动态绑定？"></a>42.Class 与 Style 如何动态绑定？</h2><p>Class 可以通过对象语法和数组语法进行动态绑定</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line"> &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"anchor-box"</span>&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"anchor-nav"</span>&gt;</span><br><span class="line">&lt;a </span><br><span class="line">href=<span class="string">"javascript:void(0)"</span> </span><br><span class="line">rel=<span class="string">"external nofollow"</span> </span><br><span class="line">@click=<span class="string">"goAnchor('#anchor-'+item.index, item.index)"</span></span><br><span class="line">v-<span class="keyword">for</span>=<span class="string">"item in list"</span> </span><br><span class="line">:key=<span class="string">"item.index"</span></span><br><span class="line">:<span class="class"><span class="keyword">class</span></span>=<span class="string">"item.index == activeClass ? 'active' : ''"</span></span><br><span class="line">&gt;</span><br><span class="line">&#123;&#123;item.name&#125;&#125;</span><br><span class="line">&lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">name: <span class="string">'v-anchor'</span>,</span><br><span class="line">props: &#123;</span><br><span class="line">list: &#123;</span><br><span class="line">type: <span class="built_in">Array</span>,</span><br><span class="line"><span class="keyword">default</span>: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">return</span> []</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">data()&#123;</span><br><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line">activeClass: <span class="number">1</span>,</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line">goAnchor(selector, index) &#123;</span><br><span class="line"><span class="keyword">this</span>.activeClass = index;</span><br><span class="line"><span class="keyword">var</span> anchor = <span class="keyword">this</span>.$el.querySelector(selector)</span><br><span class="line"><span class="keyword">var</span> content = <span class="keyword">this</span>.$el.querySelector(<span class="string">'.anchor-content'</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;style lang="scss" scoped&gt;</span></span><br><span class="line"><span class="regexp">.anchor-nav &#123;</span></span><br><span class="line"><span class="regexp">width: 100%;</span></span><br><span class="line"><span class="regexp">height: 0.4rem;</span></span><br><span class="line"><span class="regexp">line-height: 0.4rem;</span></span><br><span class="line"><span class="regexp">display: flex;</span></span><br><span class="line"><span class="regexp">justify-content: space-between;</span></span><br><span class="line"><span class="regexp">background-color: #fff;</span></span><br><span class="line"><span class="regexp">margin-bottom: 0.1rem;</span></span><br><span class="line"><span class="regexp">position: fixed;</span></span><br><span class="line"><span class="regexp">a &#123;</span></span><br><span class="line"><span class="regexp">color: $gray-8;</span></span><br><span class="line"><span class="regexp">font-size: 0.14rem;</span></span><br><span class="line"><span class="regexp">text-align: center;</span></span><br><span class="line"><span class="regexp">display: inline-block;</span></span><br><span class="line"><span class="regexp">flex: 1;</span></span><br><span class="line"><span class="regexp">&amp;.active &#123;</span></span><br><span class="line"><span class="regexp">color: $green;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>style&gt;</span><br></pre></td></tr></table></figure><p>数组语法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-bind:<span class="class"><span class="keyword">class</span></span>=<span class="string">"[isActive ? activeClass : '', errorClass]"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">data: &#123;</span><br><span class="line">  activeClass: <span class="string">'active'</span>,</span><br><span class="line">  errorClass: <span class="string">'text-danger'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Style 也可以通过对象语法和数组语法进行动态绑定：</p><p>对象语法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-bind:style=<span class="string">"&#123; color: activeColor, fontSize: fontSize + 'px' &#125;"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">data: &#123;</span><br><span class="line">  activeColor: <span class="string">'red'</span>,</span><br><span class="line">  fontSize: <span class="number">30</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数组语法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-bind:style=<span class="string">"[styleColor, styleSize]"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">data: &#123;</span><br><span class="line">  styleColor: &#123;</span><br><span class="line">     color: <span class="string">'red'</span></span><br><span class="line">   &#125;,</span><br><span class="line">  styleSize:&#123;</span><br><span class="line">     fontSize:<span class="string">'23px'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="43、对于MVVM的理解？"><a href="#43、对于MVVM的理解？" class="headerlink" title="43、对于MVVM的理解？"></a>43、对于MVVM的理解？</h2><p>MVVM 是 Model-View-ViewModel 的缩写。<br><strong>Model</strong>代表数据模型，也可以在Model中定义数据修改和操作的业务逻辑。<br><strong>View</strong> 代表UI 组件，它负责将数据模型转化成UI 展现出来。<br><strong>ViewModel</strong> 监听模型数据的改变和控制视图行为、处理用户交互，简单理解就是一个同步View 和 Model的对象，连接Model和View。<br>在MVVM架构下，View 和 Model 之间并没有直接的联系，而是通过ViewModel进行交互，Model 和 ViewModel 之间的交互是双向的， 因此View 数据的变化会同步到Model中，而Model 数据的变化也会立即反应到View 上。<br><strong>ViewModel</strong> 通过双向数据绑定把 View 层和 Model 层连接了起来，而View 和 Model 之间的同步工作完全是自动的，无需人为干涉，因此开发者只需关注业务逻辑，不需要手动操作DOM, 不需要关注数据状态的同步问题，复杂的数据状态维护完全由 MVVM 来统一管理。</p><h2 id="44、Vue路由跳转方式有哪几种？"><a href="#44、Vue路由跳转方式有哪几种？" class="headerlink" title="44、Vue路由跳转方式有哪几种？"></a>44、Vue路由跳转方式有哪几种？</h2><p>1.router-link</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">**不带参数** </span><br><span class="line">&lt;router-link :to=<span class="string">"&#123;name:'home'&#125;"</span>&gt; </span><br><span class="line">&lt;router-link :to=<span class="string">"&#123;path:'/home'&#125;"</span>&gt; <span class="comment">//name,path都行, 建议用name  </span></span><br><span class="line"><span class="comment">// 注意：router-link中链接如果是'/'开始就是从根路由开始，如果开始不带'/'，则从当前路由开始。 </span></span><br><span class="line">带参数</span><br><span class="line">&lt;router-link :to=<span class="string">"&#123;name:'home', params: &#123;id:1&#125;&#125;"</span>&gt;       </span><br><span class="line"><span class="comment">// params传参数 (类似post)</span></span><br><span class="line"><span class="comment">// 路由配置 path: "/home/:id" 或者 path: "/home:id" </span></span><br><span class="line"><span class="comment">// 不配置path ,第一次可请求,刷新页面id会消失</span></span><br><span class="line"><span class="comment">// 配置path,刷新页面id会保留     </span></span><br><span class="line"><span class="comment">// html 取参  $route.params.id</span></span><br><span class="line"><span class="comment">// script 取参  this.$route.params.id </span></span><br><span class="line">&lt;router-link :to=<span class="string">"&#123;name:'home', query: &#123;id:1&#125;&#125;"</span>&gt; </span><br><span class="line"><span class="comment">// query传参数 (类似get,url后面会显示参数)</span></span><br><span class="line"><span class="comment">// 路由可不配置</span></span><br><span class="line"><span class="comment">// html 取参  $route.query.id</span></span><br><span class="line"><span class="comment">// script 取参  this.$route.query.id</span></span><br></pre></td></tr></table></figure><p>2.this.$router.push() (函数里面调用)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">不带参数 </span><br><span class="line"><span class="keyword">this</span>.$router.push(<span class="string">'/home'</span>)</span><br><span class="line"><span class="keyword">this</span>.$router.push(&#123;<span class="attr">name</span>:<span class="string">'home'</span>&#125;)</span><br><span class="line"><span class="keyword">this</span>.$router.push(&#123;<span class="attr">path</span>:<span class="string">'/home'</span>&#125;)</span><br><span class="line">query传参 </span><br><span class="line"><span class="keyword">this</span>.$router.push(&#123;<span class="attr">name</span>:<span class="string">'home'</span>,<span class="attr">query</span>: &#123;<span class="attr">id</span>:<span class="string">'1'</span>&#125;&#125;)</span><br><span class="line"><span class="keyword">this</span>.$router.push(&#123;<span class="attr">path</span>:<span class="string">'/home'</span>,<span class="attr">query</span>: &#123;<span class="attr">id</span>:<span class="string">'1'</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><p>2.1 params传参</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.$router.push(&#123;<span class="attr">name</span>:<span class="string">'home'</span>,<span class="attr">params</span>: &#123;<span class="attr">id</span>:<span class="string">'1'</span>&#125;&#125;)  <span class="comment">// 只能用 name</span></span><br><span class="line"><span class="comment">// 路由配置 path: "/home/:id" 或者 path: "/home:id" ,</span></span><br><span class="line"><span class="comment">// 不配置path ,第一次可请求,刷新页面id会消失</span></span><br><span class="line"><span class="comment">// 配置path,刷新页面id会保留</span></span><br><span class="line"><span class="comment">// html 取参  $route.params.id</span></span><br><span class="line"><span class="comment">// script 取参  this.$route.params.id</span></span><br></pre></td></tr></table></figure><h2 id="45-route和router的区别"><a href="#45-route和router的区别" class="headerlink" title="45.route和router的区别"></a>45.route和router的区别</h2><p>答：是路由信息对象，包括，path，params，hash，query，fullPath，mathched,name等路由信息参数。而router是“路由实例”对象包括了路由的跳转方法，钩子函数等。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-什么是单页面应用，有什么优缺点？&quot;&gt;&lt;a href=&quot;#1-什么是单页面应用，有什么优缺点？&quot; class=&quot;headerlink&quot; title=&quot;1.什么是单页面应用，有什么优缺点？&quot;&gt;&lt;/a&gt;1.什么是单页面应用，有什么优缺点？&lt;/h2&gt;&lt;p&gt;SPA——–
      
    
    </summary>
    
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>vue-router导航钩子</title>
    <link href="http://yoursite.com/2020/03/21/vue-router%E5%AF%BC%E8%88%AA%E9%92%A9%E5%AD%90/"/>
    <id>http://yoursite.com/2020/03/21/vue-router导航钩子/</id>
    <published>2020-03-21T08:16:20.000Z</published>
    <updated>2020-03-22T06:51:38.158Z</updated>
    
    <content type="html"><![CDATA[<p>vue-router 的导航钩子，主要用来作用是拦截导航，判断用户是否登录跳转登录页面还是主页面，判断管理员权限，判断页面是否存在，不存在跳转404页面，<br>优点：能适用多钟情况，体验感好，。</p><p><strong>1.全局导航钩子</strong></p><p>全局导航钩子主要有两种钩子：前置守卫、后置钩子，</p><p>注册一个全局前置守卫：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">router.beforeEach(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="comment">// to: Route: 即将要进入的目标 路由对象</span></span><br><span class="line"><span class="comment">// from: Route: 当前导航正要离开的路由</span></span><br><span class="line"><span class="comment">// next: Function: 一定要调用该方法来 resolve 这个钩子。执行效果依赖 next 方法的调用参数。</span></span><br><span class="line"><span class="keyword">const</span> token = getToken();<span class="comment">// 是否登录</span></span><br><span class="line"><span class="comment">// 未登录状态；当路由到route指定页时，跳转至login</span></span><br><span class="line"><span class="keyword">if</span> (!token &amp;&amp; to.name !==<span class="string">'login'</span>) &#123;</span><br><span class="line">router.push(&#123; <span class="attr">path</span>: <span class="string">'/login'</span>, &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 已登录状态；当路由到login时，跳转至home </span></span><br><span class="line"><span class="keyword">if</span> (to.name === <span class="string">'login'</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (token != <span class="literal">null</span>) &#123;</span><br><span class="line">    router.push(&#123; <span class="attr">path</span>: <span class="string">'/Home'</span>, &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">next();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>beforeEach函数有三个参数：<br>to: Route，代表要进入的目标，它是一个路由对象<br>from: Route，代表当前正要离开的路由，同样也是一个路由对象<br>next: Function，这是一个必须需要调用的方法，而具体的执行效果则依赖 next 方法调用的参数</p><ul><li><p>next()：进入管道中的下一个钩子，如果全部的钩子执行完了，则导航的状态就是 confirmed（确认的）</p></li><li><p>next(false)：这代表中断掉当前的导航，即 to 代表的路由对象不会进入，被中断，此时该表 URL 地址会被重置到 from 路由对应的地址</p></li><li><p>next(‘/’) 和 next({path: ‘/’})：在中断掉当前导航的同时，跳转到一个不同的地址</p></li><li><p>next(error)：如果传入参数是一个 Error 实例，那么导航被终止的同时会将错误传递给 router.onError() 注册过的回调</p></li></ul><p>全局后置钩子：</p><p>afterEach只有两个参数  afterEach((to,from)=&gt;{})</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">router.afterEach(<span class="function">(<span class="params">to,<span class="keyword">from</span></span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(to.path === <span class="string">"/list"</span>)&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(<span class="string">"后置钩子"</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>2. 路由独享的钩子</strong></p><p>顾名思义，即单个路由独享的导航钩子，它是在路由配置上直接进行定义的：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cont router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">    routes: [</span><br><span class="line">        &#123;</span><br><span class="line">            path: <span class="string">'/order'</span>,</span><br><span class="line">            component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">"@/views/payment/pay_order.vue"</span>),,</span><br><span class="line">            beforeEnter: <span class="function">(<span class="params">to, <span class="keyword">from</span> ,next</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="comment">// do someting</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>3.组件内的导航钩子</strong></p><p>组件内的导航钩子主要有这三种：beforeRouteEnter、beforeRouteUpdate、beforeRouteLeave。他们是直接在路由组件内部直接进行定义的</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">beforeRouteEnter(to, <span class="keyword">from</span>, next) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="string">'beforeRouteEnter'</span>); <span class="comment">// undefined</span></span><br><span class="line">  <span class="built_in">console</span>.log(to, <span class="string">'组件独享守卫beforeRouteEnter第一个参数'</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">from</span>, <span class="string">'组件独享守卫beforeRouteEnter第二个参数'</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(next, <span class="string">'组件独享守卫beforeRouteEnter第三个参数'</span>);</span><br><span class="line">  next(<span class="function"><span class="params">vm</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//因为当钩子执行前，组件实例还没被创建</span></span><br><span class="line">  <span class="comment">// vm 就是当前组件的实例相当于上面的 this，所以在 next 方法里你就可以把 vm 当 this 来用了。</span></span><br><span class="line">    <span class="built_in">console</span>.log(vm);<span class="comment">//当前组件的实例</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">if</span>(<span class="keyword">from</span>.name === <span class="string">'payInfo'</span>) &#123; <span class="comment">//判断是从哪个路由过来的，若是detail页面不需要刷新获取新数据，直接用之前缓存的数据即可</span></span><br><span class="line">      to.meta.isBack = <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  next();</span><br><span class="line">&#125;,</span><br><span class="line">beforeRouteUpdate(to, <span class="keyword">from</span>, next) &#123;</span><br><span class="line">  <span class="comment">// 可以访问组件实例 `this`</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="string">'beforeRouteUpdate'</span>); <span class="comment">//当前组件实例</span></span><br><span class="line">  <span class="built_in">console</span>.log(to, <span class="string">'组件独享守卫beforeRouteUpdate第一个参数'</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">from</span>, <span class="string">'组件独享守beforeRouteUpdate卫第二个参数'</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(next, <span class="string">'组件独享守beforeRouteUpdate卫第三个参数'</span>);</span><br><span class="line">  next();</span><br><span class="line">&#125;,</span><br><span class="line">beforeRouteLeave(to, <span class="keyword">from</span>, next) &#123;</span><br><span class="line">  <span class="comment">// 导航离开该组件的对应路由时调用</span></span><br><span class="line">  <span class="comment">// 可以访问组件实例 `this`</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="string">'beforeRouteLeave'</span>); <span class="comment">//当前组件实例</span></span><br><span class="line">  <span class="built_in">console</span>.log(to, <span class="string">'组件独享守卫beforeRouteLeave第一个参数'</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">from</span>, <span class="string">'组件独享守卫beforeRouteLeave第二个参数'</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(next, <span class="string">'组件独享守卫beforeRouteLeave第三个参数'</span>);</span><br><span class="line">  next();</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p><strong>完整的路由导航解析流程(不包括其他生命周期)：</strong></p><ol><li>触发进入其他路由。</li><li>调用要离开路由的组件守卫<code>beforeRouteLeave</code></li><li>调用局前置守卫：<code>beforeEach</code></li><li>在重用的组件里调用 <code>beforeRouteUpdate</code></li><li>调用路由独享守卫 <code>beforeEnter</code>。</li><li>解析异步路由组件。</li><li>在将要进入的路由组件中调用<code>beforeRouteEnter</code></li><li>调用全局解析守卫 <code>beforeResolve</code></li><li>导航被确认。</li><li>调用全局后置钩子的 <code>afterEach</code>钩子。</li><li>触发DOM更新(<code>mounted</code>)。</li><li>执行<code>beforeRouteEnter</code>守卫中传给 next 的回调函数</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;vue-router 的导航钩子，主要用来作用是拦截导航，判断用户是否登录跳转登录页面还是主页面，判断管理员权限，判断页面是否存在，不存在跳转404页面，&lt;br&gt;优点：能适用多钟情况，体验感好，。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.全局导航钩子&lt;/strong&gt;&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>vue生命周期</title>
    <link href="http://yoursite.com/2020/03/20/vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
    <id>http://yoursite.com/2020/03/20/vue生命周期/</id>
    <published>2020-03-20T03:10:20.000Z</published>
    <updated>2020-03-22T08:55:49.174Z</updated>
    
    <content type="html"><![CDATA[<p>Vue 实例从创建到销毁的过程，就是生命周期。也就是从开始创建、初始化数据、编译模板、挂载Dom→渲染、更新→渲染、卸载等一系列过程，我们称这是 Vue 的生命周期。</p><p><img src="D:%5Chexo%5Csource_posts%5Canjing%5C1741752219-59c9b774a4ccf_articlex.png" alt="1741752219-59c9b774a4ccf_articlex"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">  &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">  &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"ie=edge"</span>&gt;</span><br><span class="line">  &lt;title&gt;vue生命周期学习&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">  &lt;script src="https:/</span><span class="regexp">/cdn.bootcss.com/</span>vue/<span class="number">2.4</span><span class="number">.2</span>/vue.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">  &lt;div id="</span>app<span class="string">"&gt;</span></span><br><span class="line"><span class="string">    &lt;h1&gt;&#123;&#123;message&#125;&#125;&lt;/h1&gt;</span></span><br><span class="line"><span class="string">  &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;script&gt;</span></span><br><span class="line"><span class="string">  var vm = new Vue(&#123;</span></span><br><span class="line"><span class="string">    el: '#app',</span></span><br><span class="line"><span class="string">    data: &#123;</span></span><br><span class="line"><span class="string">      message: 'Vue的生命周期'</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    beforeCreate: function() &#123;</span></span><br><span class="line"><span class="string">      console.group('------beforeCreate创建前状态------');</span></span><br><span class="line"><span class="string">      console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">" , "</span>el     : <span class="string">" + this.$el); //undefined</span></span><br><span class="line"><span class="string">      console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">","</span>data   : <span class="string">" + this.$data); //undefined </span></span><br><span class="line"><span class="string">      console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">","</span>message: <span class="string">" + this.message) </span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    created: function() &#123;</span></span><br><span class="line"><span class="string">      console.group('------created创建完毕状态------');</span></span><br><span class="line"><span class="string">      console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">","</span>el     : <span class="string">" + this.$el); //undefined</span></span><br><span class="line"><span class="string">      console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">","</span>data   : <span class="string">" + this.$data); //已被初始化 </span></span><br><span class="line"><span class="string">      console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">","</span>message: <span class="string">" + this.message); //已被初始化</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    beforeMount: function() &#123;</span></span><br><span class="line"><span class="string">      console.group('------beforeMount挂载前状态------');</span></span><br><span class="line"><span class="string">      console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">","</span>el     : <span class="string">" + (this.$el)); //已被初始化</span></span><br><span class="line"><span class="string">      console.log(this.$el);</span></span><br><span class="line"><span class="string">      console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">","</span>data   : <span class="string">" + this.$data); //已被初始化  </span></span><br><span class="line"><span class="string">      console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">","</span>message: <span class="string">" + this.message); //已被初始化  </span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    mounted: function() &#123;</span></span><br><span class="line"><span class="string">      console.group('------mounted 挂载结束状态------');</span></span><br><span class="line"><span class="string">      console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">","</span>el     : <span class="string">" + this.$el); //已被初始化</span></span><br><span class="line"><span class="string">      console.log(this.$el);    </span></span><br><span class="line"><span class="string">      console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">","</span>data   : <span class="string">" + this.$data); //已被初始化</span></span><br><span class="line"><span class="string">      console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">","</span>message: <span class="string">" + this.message); //已被初始化 </span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    beforeUpdate: function () &#123;</span></span><br><span class="line"><span class="string">      console.group('beforeUpdate 更新前状态===============》');</span></span><br><span class="line"><span class="string">      console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">","</span>el     : <span class="string">" + this.$el);</span></span><br><span class="line"><span class="string">      console.log(this.$el);   </span></span><br><span class="line"><span class="string">      console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">","</span>data   : <span class="string">" + this.$data); </span></span><br><span class="line"><span class="string">      console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">","</span>message: <span class="string">" + this.message); </span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    updated: function () &#123;</span></span><br><span class="line"><span class="string">      console.group('updated 更新完成状态===============》');</span></span><br><span class="line"><span class="string">      console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">","</span>el     : <span class="string">" + this.$el);</span></span><br><span class="line"><span class="string">      console.log(this.$el); </span></span><br><span class="line"><span class="string">      console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">","</span>data   : <span class="string">" + this.$data); </span></span><br><span class="line"><span class="string">      console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">","</span>message: <span class="string">" + this.message); </span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    beforeDestroy: function () &#123;</span></span><br><span class="line"><span class="string">      console.group('beforeDestroy 销毁前状态===============》');</span></span><br><span class="line"><span class="string">      console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">","</span>el     : <span class="string">" + this.$el);</span></span><br><span class="line"><span class="string">      console.log(this.$el);    </span></span><br><span class="line"><span class="string">      console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">","</span>data   : <span class="string">" + this.$data); </span></span><br><span class="line"><span class="string">      console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">","</span>message: <span class="string">" + this.message); </span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    destroyed: function () &#123;</span></span><br><span class="line"><span class="string">      console.group('destroyed 销毁完成状态===============》');</span></span><br><span class="line"><span class="string">      console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">","</span>el     : <span class="string">" + this.$el);</span></span><br><span class="line"><span class="string">      console.log(this.$el);  </span></span><br><span class="line"><span class="string">      console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">","</span>data   : <span class="string">" + this.$data); </span></span><br><span class="line"><span class="string">      console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">","</span>message: <span class="string">" + this.message)</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;)</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><p>运行打印结果</p><p><img src="D:%5Chexo%5Csource_posts%5Canjing%5C%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20200322161837.png" alt="微信图片_20200322161837"></p><h5 id="1-在beforeCreate和created钩子函数之间的生命周期"><a href="#1-在beforeCreate和created钩子函数之间的生命周期" class="headerlink" title="1. 在beforeCreate和created钩子函数之间的生命周期"></a><strong>1. 在beforeCreate和created钩子函数之间的生命周期</strong></h5><p>创建vue实例，vue(),在创建vue实例的时候执行了init(),在执行init()的时候调用beforeCtreate钩子函数，监听data数据，初始化vue内部事件，进行属性和方法计算，然后调用create钩子函数，<strong>created</strong>的时候数据已经和<strong>data属性进行绑定,此时还是没有el</strong></p><h5 id="2-created钩子函数和beforeMount间的生命周期"><a href="#2-created钩子函数和beforeMount间的生命周期" class="headerlink" title="2. created钩子函数和beforeMount间的生命周期"></a><strong>2. created钩子函数和beforeMount间的生命周期</strong></h5><p>首先会判断对象是否有<strong>el选项</strong>。<strong>如果有的话就继续向下编译，如果没有</strong>el选项<strong>，则停止编译，也就意味着停止了生命周期，直到在该vue实例上调用vm.$mount(el)。</strong></p><p><strong>模板编译</strong>，把data对象里面的数据和vue语法写的模板编译成HTML。编译过程分三种情况：1）实例内部有template属性，直接调用，然后调用render函数去渲染；2）没有该属性调用外部html；3）都没有抛出错误；</p><p>编译模板完成，调用<strong>beforeMount钩子函数</strong>；</p><h5 id="3-beforeMount和mounted-钩子函数间的生命周期"><a href="#3-beforeMount和mounted-钩子函数间的生命周期" class="headerlink" title="3. beforeMount和mounted 钩子函数间的生命周期"></a><strong>3. beforeMount和mounted 钩子函数间的生命周期</strong></h5><p>此时是给vue实例对象添加<strong>$el成员</strong>，并且替换掉挂在的DOM元素。因为在之前console中打印的结果可以看到<strong>beforeMount</strong>之前el上还是undefined</p><p>挂载结束，调用<strong>Mounted钩子函数</strong>；</p><h4 id="4-mounted"><a href="#4-mounted" class="headerlink" title="4. mounted"></a><strong>4. mounted</strong></h4><p><img src="https://segmentfault.com/img/bVVUYC?w=424&h=274" alt="clipboard.png"></p><p>在mounted之前h1中还是通过<strong></strong>进行占位的，因为此时还有挂在到页面上，还是JavaScript中的虚拟DOM形式存在的。在mounted之后可以看到h1中的内容发生了变化。</p><h5 id="5-beforeUpdate钩子函数和updated钩子函数间的生命周期"><a href="#5-beforeUpdate钩子函数和updated钩子函数间的生命周期" class="headerlink" title="5. beforeUpdate钩子函数和updated钩子函数间的生命周期"></a><strong>5. beforeUpdate钩子函数和updated钩子函数间的生命周期</strong></h5><p><img src="https://segmentfault.com/img/bVVU0E?w=558&h=295" alt="clipboard.png"></p><p>当vue发现data中的数据发生了改变，会<strong>触发对应组件的重新渲染</strong>，先后调用<strong>beforeUpdate</strong>和<strong>updated</strong>钩子函数。我们在console中输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vm.message = &apos;触发组件更新&apos;</span><br></pre></td></tr></table></figure><p>发现触发了组件的更新：</p><p><img src="https://segmentfault.com/img/bVVU55?w=500&h=356" alt="clipboard.png"></p><h5 id="6-beforeDestroy和destroyed钩子函数间的生命周期"><a href="#6-beforeDestroy和destroyed钩子函数间的生命周期" class="headerlink" title="6.beforeDestroy和destroyed钩子函数间的生命周期"></a><strong>6.beforeDestroy和destroyed钩子函数间的生命周期</strong></h5><p><img src="https://segmentfault.com/img/bVVU6C?w=383&h=368" alt="clipboard.png"></p><p><strong>beforeDestroy</strong>钩子函数在实例销毁之前调用。在这一步，实例仍然完全可用。<br><strong>destroyed</strong>钩子函数在Vue 实例销毁后调用。调用后，Vue 实例指示的所有东西都会解绑定，所有的事件监听器会被移除，所有的子实例也会被销毁。</p><p><strong>1、什么是vue生命周期</strong>？<br>答： Vue 实例从创建到销毁的过程，就是生命周期。也就是从开始创建、初始化数据、编译模板、挂载Dom→渲染、更新→渲染、卸载等一系列过程，我们称这是 Vue 的生命周期。</p><p><strong>2、vue生命周期的作用是什么？</strong><br>答：它的生命周期中有多个事件钩子，让我们在控制整个Vue实例的过程时更容易形成好的逻辑。</p><p><strong>3、vue生命周期总共有几个阶段？</strong><br>答：它可以总共分为8个阶段：创建前/后, 载入前/后,更新前/后,销毁前/销毁后</p><p><strong>4、第一次页面加载会触发哪几个钩子？</strong><br>答：第一次页面加载时会触发 beforeCreate, created, beforeMount, mounted 这几个钩子</p><p><strong>5、DOM 渲染在 哪个周期中就已经完成？</strong><br>答：DOM 渲染在 mounted 中就已经完成了。</p><p><strong>6、简单描述每个周期具体适合哪些场景？</strong><br>答：生命周期钩子的一些使用方法： beforecreate : 可以在这加个loading事件，在加载实例时触发 created : 初始化完成时的事件写在这里，如在这结束loading事件，异步请求也适宜在这里调用 mounted : 挂载元素，获取到DOM节点 updated : 如果对数据统一处理，在这里写上相应函数 beforeDestroy : 可以做一个确认停止事件的确认框 nextTick : 更新数据后立即操作dom</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Vue 实例从创建到销毁的过程，就是生命周期。也就是从开始创建、初始化数据、编译模板、挂载Dom→渲染、更新→渲染、卸载等一系列过程，我们称这是 Vue 的生命周期。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;D:%5Chexo%5Csource_posts%5Canjing%5C
      
    
    </summary>
    
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>vue项目中keepAlive的使用</title>
    <link href="http://yoursite.com/2020/03/20/vue%E9%A1%B9%E7%9B%AE%E4%B8%ADkeepAlive%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2020/03/20/vue项目中keepAlive的使用/</id>
    <published>2020-03-20T03:10:20.000Z</published>
    <updated>2020-03-22T06:53:46.222Z</updated>
    
    <content type="html"><![CDATA[<p><code>&lt;keep-alive&gt;</code>是Vue的内置组件，能在组件切换时保持之前的加载状态（缓存不活动的组件），防止重复渲染DOM，减少接口请求，减少服务器压力。</p><p><strong>prop:</strong></p><ul><li>include: 字符串或正则表达式。只有匹配的组件会被缓存。</li><li>exclude: 字符串或正则表达式。任何匹配的组件都不会被缓存。</li></ul><p><strong>常见用法</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">'payOrder'</span>,</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      username: <span class="string">''</span>,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;keep-alive include=<span class="string">"payOrder"</span>&gt;</span><br><span class="line">  &lt;router-view /&gt;</span><br><span class="line">&lt;<span class="regexp">/keep-alive&gt;</span></span><br></pre></td></tr></table></figure><p><strong>利用路由中的meta属性来控制</strong></p><p>使用$route.meta的keepAlive属性,keep-alive代码可以结合v-if进行包裹，如果meta中的keepAlive为true进行缓存，否侧不进行缓存，</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;keep-alive&gt;</span><br><span class="line">      &lt;router-view v-<span class="keyword">if</span>=<span class="string">"$route.meta.keepAlive"</span> /&gt;</span><br><span class="line">&lt;<span class="regexp">/keep-alive&gt;</span></span><br><span class="line"><span class="regexp">&lt;router-view v-if="!$route.meta.keepAlive" /</span>&gt;</span><br></pre></td></tr></table></figure><p>需要在<code>router</code>中设置router的元信息meta：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">"/"</span>,</span><br><span class="line">    name: <span class="string">"Home"</span>,</span><br><span class="line">    component: Home,</span><br><span class="line">    meta:&#123;</span><br><span class="line">      keepAlive:<span class="literal">false</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">"/payment"</span>,</span><br><span class="line">    name: <span class="string">"payment"</span>,</span><br><span class="line">    redirect: <span class="string">'/payment/order'</span>,</span><br><span class="line">    component: Payment,</span><br><span class="line">    children: [</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">"order"</span>,</span><br><span class="line">        name: <span class="string">"payOrder"</span>,</span><br><span class="line">        meta:&#123;</span><br><span class="line">          keepAlive:<span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">"@/views/payment/pay_order.vue"</span>),</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">  &#125;</span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>也可以通过路由导航钩子实现页面的刷新</p><ul><li>首页是A页面</li><li>B页面跳转到A，A页面需要缓存</li><li>C页面跳转到A，A页面不需要被缓存</li></ul><p>思路是在每个路由的<code>beforeRouteLeave(to, from, next)</code>钩子中设置<code>to.meta.keepAlive</code>：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    path: <span class="string">'/'</span>,</span><br><span class="line">    name: <span class="string">'A'</span>,</span><br><span class="line">    component: A,</span><br><span class="line">    meta: &#123;</span><br><span class="line">        keepAlive: <span class="literal">true</span> <span class="comment">// 需要被缓存</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;&#125;,</span><br><span class="line">    beforeRouteLeave(to, <span class="keyword">from</span>, next) &#123;</span><br><span class="line">         <span class="comment">// 设置下一个路由的 meta</span></span><br><span class="line">        to.meta.keepAlive = <span class="literal">true</span>;  <span class="comment">// B 跳转到 A 时，让 A 缓存，即不刷新</span></span><br><span class="line">        next();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;&#125;,</span><br><span class="line">    beforeRouteLeave(to, <span class="keyword">from</span>, next) &#123;</span><br><span class="line">        <span class="comment">// 设置下一个路由的 meta</span></span><br><span class="line">        to.meta.keepAlive = <span class="literal">false</span>; <span class="comment">// C 跳转到 A 时让 A 不缓存，即刷新</span></span><br><span class="line">        next();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>keep-alive生命周期钩子函数：activated、deactivated</strong></p><p>使用<code>&lt;keep-alive&gt;</code>会将数据保留在内存中，如果要在每次进入页面的时候获取最新的数据，需要在<code>activated</code>阶段获取数据，承担原来created钩子中获取数据的任务。</p><p><strong>使用keep-alive时钩子函数执行顺序：</strong></p><p>beforeRouteEnter–&gt; created –&gt; mounted –&gt; activated –&gt; deactivated，</p><p>再次进入缓存页面时只会执行：</p><p>beforeRouteEnter–&gt; activated –&gt; deactivated</p><p>所以在缓存页面中如果需要第二次进入页面仍然发送请求，可以将ajax请求放在activated中</p><p><strong>不使用keep-alive时钩子函数执行顺序：</strong></p><p>beforeRouteEnter–&gt; created –&gt; mounted –&gt; destroyed</p><p><code>keep-alive</code>相关的钩子函数：</p><ul><li><strong>activated</strong>： 缓存的组件再次进入时会触发</li><li><strong>deactivated</strong>： 缓存的组件离开时会触发</li></ul><p>路由元信息meta中添加一个isBack字段，用来解决beforeRouterEnter不能直接访问vue实例。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    path: <span class="string">"/"</span>,</span><br><span class="line">    name: <span class="string">"Home"</span>,</span><br><span class="line">    component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span> (<span class="string">'@/views/Home.vue'</span>),</span><br><span class="line">    meta:&#123;</span><br><span class="line">      keepAlive:<span class="literal">false</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">"/order"</span>,</span><br><span class="line">    name: <span class="string">"payOrder"</span>,</span><br><span class="line">    component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">"@/views/payment/pay_order.vue"</span>),</span><br><span class="line">    meta:&#123;</span><br><span class="line">      keepAlive:<span class="literal">true</span>,</span><br><span class="line">      isBack: <span class="literal">false</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">"/info"</span>,</span><br><span class="line">    name: <span class="string">"payInfo"</span>,</span><br><span class="line">    meta:&#123;</span><br><span class="line">      keepAlive:<span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">"@/views/payment/pay_info.vue"</span>),</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>借助<code>beforeRouteEnter</code>钩子函数来判断页面来源：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">beforeRouteEnter(to, <span class="keyword">from</span>, next) &#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="keyword">from</span>.name === <span class="string">'payInfo'</span>) &#123; <span class="comment">//判断是从哪个路由过来的，若是payInfo页面不需要刷新获取新数据，直接用之前缓存的数据即可</span></span><br><span class="line">      to.meta.isBack = <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  next();</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>最后，需要借助keep-alive提供钩子函数<code>activated</code>来完成是否更新：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">activated() &#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">this</span>.$route.meta.isBack) &#123;</span><br><span class="line">      <span class="comment">// 如果isBack是false，表明需要获取新数据，否则就不再请求，直接使用缓存的数据</span></span><br><span class="line">      <span class="keyword">this</span>.getData(); <span class="comment">// ajax获取数据方法</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 恢复成默认的false，避免isBack一直是true，导致下次无法获取数据</span></span><br><span class="line">    <span class="keyword">this</span>.$route.meta.isBack = <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>在<strong>keep-alive组件前进的页面刷新导致keep-alive组件状态丢失</strong></p><p>继续以上面的A、B页面为例，在进入详情B页面后，然后刷新，这时列表A页面的缓存的数据都丢失了，由于上面的判断规则也会导致不会重新获取数据。所以对于这种问题，还需要额外加一些判断条件。由于keep-alive第一次进入时会执行<strong>created</strong>方法，所以利用这点加一个标识来加以判断：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//第一次进入keep-alive路由组件时</span></span><br><span class="line"> created() &#123;</span><br><span class="line">   <span class="keyword">this</span>.isFirstEnter = <span class="literal">true</span>;</span><br><span class="line">  <span class="comment">// 只有第一次进入或者刷新页面后才会执行此钩子函数，使用keep-alive后（2+次）进入不会再执行此钩子函数</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>activated钩子函数也需要增加对应的判断：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">activated() &#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">this</span>.$route.meta.isBack || <span class="keyword">this</span>.isFirstEnter)&#123;</span><br><span class="line">        <span class="comment">// 如果isBack是false，表明需要获取新数据，否则就不再请求，直接使用缓存的数据</span></span><br><span class="line">        <span class="comment">// 如果isFirstEnter是true，表明是第一次进入此页面或用户刷新了页面，需获取新数据</span></span><br><span class="line">        <span class="keyword">this</span>.data = <span class="string">''</span><span class="comment">// 把数据清空，可以稍微避免让用户看到之前缓存的数据</span></span><br><span class="line">        <span class="keyword">this</span>.getData();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 恢复成默认的false，避免isBack一直是true，导致下次无法获取数据</span></span><br><span class="line">    <span class="keyword">this</span>.$route.meta.isBack=<span class="literal">false</span></span><br><span class="line">    <span class="comment">// 恢复成默认的false，避免isBack一直是true，导致每次都获取新数据</span></span><br><span class="line">    <span class="keyword">this</span>.isFirstEnter=<span class="literal">false</span>;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><ul><li><strong>缓存过多keep-alive组件，因常驻内存会导致内存占用过多</strong></li></ul><p>这是一个特别需要注意的问题，尤其是当整个系统或者系统大部分页面都使用keep-alive来缓存组件时，由于其是缓存在内存中的，若不加处理，内存堆积越来越大，导致系统卡顿。正确的解决方案是：<strong>需要及时销毁掉内存缓存的组件</strong>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;&amp;lt;keep-alive&amp;gt;&lt;/code&gt;是Vue的内置组件，能在组件切换时保持之前的加载状态（缓存不活动的组件），防止重复渲染DOM，减少接口请求，减少服务器压力。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;prop:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
      
    
    </summary>
    
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>测试文章</title>
    <link href="http://yoursite.com/2020/03/10/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <id>http://yoursite.com/2020/03/10/测试文章/</id>
    <published>2020-03-10T10:24:19.000Z</published>
    <updated>2020-03-10T10:24:19.166Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>初始化css</title>
    <link href="http://yoursite.com/2020/01/03/%E5%88%9D%E5%A7%8B%E5%8C%96css/"/>
    <id>http://yoursite.com/2020/01/03/初始化css/</id>
    <published>2020-01-03T06:39:56.000Z</published>
    <updated>2020-01-03T06:41:02.102Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*! minireset.css v0.0.4 | MIT License | github.com/jgthms/minireset.css */</span></span><br><span class="line"><span class="selector-tag">html</span>,</span><br><span class="line"><span class="selector-tag">body</span>,</span><br><span class="line"><span class="selector-tag">p</span>,</span><br><span class="line"><span class="selector-tag">ol</span>,</span><br><span class="line"><span class="selector-tag">ul</span>,</span><br><span class="line"><span class="selector-tag">li</span>,</span><br><span class="line"><span class="selector-tag">dl</span>,</span><br><span class="line"><span class="selector-tag">dt</span>,</span><br><span class="line"><span class="selector-tag">dd</span>,</span><br><span class="line"><span class="selector-tag">blockquote</span>,</span><br><span class="line"><span class="selector-tag">figure</span>,</span><br><span class="line"><span class="selector-tag">fieldset</span>,</span><br><span class="line"><span class="selector-tag">legend</span>,</span><br><span class="line"><span class="selector-tag">textarea</span>,</span><br><span class="line"><span class="selector-tag">pre</span>,</span><br><span class="line"><span class="selector-tag">iframe</span>,</span><br><span class="line"><span class="selector-tag">hr</span>,</span><br><span class="line"><span class="selector-tag">h1</span>,</span><br><span class="line"><span class="selector-tag">h2</span>,</span><br><span class="line"><span class="selector-tag">h3</span>,</span><br><span class="line"><span class="selector-tag">h4</span>,</span><br><span class="line"><span class="selector-tag">h5</span>,</span><br><span class="line"><span class="selector-tag">h6</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h1</span>,</span><br><span class="line"><span class="selector-tag">h2</span>,</span><br><span class="line"><span class="selector-tag">h3</span>,</span><br><span class="line"><span class="selector-tag">h4</span>,</span><br><span class="line"><span class="selector-tag">h5</span>,</span><br><span class="line"><span class="selector-tag">h6</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: normal;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line"><span class="selector-tag">input</span>,</span><br><span class="line"><span class="selector-tag">select</span>,</span><br><span class="line"><span class="selector-tag">textarea</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">*, *<span class="selector-pseudo">:before</span>, *<span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: inherit;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span>,</span><br><span class="line"><span class="selector-tag">embed</span>,</span><br><span class="line"><span class="selector-tag">iframe</span>,</span><br><span class="line"><span class="selector-tag">object</span>,</span><br><span class="line"><span class="selector-tag">video</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: auto;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">audio</span> &#123;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">iframe</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line">  <span class="attribute">border-collapse</span>: collapse;</span><br><span class="line">  <span class="attribute">border-spacing</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">td</span>,</span><br><span class="line"><span class="selector-tag">th</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">html</span>, <span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#root</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
    
      <category term="H5C3" scheme="http://yoursite.com/categories/H5C3/"/>
    
    
      <category term="H5C3" scheme="http://yoursite.com/tags/H5C3/"/>
    
  </entry>
  
  <entry>
    <title>vue文件上传组件</title>
    <link href="http://yoursite.com/2019/12/23/vue%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%84%E4%BB%B6/"/>
    <id>http://yoursite.com/2019/12/23/vue文件上传组件/</id>
    <published>2019-12-23T06:30:08.000Z</published>
    <updated>2019-12-23T06:48:44.189Z</updated>
    
    <content type="html"><![CDATA[<p>上传组件(我用的是element ui 自定义上传组件)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;el-upload</span><br><span class="line">      <span class="class"><span class="keyword">class</span></span>=<span class="string">"upload-demo"</span></span><br><span class="line">      ref=<span class="string">"upload1"</span></span><br><span class="line">      action=<span class="string">"String"</span></span><br><span class="line">      :on-change=<span class="string">"uploadChange"</span></span><br><span class="line">      :header=<span class="string">"headerType"</span></span><br><span class="line">      :<span class="keyword">with</span>-credentials=<span class="string">"true"</span></span><br><span class="line">      :on-preview=<span class="string">"handlePreview"</span></span><br><span class="line">      :on-remove=<span class="string">"handleRemove"</span></span><br><span class="line">      :onSuccess=<span class="string">"handleSuccess"</span></span><br><span class="line">      :auto-upload=<span class="string">"false"</span></span><br><span class="line">      multiple</span><br><span class="line">      :limit=<span class="string">"15"</span></span><br><span class="line">      :on-exceed=<span class="string">"handleExceed"</span></span><br><span class="line">      :file-list=<span class="string">"FileList"</span></span><br><span class="line">    &gt;</span><br><span class="line">      &lt;el-button <span class="class"><span class="keyword">class</span></span>=<span class="string">"file_btn"</span> slot=<span class="string">"trigger"</span> size=<span class="string">"small"</span> type=<span class="string">"primary"</span>&gt;选取文件&lt;<span class="regexp">/el-button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>el-upload&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; debounce &#125; <span class="keyword">from</span> <span class="string">'@/utils/Debounce'</span><span class="comment">//这里我添加了防抖功能</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">'my-upload'</span>,</span><br><span class="line">  props: &#123;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      headerType: &#123;<span class="string">"Content-Type"</span>: <span class="string">"multipart/form-data"</span>&#125;,</span><br><span class="line">      options: &#123;</span><br><span class="line">        language_url: <span class="string">"/static/lang/zh_CN.js"</span> <span class="comment">//This url points to location of persian language file.</span></span><br><span class="line">      &#125;,</span><br><span class="line">      FileList: [],</span><br><span class="line">      isfileSuccess: <span class="literal">false</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">      uploadChange(file, fileList) &#123;</span><br><span class="line">        <span class="keyword">this</span>.isfileSuccess = <span class="literal">true</span>;</span><br><span class="line">        debounce(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">this</span>.FileList = fileList</span><br><span class="line">          <span class="keyword">if</span>(<span class="keyword">this</span>.isfileSuccess)&#123;</span><br><span class="line">            <span class="keyword">this</span>.$message.warning(<span class="string">"正在上传附件"</span>)</span><br><span class="line">            setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">              <span class="keyword">this</span>.$emit(<span class="string">'handleUpload'</span>, <span class="keyword">this</span>.FileList);</span><br><span class="line">            &#125;, <span class="number">3000</span>);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;, <span class="number">300</span>)</span><br><span class="line">      &#125;,</span><br><span class="line">      handlePreview(file) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(file);</span><br><span class="line">      &#125;,</span><br><span class="line">      handleRemove(file, fileList) &#123;</span><br><span class="line">        <span class="keyword">this</span>.FileList = fileList</span><br><span class="line">        <span class="built_in">console</span>.log(file, fileList);</span><br><span class="line">      &#125;,</span><br><span class="line">      handleSuccess() &#123;</span><br><span class="line">      &#125;,</span><br><span class="line">      handleProgress(event, file, fileList) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(event);</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">// 上传限制文件数</span></span><br><span class="line">      handleExceed(files, fileList) &#123;</span><br><span class="line">        <span class="keyword">this</span>.$message.warning(</span><br><span class="line">          <span class="string">`当前限制选择 15 个文件，本次选择了 <span class="subst">$&#123;</span></span></span><br><span class="line"><span class="string"><span class="subst">            files.length</span></span></span><br><span class="line"><span class="string"><span class="subst">            &#125;</span> 个文件，共选择了 <span class="subst">$&#123;files.length + fileList.length&#125;</span> 个文件`</span></span><br><span class="line">        );</span><br><span class="line">      &#125;,</span><br><span class="line">  &#125;<span class="comment">//下文主要是methods的介绍，此处先省略</span></span><br><span class="line">  &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>父组件引用子组件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"filter-container r-menu"</span> style=<span class="string">"margin-top:20px;margin-left:20px;margin-right:20px"</span>&gt;</span><br><span class="line">      &lt;el-form ref=<span class="string">"form"</span> :model=<span class="string">"form"</span> label-width=<span class="string">"100px"</span></span><br><span class="line">               style=<span class="string">"width:80%;margin:20px 10%;"</span>&gt;</span><br><span class="line">        &lt;el-form-item label=<span class="string">"上传附件"</span>&gt;</span><br><span class="line">          &lt;my-upload @handleUpload=<span class="string">"handleUpload"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">my-upload</span>&gt;</span></span></span><br><span class="line">        &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp">        &lt;el-form-item&gt;</span></span><br><span class="line"><span class="regexp">          &lt;el-button type="primary" size="small" :loading="Publish" style="height:32px" @click.prevent="handlePublish"&gt;发布</span></span><br><span class="line"><span class="regexp">          &lt;/</span>el-button&gt;</span><br><span class="line">        &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>el-form&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">  import &#123;Upload, publish&#125; from '@/</span>api/dynamicList.js<span class="string">'</span></span><br><span class="line"><span class="string">  import  myUpload from'</span>@/components/my-upload.vue<span class="string">'</span></span><br><span class="line"><span class="string">  export default &#123;</span></span><br><span class="line"><span class="string">    components: &#123;</span></span><br><span class="line"><span class="string">      myUpload</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    data() &#123;</span></span><br><span class="line"><span class="string">      return &#123;</span></span><br><span class="line"><span class="string">        Publish: false,</span></span><br><span class="line"><span class="string">        form: &#123;&#125;,</span></span><br><span class="line"><span class="string">        fileList: [],</span></span><br><span class="line"><span class="string">      &#125;;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    mounted() &#123;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    methods: &#123;</span></span><br><span class="line"><span class="string">      handleUpload(fileList) &#123;</span></span><br><span class="line"><span class="string">        let fd = new FormData();</span></span><br><span class="line"><span class="string">        this.fileList = fileList;</span></span><br><span class="line"><span class="string">        console.log(this.fileList)</span></span><br><span class="line"><span class="string">        this.fileList.forEach(item =&gt; &#123;</span></span><br><span class="line"><span class="string">          fd.append("file", item.raw, item.raw.name);</span></span><br><span class="line"><span class="string">        &#125;);</span></span><br><span class="line"><span class="string">        if (this.fileList.length == 0) return this.$message.warning("请选择上传文件！");</span></span><br><span class="line"><span class="string">        Upload(fd).then(res =&gt; &#123;</span></span><br><span class="line"><span class="string">          if (res.data.code === 1) &#123;</span></span><br><span class="line"><span class="string">            this.$message.success('</span>上传成功！<span class="string">')</span></span><br><span class="line"><span class="string">            let urlList = []</span></span><br><span class="line"><span class="string">            let nameList = []</span></span><br><span class="line"><span class="string">            if (res.data.data.fileUrl !== '</span><span class="string">') &#123;</span></span><br><span class="line"><span class="string">              urlList = res.data.data.fileUrl.split('</span>,<span class="string">')</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            if (res.data.data.fileUrl !== '</span><span class="string">') &#123;</span></span><br><span class="line"><span class="string">              nameList = res.data.data.fileName.split('</span>,<span class="string">')</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            this.$set(this.form, '</span>fileUrl<span class="string">', urlList)</span></span><br><span class="line"><span class="string">            this.$set(this.form, '</span>fileName<span class="string">', nameList)</span></span><br><span class="line"><span class="string">            console.log(this.form)</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;);</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      handlePublish() &#123;</span></span><br><span class="line"><span class="string">        this.$refs['</span>form<span class="string">'].validate(valid =&gt; &#123;</span></span><br><span class="line"><span class="string">          if (valid) &#123;</span></span><br><span class="line"><span class="string">            this.Publish = true;</span></span><br><span class="line"><span class="string">            publish(this.form).then(res =&gt; &#123;</span></span><br><span class="line"><span class="string">              if (res.data.code === 1) &#123;</span></span><br><span class="line"><span class="string">                this.$message.success("发布成功");</span></span><br><span class="line"><span class="string">                this.Publish = false;</span></span><br><span class="line"><span class="string">              &#125; else &#123;</span></span><br><span class="line"><span class="string">                this.$message.error(res.data.msg);</span></span><br><span class="line"><span class="string">                this.Publish = false;</span></span><br><span class="line"><span class="string">              &#125;</span></span><br><span class="line"><span class="string">            &#125;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;)</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">  &#125;;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;style scoped&gt;</span></span><br><span class="line"><span class="string">&lt;/style&gt;</span></span><br></pre></td></tr></table></figure><p>防抖和节流</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 函数防抖 (只执行最后一次点击)</span></span><br><span class="line"><span class="comment"> * @param fn</span></span><br><span class="line"><span class="comment"> * @param delay</span></span><br><span class="line"><span class="comment"> * @returns &#123;Function&#125;</span></span><br><span class="line"><span class="comment"> * @constructor</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">let</span> timeout = <span class="literal">null</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> debounce = <span class="function">(<span class="params">fn, t</span>) =&gt;</span> &#123;</span><br><span class="line"> <span class="keyword">if</span>(timeout !== <span class="literal">null</span>) clearTimeout(timeout)</span><br><span class="line"> timeout = setTimeout(fn, t)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 函数节流 (一定时间内点击多次只执行一次)</span></span><br><span class="line"><span class="comment">* @param fn</span></span><br><span class="line"><span class="comment">* @param interval</span></span><br><span class="line"><span class="comment">* @returns &#123;Function&#125;</span></span><br><span class="line"><span class="comment">* @constructor</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">let</span> lastTime;</span><br><span class="line"><span class="keyword">let</span> timer;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> throttle = <span class="function">(<span class="params">fn, t</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> now = +<span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">  <span class="keyword">if</span>(lastTime &amp;&amp; lastTime - now &lt; <span class="number">2000</span>)&#123;</span><br><span class="line">      clearTimeout(timer)</span><br><span class="line">  &#125;</span><br><span class="line">  timer = setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    fn();</span><br><span class="line">    lastTime = +<span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line">  &#125;,t)</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 节流方法2</span></span><br><span class="line"><span class="comment">// export const Throttle = (fn, t) =&gt; &#123;</span></span><br><span class="line"><span class="comment">//   let last;</span></span><br><span class="line"><span class="comment">//   let timer;</span></span><br><span class="line"><span class="comment">//   let interval = t || 500;</span></span><br><span class="line"><span class="comment">//   return function () &#123;</span></span><br><span class="line"><span class="comment">//       let args = arguments;</span></span><br><span class="line"><span class="comment">//       let now = +new Date();</span></span><br><span class="line"><span class="comment">//       if (last &amp;&amp; now - last &lt; interval) &#123;</span></span><br><span class="line"><span class="comment">//           clearTimeout(timer);</span></span><br><span class="line"><span class="comment">//           timer = setTimeout(() =&gt; &#123;</span></span><br><span class="line"><span class="comment">//               last = now;</span></span><br><span class="line"><span class="comment">//               fn.apply(this, args);</span></span><br><span class="line"><span class="comment">//           &#125;, interval);</span></span><br><span class="line"><span class="comment">//       &#125; else &#123;</span></span><br><span class="line"><span class="comment">//           last = now;</span></span><br><span class="line"><span class="comment">//           fn.apply(this, args);</span></span><br><span class="line"><span class="comment">//       &#125;</span></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;上传组件(我用的是element ui 自定义上传组件)&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span cla
      
    
    </summary>
    
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>vue防抖和节流</title>
    <link href="http://yoursite.com/2019/12/13/vue%E9%98%B2%E6%8A%96%E5%92%8C%E8%8A%82%E6%B5%81/"/>
    <id>http://yoursite.com/2019/12/13/vue防抖和节流/</id>
    <published>2019-12-13T07:32:43.000Z</published>
    <updated>2019-12-23T07:19:40.021Z</updated>
    
    <content type="html"><![CDATA[<p>防抖<br>触发高频事件后 n 秒内函数只会执行一次，如果 n 秒内高频事件再次被触发，则重新计算时间；<br>思路：<br>每次触发事件时都取消之前的延时调用方法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">fn</span>) </span>&#123;</span><br><span class="line">     <span class="keyword">let</span> timeout = <span class="literal">null</span>; <span class="comment">// 创建一个标记用来存放定时器的返回值</span></span><br><span class="line">     <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">       clearTimeout(timeout); <span class="comment">// 每当用户输入的时候把前一个 setTimeout clear 掉</span></span><br><span class="line">       timeout = setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123; <span class="comment">// 然后又创建一个新的 setTimeout, 这样就能保证输入字符后的 interval 间隔内如果还有字符输入的话，就不会执行 fn 函数</span></span><br><span class="line">         fn.apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">       &#125;, <span class="number">500</span>);</span><br><span class="line">     &#125;;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">sayHi</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(<span class="string">'防抖成功'</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">var</span> inp = <span class="built_in">document</span>.getElementById(<span class="string">'inp'</span>);</span><br><span class="line">   inp.addEventListener(<span class="string">'input'</span>, debounce(sayHi)); <span class="comment">// 防抖</span></span><br></pre></td></tr></table></figure><p>节流<br>高频事件触发，但在 n 秒内只会执行一次，所以节流会稀释函数的执行频率。<br>思路：<br>每次触发事件时都判断当前是否有等待执行的延时函数。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">throttle</span>(<span class="params">fn</span>) </span>&#123;</span><br><span class="line">     <span class="keyword">let</span> canRun = <span class="literal">true</span>; <span class="comment">// 通过闭包保存一个标记</span></span><br><span class="line">     <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">       <span class="keyword">if</span> (!canRun) <span class="keyword">return</span>; <span class="comment">// 在函数开头判断标记是否为 true，不为 true 则 return</span></span><br><span class="line">       canRun = <span class="literal">false</span>; <span class="comment">// 立即设置为 false</span></span><br><span class="line">       setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123; <span class="comment">// 将外部传入的函数的执行放在 setTimeout 中</span></span><br><span class="line">         fn.apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">         <span class="comment">// 最后在 setTimeout 执行完毕后再把标记设置为 true(关键) 表示可以执行下一次循环了。当定时器没有执行的时候标记永远是 false，在开头被 return 掉</span></span><br><span class="line">         canRun = <span class="literal">true</span>;</span><br><span class="line">       &#125;, <span class="number">500</span>);</span><br><span class="line">     &#125;;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">sayHi</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(e.target.innerWidth, e.target.innerHeight);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">window</span>.addEventListener(<span class="string">'resize'</span>, throttle(sayHi));</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;防抖&lt;br&gt;触发高频事件后 n 秒内函数只会执行一次，如果 n 秒内高频事件再次被触发，则重新计算时间；&lt;br&gt;思路：&lt;br&gt;每次触发事件时都取消之前的延时调用方法：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class
      
    
    </summary>
    
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>js深克隆浅克隆</title>
    <link href="http://yoursite.com/2019/12/13/js%E6%B7%B1%E5%85%8B%E9%9A%86%E6%B5%85%E5%85%8B%E9%9A%86/"/>
    <id>http://yoursite.com/2019/12/13/js深克隆浅克隆/</id>
    <published>2019-12-13T03:01:14.000Z</published>
    <updated>2019-12-13T03:15:03.158Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、js中的对象"><a href="#一、js中的对象" class="headerlink" title="一、js中的对象"></a>一、js中的对象</h3><p>　　谈到对象的克隆，必定要说一下对象的概念。</p><p>　　js中的数据类型分为两大类：原始类型和对象类型。<br>　（1）原始类型包括：数值、字符串、布尔值、null、undefined（后两个是特殊的原始值，这里不做详细的说明，我的上一篇博客有谈到过一些）<br>　（2）对象类型包括：对象即是属性的集合，当然这里又两个特殊的对象—-函数（js中的一等对象）、数组（键值的有序集合）。</p><p>　　好了既然对象分为这两类，这两种类型在复制克隆的时候是有很大区别的。原始类型存储的是对象的实际数据，而对象类型存储的是对象的引用地址（对象的实际内容单独存放，为了减少数据开销通常存放在内存中）。</p><p>ps：说到这里，大家要知道，对象的原型也是引用对象，它把原型的方法和属性放在内存当中，通过原型链的方式来指向这个内存地址。</p><h3 id="二、克隆的概念"><a href="#二、克隆的概念" class="headerlink" title="二、克隆的概念"></a>二、克隆的概念</h3><p>　　浅度克隆：原始类型为值传递，对象类型仍为引用传递。</p><p>　　深度克隆：所有元素或属性均完全复制，与原对象完全脱离，也就是说所有对于新对象的修改都不会反映到原对象中。</p><h3 id="三、浅克隆的表现"><a href="#三、浅克隆的表现" class="headerlink" title="三、浅克隆的表现"></a>三、浅克隆的表现</h3><p>1.原始类型</p><p>　　看下面一段代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//数值克隆的表现</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="string">"1"</span>;</span><br><span class="line"><span class="keyword">var</span> b=a;</span><br><span class="line">b=<span class="string">"2"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a);<span class="comment">// "1"</span></span><br><span class="line"><span class="built_in">console</span>.log(b);<span class="comment">// "2"</span></span><br><span class="line"><span class="comment">//字符串克隆的表现</span></span><br><span class="line"><span class="keyword">var</span> c=<span class="string">"1"</span>;</span><br><span class="line"><span class="keyword">var</span> d=c;</span><br><span class="line">d=<span class="string">"2"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(c);<span class="comment">// "1"</span></span><br><span class="line"><span class="built_in">console</span>.log(d);<span class="comment">// "2"</span></span><br><span class="line"><span class="comment">//字符串克隆的表现</span></span><br><span class="line"><span class="keyword">var</span> x=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">var</span> y=x;</span><br><span class="line">y=<span class="literal">false</span>;</span><br><span class="line"><span class="built_in">console</span>.log(x);<span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(y);<span class="comment">// false</span></span><br></pre></td></tr></table></figure><p>　　从上面的代码大家可以看出，原始类型即使我们采用普通的克隆方式仍能得到正确的结果，原因就是原始类型存储的是对象的实际数据。<br><strong>PS:对象的简易克隆小技巧：var tmpObj = JSON.parse(JSON.stringify(传入对象));</strong></p><p>2.对象类型</p><p>　　前面说过，函数式一等对象，当然也是对象类型，但是函数的克隆通过浅克隆即可实现</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> m=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;alert(<span class="number">1</span>);&#125;;</span><br><span class="line"><span class="keyword">var</span> n=m;</span><br><span class="line">n=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;alert(<span class="number">2</span>);&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(m());<span class="comment">//1</span></span><br><span class="line"><span class="built_in">console</span>.log(n());<span class="comment">//2</span></span><br></pre></td></tr></table></figure><p>　大家能看到，我们直接通过普通赋值的方式，就实现了函数的克隆，并且不会影响之前的对象。原因就是函数的克隆会在内存单独开辟一块空间，互不影响。</p><p>　　好了，说了这个特殊的”关系户“以后，我们来说说普通的”选手“。为了方便后续的代码表现，我这里定义一个复杂的对象类型oPerson。下面看一下对象类型的浅复制有什么危害：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> oPerson=&#123;</span><br><span class="line">    oName:<span class="string">"rookiebob"</span>,</span><br><span class="line">    oAge:<span class="string">"18"</span>,</span><br><span class="line">    oAddress:&#123;</span><br><span class="line">        province:<span class="string">"beijing"</span></span><br><span class="line">    &#125;,    </span><br><span class="line">    ofavorite:[</span><br><span class="line">        <span class="string">"swimming"</span>,</span><br><span class="line">        &#123;<span class="attr">reading</span>:<span class="string">"history book"</span>&#125;</span><br><span class="line">    ],</span><br><span class="line">    skill:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"bob is coding"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clone</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> result=&#123;&#125;;</span><br><span class="line">    <span class="keyword">for</span>(key <span class="keyword">in</span> obj)&#123;</span><br><span class="line">        result[key]=obj[key];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> oNew=clone(oPerson);</span><br><span class="line"><span class="built_in">console</span>.log(oPerson.oAddress.province);<span class="comment">//beijing</span></span><br><span class="line">oNew.oAddress.province=<span class="string">"shanghai"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(oPerson.oAddress.province);<span class="comment">//shanghai</span></span><br></pre></td></tr></table></figure><p>通过上面的代码，大家能看到，经过对象克隆以后，我修改oNew的地址，发现原对象oPerson也被修改了。这说明对象的克隆不够彻底，那也就是说深度克隆失败！</p><p>四、深克隆的实现</p><p>　　为了保证对象的所有属性都被复制到，我们必须知道如果for循环以后，得到的元素仍是Object或者Array，那么需要再次循环，直到元素是原始类型或者函数为止。为了得到元素的类型，我们定义一个通用函数，用来返回传入对象的类型。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//返回传递给他的任意对象的类</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isClass</span>(<span class="params">o</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(o).slice(<span class="number">8</span>,<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PS:Object.prototype.toString.call(o)能直接返回对象的类属性，形如”[object class]”的字符串，我们通过截取class，并能知道传入的对象是什么类型</p><p>下面就是真正的深度克隆</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//深度克隆</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deepClone</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> result,oClass=isClass(obj);</span><br><span class="line"><span class="comment">//确定result的类型</span></span><br><span class="line"><span class="keyword">if</span>(oClass===<span class="string">"Object"</span>)&#123;</span><br><span class="line">result=&#123;&#125;;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(oClass===<span class="string">"Array"</span>)&#123;</span><br><span class="line">result=[];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> obj;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(key <span class="keyword">in</span> obj)&#123;</span><br><span class="line"><span class="keyword">var</span> copy=obj[key];</span><br><span class="line"><span class="keyword">if</span>(isClass(copy)==<span class="string">"Object"</span>)&#123;</span><br><span class="line">result[key]=<span class="built_in">arguments</span>.callee(copy);<span class="comment">//递归调用</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(isClass(copy)==<span class="string">"Array"</span>)&#123;</span><br><span class="line">result[key]=<span class="built_in">arguments</span>.callee(copy);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">result[key]=obj[key];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//返回传递给他的任意对象的类</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isClass</span>(<span class="params">o</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(o===<span class="literal">null</span>) <span class="keyword">return</span> <span class="string">"Null"</span>;</span><br><span class="line"><span class="keyword">if</span>(o===<span class="literal">undefined</span>) <span class="keyword">return</span> <span class="string">"Undefined"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(o).slice(<span class="number">8</span>,<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> oPerson=&#123;</span><br><span class="line">oName:<span class="string">"rookiebob"</span>,</span><br><span class="line">oAge:<span class="string">"18"</span>,</span><br><span class="line">oAddress:&#123;</span><br><span class="line">province:<span class="string">"beijing"</span></span><br><span class="line">&#125;,    </span><br><span class="line">ofavorite:[</span><br><span class="line"><span class="string">"swimming"</span>,</span><br><span class="line">&#123;<span class="attr">reading</span>:<span class="string">"history book"</span>&#125;</span><br><span class="line">],</span><br><span class="line">skill:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"bob is coding"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//深度克隆一个对象</span></span><br><span class="line"><span class="keyword">var</span> oNew=deepClone(oPerson);</span><br><span class="line">oNew.ofavorite[<span class="number">1</span>].reading=<span class="string">"picture"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(oNew.ofavorite[<span class="number">1</span>].reading);<span class="comment">//picture</span></span><br><span class="line"><span class="built_in">console</span>.log(oPerson.ofavorite[<span class="number">1</span>].reading);<span class="comment">//history book</span></span><br><span class="line">oNew.oAddress.province=<span class="string">"shanghai"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(oPerson.oAddress.province);<span class="comment">//beijing</span></span><br><span class="line"><span class="built_in">console</span>.log(oNew.oAddress.province);<span class="comment">//shanghai</span></span><br></pre></td></tr></table></figure><p>从上面的代码可以看到，深度克隆的对象可以完全脱离原对象，我们对新对象的任何修改都不会反映到原对象中，这样深度克隆就实现了。</p><p><strong>这里要注意一点的就是：为什么deepClone这个函数中的result一定要判断类型？这里有一种情况，如果你的result直接是{}对象，我明明传进去的是一个数组，结果你复制完了以后，变成了一个对象了。</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//深度克隆</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deepClone</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> result=&#123;&#125;,oClass=isClass(obj);</span><br><span class="line">    <span class="comment">// if(oClass==="Object")&#123;</span></span><br><span class="line">    <span class="comment">//     result=&#123;&#125;;</span></span><br><span class="line">    <span class="comment">// &#125;else if(oClass==="Array")&#123;</span></span><br><span class="line">    <span class="comment">//     result=[];</span></span><br><span class="line">    <span class="comment">// &#125;else&#123;</span></span><br><span class="line">    <span class="comment">//     return obj;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="keyword">for</span>(key <span class="keyword">in</span> obj)&#123;</span><br><span class="line">        <span class="keyword">var</span> copy=obj[key];</span><br><span class="line">        <span class="keyword">if</span>(isClass(copy)==<span class="string">"Object"</span>)&#123;</span><br><span class="line">            result[key]=<span class="built_in">arguments</span>.callee(copy);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(isClass(copy)==<span class="string">"Array"</span>)&#123;</span><br><span class="line">            result[key]=<span class="built_in">arguments</span>.callee(copy);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            result[key]=obj[key];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isClass</span>(<span class="params">o</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(o===<span class="literal">null</span>) <span class="keyword">return</span> <span class="string">"Null"</span>;</span><br><span class="line">    <span class="keyword">if</span>(o===<span class="literal">undefined</span>) <span class="keyword">return</span> <span class="string">"Undefined"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(o).slice(<span class="number">8</span>,<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//克隆一个数组</span></span><br><span class="line"><span class="keyword">var</span> arr=[<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>];</span><br><span class="line"><span class="keyword">var</span> oNew=deepClone(arr);</span><br><span class="line"><span class="built_in">console</span>.log(oNew);<span class="comment">//Object &#123;0: "a", 1: "b", 2: "c"&#125;</span></span><br></pre></td></tr></table></figure><p>作为知识点记录，转载自：<a href="http://www.2cto.com/kf/201409/332955.html" target="_blank" rel="noopener">http://www.2cto.com/kf/201409/332955.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;一、js中的对象&quot;&gt;&lt;a href=&quot;#一、js中的对象&quot; class=&quot;headerlink&quot; title=&quot;一、js中的对象&quot;&gt;&lt;/a&gt;一、js中的对象&lt;/h3&gt;&lt;p&gt;　　谈到对象的克隆，必定要说一下对象的概念。&lt;/p&gt;
&lt;p&gt;　　js中的数据类型分为两大类：
      
    
    </summary>
    
    
      <category term="Js" scheme="http://yoursite.com/categories/Js/"/>
    
    
      <category term="Js" scheme="http://yoursite.com/tags/Js/"/>
    
  </entry>
  
  <entry>
    <title>vue页面勾选翻页记忆功能</title>
    <link href="http://yoursite.com/2019/12/03/vue%E9%A1%B5%E9%9D%A2%E5%8B%BE%E9%80%89%E7%BF%BB%E9%A1%B5%E8%AE%B0%E5%BF%86%E5%8A%9F%E8%83%BD/"/>
    <id>http://yoursite.com/2019/12/03/vue页面勾选翻页记忆功能/</id>
    <published>2019-12-03T07:09:26.000Z</published>
    <updated>2019-12-03T07:19:47.739Z</updated>
    
    <content type="html"><![CDATA[<p>实现思路:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"customer-container"</span>&gt;</span><br><span class="line">      &lt;el-row&gt;</span><br><span class="line">        &lt;el-form :inline=<span class="string">"true"</span> :model=<span class="string">"tableList"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"demo-form-inline"</span>&gt;</span><br><span class="line">          &lt;el-form-item label=<span class="string">""</span>&gt;</span><br><span class="line">            &lt;el-input size=<span class="string">"mini"</span> style=<span class="string">"width:140px;"</span> v-model=<span class="string">"tableList.pageName"</span> placeholder=<span class="string">"请输入页面名称"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line">            &lt;el-input size=<span class="string">"mini"</span> style=<span class="string">"width:140px;"</span> v-model=<span class="string">"tableList.shopName"</span> placeholder=<span class="string">"请输入店铺名称"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line">            &lt;el-button size=<span class="string">"small"</span> type=<span class="string">"primary"</span> style=<span class="string">"margin-left: 10px;"</span></span><br><span class="line">                       @click=<span class="string">"getSearchPage(tableList.shopName,tableList.pageName)"</span>&gt;查询</span><br><span class="line">            &lt;<span class="regexp">/el-button&gt;</span></span><br><span class="line"><span class="regexp">          &lt;/</span>el-form-item&gt;</span><br><span class="line">          &lt;!--<span class="xml"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">style</span>=<span class="string">"float:left;"</span> <span class="attr">type</span>=<span class="string">"primary"</span> <span class="attr">size</span>=<span class="string">"small"</span> @<span class="attr">click</span>=<span class="string">"handleChooseData"</span>&gt;</span>获取选中的内容<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span>--&gt;</span><br><span class="line">        &lt;<span class="regexp">/el-form&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>el-row&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;el-table ref="multipleTable" :data="gridDatas" border tooltip-effect="dark"  style="width: 100%;" @selection-change="handleSelectionChange"&gt;</span></span><br><span class="line"><span class="regexp">      &lt;el-table-column type="selection" width="55"&gt;&lt;/</span>el-table-column&gt;</span><br><span class="line">      &lt;el-table-column prop=<span class="string">"pho"</span> label=<span class="string">"图片"</span>&gt;</span><br><span class="line">        &lt;!– 图片的显示 –&gt;</span><br><span class="line">        &lt;template   slot-scope=<span class="string">"scope"</span>&gt;</span><br><span class="line">          &lt;img :src=<span class="string">"scope.row.pho"</span>  min-width=<span class="string">"70"</span> height=<span class="string">"70"</span> /&gt;</span><br><span class="line">        &lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>el-table-column&gt;</span><br><span class="line">      &lt;el-table-column prop=<span class="string">"goodsName"</span> label=<span class="string">"商品名称"</span>&gt;</span><br><span class="line">      &lt;<span class="regexp">/el-table-column&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>el-table&gt;</span><br><span class="line">    &lt;el-pagination <span class="class"><span class="keyword">class</span></span>=<span class="string">"pagination"</span> @size-change=<span class="string">"SizeChangeDanpin"</span> @current-change=<span class="string">"handleCurrentChange"</span> background layout=<span class="string">"total, prev, pager, next , jumper"</span> :current-page.sync=<span class="string">"tableList.pageIndex"</span> :total=<span class="string">"totalCount"</span>&gt;</span><br><span class="line">    &lt;<span class="regexp">/el-pagination&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">export default &#123;</span></span><br><span class="line"><span class="regexp">  components:&#123;&#125;,</span></span><br><span class="line"><span class="regexp">  props:&#123;&#125;,</span></span><br><span class="line"><span class="regexp">  data() &#123;</span></span><br><span class="line"><span class="regexp">  return &#123;</span></span><br><span class="line"><span class="regexp">    selectedData:[],</span></span><br><span class="line"><span class="regexp">    tableList: &#123;</span></span><br><span class="line"><span class="regexp">      goodsName: '',</span></span><br><span class="line"><span class="regexp">      companyId: '00000001',</span></span><br><span class="line"><span class="regexp">      pageIndex: 1,</span></span><br><span class="line"><span class="regexp">      goodsId: ''</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    gridDatas: [],</span></span><br><span class="line"><span class="regexp">    totalCount:1,</span></span><br><span class="line"><span class="regexp">    idKey: 'goodsId', /</span><span class="regexp">/ 标识列表数据中每一行的唯一键的名称(需要按自己的数据改一下)</span></span><br><span class="line"><span class="regexp">    multipleSelection: [],</span></span><br><span class="line"><span class="regexp">    multipleSelectionAll:[],/</span><span class="regexp">/所有选中的数据包含跨页数据</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;,</span></span><br><span class="line"><span class="regexp">methods: &#123;</span></span><br><span class="line"><span class="regexp">    setSelectRow() &#123;</span></span><br><span class="line"><span class="regexp">      if (!this.multipleSelectionAll || this.multipleSelectionAll.length &lt;= 0) &#123;</span></span><br><span class="line"><span class="regexp">        return;</span></span><br><span class="line"><span class="regexp">      &#125;</span></span><br><span class="line"><span class="regexp">      /</span><span class="regexp">/ 标识当前行的唯一键的名称</span></span><br><span class="line"><span class="regexp">      let idKey = this.idKey;</span></span><br><span class="line"><span class="regexp">      let selectAllIds = [];</span></span><br><span class="line"><span class="regexp">      let that = this;</span></span><br><span class="line"><span class="regexp">      this.multipleSelectionAll.forEach(row=&gt;&#123;</span></span><br><span class="line"><span class="regexp">        selectAllIds.push(row[idKey]);</span></span><br><span class="line"><span class="regexp">      &#125;)</span></span><br><span class="line"><span class="regexp">      this.$refs.multipleTable.clearSelection();</span></span><br><span class="line"><span class="regexp">      for(var i = 0; i &lt; this.gridDatas.length; i++) &#123;</span></span><br><span class="line"><span class="regexp">        if (selectAllIds.indexOf(this.gridDatas[i][idKey]) &gt;= 0) &#123;</span></span><br><span class="line"><span class="regexp">          /</span><span class="regexp">/ 设置选中，记住table组件需要使用ref="table"</span></span><br><span class="line"><span class="regexp">          this.$refs.multipleTable.toggleRowSelection(this.gridDatas[i], true);</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">      &#125;</span></span><br><span class="line"><span class="regexp">    &#125; ,</span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/ 记忆选择核心方法</span></span><br><span class="line"><span class="regexp">    changePageCoreRecordData () &#123;</span></span><br><span class="line"><span class="regexp">      /</span><span class="regexp">/ 标识当前行的唯一键的名称</span></span><br><span class="line"><span class="regexp">      let idKey = this.idKey;</span></span><br><span class="line"><span class="regexp">      let that = this;</span></span><br><span class="line"><span class="regexp">      /</span><span class="regexp">/ 如果总记忆中还没有选择的数据，那么就直接取当前页选中的数据，不需要后面一系列计算</span></span><br><span class="line"><span class="regexp">      if (this.multipleSelectionAll.length &lt;= 0) &#123;</span></span><br><span class="line"><span class="regexp">        this.multipleSelectionAll = this.multipleSelection;</span></span><br><span class="line"><span class="regexp">        return;</span></span><br><span class="line"><span class="regexp">      &#125;</span></span><br><span class="line"><span class="regexp">      /</span><span class="regexp">/ 总选择里面的key集合</span></span><br><span class="line"><span class="regexp">      let selectAllIds = [];</span></span><br><span class="line"><span class="regexp">      this.multipleSelectionAll.forEach(row=&gt;&#123;</span></span><br><span class="line"><span class="regexp">        selectAllIds.push(row[idKey]);</span></span><br><span class="line"><span class="regexp">      &#125;)</span></span><br><span class="line"><span class="regexp">      console.log(this.multipleSelectionAll)</span></span><br><span class="line"><span class="regexp">      console.log(selectAllIds)</span></span><br><span class="line"><span class="regexp">      let selectIds = []</span></span><br><span class="line"><span class="regexp">      /</span><span class="regexp">/ 获取当前页选中的id</span></span><br><span class="line"><span class="regexp">      this.multipleSelection.forEach(row=&gt;&#123;</span></span><br><span class="line"><span class="regexp">        selectIds.push(row[idKey]);</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ 如果总选择里面不包含当前页选中的数据，那么就加入到总选择集合里</span></span><br><span class="line"><span class="regexp">        if (selectAllIds.indexOf(row[idKey]) &lt; 0) &#123;</span></span><br><span class="line"><span class="regexp">          that.multipleSelectionAll.push(row);</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">      &#125;)</span></span><br><span class="line"><span class="regexp">      let noSelectIds = [];</span></span><br><span class="line"><span class="regexp">      /</span><span class="regexp">/ 得到当前页没有选中的id</span></span><br><span class="line"><span class="regexp">      this.gridDatas.forEach(row=&gt;&#123;</span></span><br><span class="line"><span class="regexp">        if (selectIds.indexOf(row[idKey]) &lt; 0) &#123;</span></span><br><span class="line"><span class="regexp">          noSelectIds.push(row[idKey]);</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">      &#125;)</span></span><br><span class="line"><span class="regexp">      noSelectIds.forEach(id=&gt;&#123;</span></span><br><span class="line"><span class="regexp">        if (selectAllIds.indexOf(id) &gt;= 0) &#123;</span></span><br><span class="line"><span class="regexp">          for(let i = 0; i&lt; that.multipleSelectionAll.length; i ++) &#123;</span></span><br><span class="line"><span class="regexp">            if (that.multipleSelectionAll[i][idKey] == id) &#123;</span></span><br><span class="line"><span class="regexp">              /</span><span class="regexp">/ 如果总选择中有未被选中的，那么就删除这条</span></span><br><span class="line"><span class="regexp">              that.multipleSelectionAll.splice(i, 1);</span></span><br><span class="line"><span class="regexp">              break;</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">          &#125;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">      &#125;)</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/点击商品名称页</span></span><br><span class="line"><span class="regexp">    handleCurrentChange(val) &#123;</span></span><br><span class="line"><span class="regexp">      this.changePageCoreRecordData();</span></span><br><span class="line"><span class="regexp">      this.tableList.pageIndex=val;</span></span><br><span class="line"><span class="regexp">      this.getDatas();</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/ 改变单品表格每页数目</span></span><br><span class="line"><span class="regexp">    SizeChangeDanpin(val) &#123;</span></span><br><span class="line"><span class="regexp">      this.changePageCoreRecordData();</span></span><br><span class="line"><span class="regexp">      console.log(`每页 $&#123;val&#125; 条`);</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    getDatas()&#123;</span></span><br><span class="line"><span class="regexp">      WxHomeGoodOn(this.tableList).then((data) =&gt; &#123;</span></span><br><span class="line"><span class="regexp">        this.loading = false;</span></span><br><span class="line"><span class="regexp">        if(data.code === 1)&#123;</span></span><br><span class="line"><span class="regexp">            if(data !=='')&#123;</span></span><br><span class="line"><span class="regexp">            this.loading = false;</span></span><br><span class="line"><span class="regexp">            this.gridDatas = data.data;</span></span><br><span class="line"><span class="regexp">            this.totalCount = data.pageInfo.totalCount;</span></span><br><span class="line"><span class="regexp">              setTimeout(()=&gt;&#123;</span></span><br><span class="line"><span class="regexp">                this.setSelectRow();</span></span><br><span class="line"><span class="regexp">              &#125;, 200)</span></span><br><span class="line"><span class="regexp">          &#125;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">      &#125;).catch(message =&gt; &#123;</span></span><br><span class="line"><span class="regexp">        console.log('"请求失败"')</span></span><br><span class="line"><span class="regexp">        this.loading = false;</span></span><br><span class="line"><span class="regexp">      &#125;)</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    handleSelectionChange(val) &#123;</span></span><br><span class="line"><span class="regexp">      this.multipleSelection = val;</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/ 得到选中的所有数据</span></span><br><span class="line"><span class="regexp">    getAllSelectionData() &#123;</span></span><br><span class="line"><span class="regexp">      /</span><span class="regexp">/ 再执行一次记忆勾选数据匹配，目的是为了在当前页操作勾选后直接获取选中数据</span></span><br><span class="line"><span class="regexp">      this.changePageCoreRecordData();</span></span><br><span class="line"><span class="regexp">      console.log(this.multipleSelectionAll)</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">  &#125;,</span></span><br><span class="line"><span class="regexp">  mounted()&#123;</span></span><br><span class="line"><span class="regexp">    this.$nextTick(function () &#123;</span></span><br><span class="line"><span class="regexp">      /</span><span class="regexp">/ 初始化渲染</span></span><br><span class="line"><span class="regexp">      this.tableList.pageIndex = 1</span></span><br><span class="line"><span class="regexp">      this.getDatas()</span></span><br><span class="line"><span class="regexp">    &#125;)</span></span><br><span class="line"><span class="regexp">  &#125;    </span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;实现思路:&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;
      
    
    </summary>
    
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>zTree练习使用</title>
    <link href="http://yoursite.com/2019/12/02/zTree%E7%BB%83%E4%B9%A0%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2019/12/02/zTree练习使用/</id>
    <published>2019-12-02T08:50:59.000Z</published>
    <updated>2019-12-02T08:54:21.173Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;HTML&gt;</span><br><span class="line">&lt;HEAD&gt;</span><br><span class="line">  &lt;TITLE&gt; ZTREE DEMO &lt;<span class="regexp">/TITLE&gt;</span></span><br><span class="line"><span class="regexp">  &lt;meta http-equiv="content-type" content="text/</span>html; charset=UTF<span class="number">-8</span><span class="string">"&gt;</span></span><br><span class="line"><span class="string">  &lt;link rel="</span>stylesheet<span class="string">" href="</span>script/zTree/css/demo.css<span class="string">"/&gt;</span></span><br><span class="line"><span class="string">  &lt;link rel="</span>stylesheet<span class="string">" href="</span>script/zTree/css/zTreeStyle/zTreeStyle.css<span class="string">" type="</span>text/css<span class="string">"/&gt;</span></span><br><span class="line"><span class="string">  &lt;script type="</span>text/javascript<span class="string">" src="</span>script/zTree/js/jquery<span class="number">-1.4</span><span class="number">.4</span>.min.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">  &lt;!--&lt;script type="</span>text/javascript<span class="string">" src="</span>script/zTree/jquery.ztree.core<span class="number">-3.5</span>.js<span class="string">"&gt;&lt;/script&gt;--&gt;</span></span><br><span class="line"><span class="string">  &lt;script type="</span>text/javascript<span class="string">" src="</span>script/zTree/js/jquery.ztree.core.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">  &lt;script type="</span>text/javascript<span class="string">" src="</span>script/zTree/js/jquery.ztree.excheck.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">  &lt;script type="</span>text/javascript<span class="string">" src="</span>script/zTree/js/jquery.ztree.exedit.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">  &lt;script&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    var setting = &#123;</span></span><br><span class="line"><span class="string">      edit: &#123;</span></span><br><span class="line"><span class="string">        drag:&#123;</span></span><br><span class="line"><span class="string">          isCopy: false,</span></span><br><span class="line"><span class="string">          isMove: true,</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        removeTitle: "</span>删除知识点<span class="string">",</span></span><br><span class="line"><span class="string">        renameTitle: "</span>修改知识点名称<span class="string">",</span></span><br><span class="line"><span class="string">        enable: true//设置 zTree 是否处于编辑状态</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      data: &#123;</span></span><br><span class="line"><span class="string">        keep: &#123;</span></span><br><span class="line"><span class="string">          leaf: true,</span></span><br><span class="line"><span class="string">          parent: true</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        simpleData: &#123;</span></span><br><span class="line"><span class="string">          enable: true</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        key: &#123;</span></span><br><span class="line"><span class="string">          title: "</span>code<span class="string">"</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      callback: &#123;</span></span><br><span class="line"><span class="string">        beforeDrag: zTreeBeforeDrag,</span></span><br><span class="line"><span class="string">        beforeDrop: zTreeBeforeDrop,</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;;</span></span><br><span class="line"><span class="string">    //进行zNodes的设置，对它进行赋值，也可以从后台获取，为方便在这里采用直接赋值；  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    var zNodes =[</span></span><br><span class="line"><span class="string">      &#123; id:1, pId:0, name:"</span>文件<span class="string">", open:true&#125;,</span></span><br><span class="line"><span class="string">      &#123; id:11, pId:1, name:"</span>文件<span class="number">1</span><span class="string">"&#125;,</span></span><br><span class="line"><span class="string">      &#123; id:12, pId:1, name:"</span>文件<span class="number">2</span><span class="string">"&#125;,</span></span><br><span class="line"><span class="string">      &#123; id:13, pId:1, name:"</span>文件<span class="number">3</span><span class="string">"&#125;,</span></span><br><span class="line"><span class="string">      &#123; id:14, pId:1, name:"</span>文件<span class="number">4</span><span class="string">"&#125;,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      &#123; id:2, pId:0, name:"</span>报告<span class="string">", open:true&#125;,</span></span><br><span class="line"><span class="string">      &#123; id:21, pId:2, name:"</span>报告<span class="number">1</span><span class="string">"&#125;,</span></span><br><span class="line"><span class="string">      &#123; id:22, pId:2, name:"</span>报告<span class="number">2</span><span class="string">"&#125;,</span></span><br><span class="line"><span class="string">      &#123; id:23, pId:2, name:"</span>报告<span class="number">3</span><span class="string">"&#125;,</span></span><br><span class="line"><span class="string">      &#123; id:24, pId:2, name:"</span>报告<span class="number">4</span><span class="string">"&#125;,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      &#123; id:3, pId:0, name:"</span>测试<span class="string">", open:true&#125;,</span></span><br><span class="line"><span class="string">      &#123; id:31, pId:3, name:"</span>测试<span class="number">1</span><span class="string">"&#125;,</span></span><br><span class="line"><span class="string">      &#123; id:32, pId:3, name:"</span>测试<span class="number">2</span><span class="string">"&#125;,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      &#123; id:4, pId:0, name:"</span>类别<span class="string">", open:true&#125;,</span></span><br><span class="line"><span class="string">      &#123; id:41, pId:4, name:"</span>类别<span class="number">1</span><span class="string">"&#125;,</span></span><br><span class="line"><span class="string">      &#123; id:43, pId:4, name:"</span>类别<span class="number">2</span><span class="string">"&#125;,</span></span><br><span class="line"><span class="string">      &#123; id:42, pId:4, name:"</span>类别<span class="number">3</span><span class="string">"&#125;,</span></span><br><span class="line"><span class="string">      &#123; id:421, pId:42, name:"</span>类别<span class="number">4</span><span class="string">"&#125;,</span></span><br><span class="line"><span class="string">      &#123; id:422, pId:42, name:"</span>类别<span class="number">5</span><span class="string">"&#125;,</span></span><br><span class="line"><span class="string">      &#123; id:423, pId:42, name:"</span>类别<span class="number">6</span><span class="string">"&#125;,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    ];</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    $(document).ready(function()&#123;</span></span><br><span class="line">      $.fn.zTree.init($("#treeDemo"), setting, zNodes);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">zTreeBeforeDrag</span>(<span class="params">treeId, treeNodes</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>,l=treeNodes.length; i&lt;l; i++) &#123;</span><br><span class="line">        <span class="keyword">var</span>  pid = treeNodes[i].pId;</span><br><span class="line">                   <span class="keyword">if</span>(pid==<span class="string">"root"</span>||pid==<span class="literal">null</span>||pid==<span class="string">"null"</span>)&#123;</span><br><span class="line">                    alert(<span class="string">"只能移动叶子节点。"</span>);</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">              &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**拖拽释放之后结束前执行 moveType值类型请参考api */</span>    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">zTreeBeforeDrop</span>(<span class="params">treeId, treeNodes, targetNode, moveType</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> oldPid=treeNodes[<span class="number">0</span>].pId;</span><br><span class="line">      <span class="keyword">var</span>  targetPid=targetNode.pId;</span><br><span class="line">      <span class="keyword">if</span>(oldPid!=targetPid)&#123;</span><br><span class="line">        alert(<span class="string">"只能在同一知识点下面移动位置"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(oldPid==<span class="string">"root"</span>||targetPid==<span class="string">"root"</span>)&#123;</span><br><span class="line">        alert(<span class="string">"只能移动子知识的节点。"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>HEAD&gt;</span><br><span class="line">&lt;BODY&gt;</span><br><span class="line">&lt;div id=<span class="string">"treeDemo"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"ztree"</span> &gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/BODY&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>HTML&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l
      
    
    </summary>
    
    
      <category term="Js" scheme="http://yoursite.com/categories/Js/"/>
    
    
      <category term="Js" scheme="http://yoursite.com/tags/Js/"/>
    
  </entry>
  
  <entry>
    <title>前端常见的一些验证</title>
    <link href="http://yoursite.com/2019/11/22/%E5%89%8D%E7%AB%AF%E5%B8%B8%E8%A7%81%E7%9A%84%E4%B8%80%E4%BA%9B%E9%AA%8C%E8%AF%81/"/>
    <id>http://yoursite.com/2019/11/22/前端常见的一些验证/</id>
    <published>2019-11-22T07:10:47.000Z</published>
    <updated>2019-12-05T10:01:11.542Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 表单校验规则</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 是否手机号码或者固话*/</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">validatePhoneTwo</span>(<span class="params">rule, value, callback</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> reg = <span class="regexp">/^((0\d&#123;2,3&#125;-\d&#123;7,8&#125;)|(1[34578]\d&#123;9&#125;))$/</span>;;</span><br><span class="line">  <span class="keyword">if</span> (value == <span class="string">''</span> || value == <span class="literal">undefined</span> || value == <span class="literal">null</span>) &#123;</span><br><span class="line">    callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'请输入电话号码或者固话号码'</span>));</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> ((!reg.test(value)) &amp;&amp; value != <span class="string">''</span>) &#123;</span><br><span class="line">      callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'请输入正确的电话号码或者固话号码'</span>));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      callback();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 是否固话*/</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">validateTelphone</span>(<span class="params">rule, value,callback</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> reg =<span class="regexp">/0\d&#123;2&#125;-\d&#123;7,8&#125;/</span>;</span><br><span class="line">  <span class="keyword">if</span>(value==<span class="string">''</span>||value==<span class="literal">undefined</span>||value==<span class="literal">null</span>)&#123;</span><br><span class="line">    callback();</span><br><span class="line">  &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> ((!reg.test(value)) &amp;&amp; value != <span class="string">''</span>) &#123;</span><br><span class="line">      callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'请输入正确的固话（格式：区号+号码,如010-1234567）'</span>));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      callback();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 是否手机号码*/</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">validatePhone</span>(<span class="params">rule, value,callback</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> reg =<span class="regexp">/^[1][3,4,5,7,8][0-9]&#123;9&#125;$/</span>;</span><br><span class="line">  <span class="keyword">if</span>(value==<span class="string">''</span>||value==<span class="literal">undefined</span>||value==<span class="literal">null</span>)&#123;</span><br><span class="line">    callback();</span><br><span class="line">  &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> ((!reg.test(value)) &amp;&amp; value != <span class="string">''</span>) &#123;</span><br><span class="line">      callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'请输入正确的电话号码'</span>));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      callback();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 是否身份证号码*/</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">validateIdNo</span>(<span class="params">rule, value,callback</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> city=&#123;<span class="number">11</span>:<span class="string">"北京"</span>,<span class="number">12</span>:<span class="string">"天津"</span>,<span class="number">13</span>:<span class="string">"河北"</span>,<span class="number">14</span>:<span class="string">"山西"</span>,<span class="number">15</span>:<span class="string">"内蒙古"</span>,<span class="number">21</span>:<span class="string">"辽宁"</span>,<span class="number">22</span>:<span class="string">"吉林"</span>,<span class="number">23</span>:<span class="string">"黑龙江 "</span>,<span class="number">31</span>:<span class="string">"上海"</span>,<span class="number">32</span>:<span class="string">"江苏"</span>,<span class="number">33</span>:<span class="string">"浙江"</span>,<span class="number">34</span>:<span class="string">"安徽"</span>,<span class="number">35</span>:<span class="string">"福建"</span>,<span class="number">36</span>:<span class="string">"江西"</span>,<span class="number">37</span>:<span class="string">"山东"</span>,<span class="number">41</span>:<span class="string">"河南"</span>,<span class="number">42</span>:<span class="string">"湖北 "</span>,<span class="number">43</span>:<span class="string">"湖南"</span>,<span class="number">44</span>:<span class="string">"广东"</span>,<span class="number">45</span>:<span class="string">"广西"</span>,<span class="number">46</span>:<span class="string">"海南"</span>,<span class="number">50</span>:<span class="string">"重庆"</span>,<span class="number">51</span>:<span class="string">"四川"</span>,<span class="number">52</span>:<span class="string">"贵州"</span>,<span class="number">53</span>:<span class="string">"云南"</span>,<span class="number">54</span>:<span class="string">"西藏 "</span>,<span class="number">61</span>:<span class="string">"陕西"</span>,<span class="number">62</span>:<span class="string">"甘肃"</span>,<span class="number">63</span>:<span class="string">"青海"</span>,<span class="number">64</span>:<span class="string">"宁夏"</span>,<span class="number">65</span>:<span class="string">"新疆"</span>,<span class="number">71</span>:<span class="string">"台湾"</span>,<span class="number">81</span>:<span class="string">"香港"</span>,<span class="number">82</span>:<span class="string">"澳门"</span>,<span class="number">91</span>:<span class="string">"国外 "</span>&#125;;</span><br><span class="line">  <span class="keyword">if</span>(!value || !<span class="regexp">/^\d&#123;6&#125;(18|19|20)?\d&#123;2&#125;(0[1-9]|1[012])(0[1-9]|[12]\d|3[01])\d&#123;3&#125;(\d|[xX])$/</span>.test(value))&#123;</span><br><span class="line">    callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'请输入正确的身份证号'</span>));</span><br><span class="line">  &#125;<span class="keyword">else</span> <span class="keyword">if</span>(!city[value.substr(<span class="number">0</span>,<span class="number">2</span>)])&#123;</span><br><span class="line">    callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'请输入正确的身份证号'</span>));</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="comment">//18位身份证需要验证最后一位校验位</span></span><br><span class="line">      <span class="keyword">if</span>(value.length == <span class="number">18</span>)&#123;</span><br><span class="line">        value = value.split(<span class="string">''</span>);</span><br><span class="line">          <span class="comment">//∑(ai×Wi)(mod 11)</span></span><br><span class="line">          <span class="comment">//加权因子</span></span><br><span class="line">          <span class="keyword">var</span> factor = [ <span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">2</span> ];</span><br><span class="line">          <span class="comment">//校验位</span></span><br><span class="line">          <span class="keyword">var</span> parity = [ <span class="number">1</span>, <span class="number">0</span>, <span class="string">'X'</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span> ];</span><br><span class="line">          <span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line">          <span class="keyword">var</span> ai = <span class="number">0</span>;</span><br><span class="line">          <span class="keyword">var</span> wi = <span class="number">0</span>;</span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">17</span>; i++)</span><br><span class="line">          &#123;</span><br><span class="line">              ai = value[i];</span><br><span class="line">              wi = factor[i];</span><br><span class="line">              sum += ai * wi;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span>(parity[sum % <span class="number">11</span>] != value[<span class="number">17</span>].toUpperCase())&#123;</span><br><span class="line">            callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'请输入正确的身份证号'</span>));</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> callback();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 验证是否整数</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">isInteger</span>(<span class="params">rule, value, callback</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!value) &#123;</span><br><span class="line">    callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'输入不可以为空'</span>));</span><br><span class="line">  &#125;</span><br><span class="line">  setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">Number</span>(value)) &#123;</span><br><span class="line">      callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'请输入正整数'</span>));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> re = <span class="regexp">/^[0-9]*[1-9][0-9]*$/</span>;</span><br><span class="line">      <span class="keyword">const</span> rsCheck = re.test(value);</span><br><span class="line">      <span class="keyword">if</span> (!rsCheck) &#123;</span><br><span class="line">        callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'请输入正整数'</span>));</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        callback();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * validate email</span></span><br><span class="line"><span class="comment"> * @param email</span></span><br><span class="line"><span class="comment"> * @returns &#123;boolean&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/* 是否邮箱*/</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">validateEMail</span>(<span class="params">rule, value,callback</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> reg =<span class="regexp">/^([a-zA-Z0-9]+[-_\.]?)+@[a-zA-Z0-9]+\.[a-z]+$/</span>;</span><br><span class="line">  <span class="keyword">if</span>(value==<span class="string">''</span>||value==<span class="literal">undefined</span>||value==<span class="literal">null</span>)&#123;</span><br><span class="line">    callback();</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!reg.test(value))&#123;</span><br><span class="line">      callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'请输入正确的邮箱地址！'</span>));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      callback();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//银行卡卡号校验方法。</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">formatBankNo</span>(<span class="params">rule, bankno, callback</span>) </span>&#123;</span><br><span class="line">  bankno = bankno.replace(<span class="regexp">/\s*/g</span>,<span class="string">''</span>) <span class="comment">// 去除空格</span></span><br><span class="line">  <span class="keyword">var</span> lastNum = bankno.substr(bankno.length - <span class="number">1</span>, <span class="number">1</span>); <span class="comment">//取出最后一位（与luhn进行比较）</span></span><br><span class="line">  <span class="keyword">var</span> first15Num = bankno.substr(<span class="number">0</span>, bankno.length - <span class="number">1</span>); <span class="comment">//前15或18位</span></span><br><span class="line">  <span class="keyword">var</span> newArr = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = first15Num.length - <span class="number">1</span>; i &gt; <span class="number">-1</span>; i--) &#123; <span class="comment">//前15或18位倒序存进数组</span></span><br><span class="line">    newArr.push(first15Num.substr(i, <span class="number">1</span>));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> arrJiShu = <span class="keyword">new</span> <span class="built_in">Array</span>(); <span class="comment">//奇数位*2的积 &lt;9</span></span><br><span class="line">  <span class="keyword">var</span> arrJiShu2 = <span class="keyword">new</span> <span class="built_in">Array</span>(); <span class="comment">//奇数位*2的积 &gt;9</span></span><br><span class="line">  <span class="keyword">var</span> arrOuShu = <span class="keyword">new</span> <span class="built_in">Array</span>(); <span class="comment">//偶数位数组</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; newArr.length; j++) &#123;</span><br><span class="line">    <span class="keyword">if</span> ((j + <span class="number">1</span>) % <span class="number">2</span> == <span class="number">1</span>) &#123; <span class="comment">//奇数位</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">parseInt</span>(newArr[j]) * <span class="number">2</span> &lt; <span class="number">9</span>) arrJiShu.push(<span class="built_in">parseInt</span>(newArr[j]) * <span class="number">2</span>);</span><br><span class="line">      <span class="keyword">else</span> arrJiShu2.push(<span class="built_in">parseInt</span>(newArr[j]) * <span class="number">2</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="comment">//偶数位</span></span><br><span class="line">      arrOuShu.push(newArr[j]);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> jishu_child1 = <span class="keyword">new</span> <span class="built_in">Array</span>(); <span class="comment">//奇数位*2 &gt;9 的分割之后的数组个位数</span></span><br><span class="line">  <span class="keyword">var</span> jishu_child2 = <span class="keyword">new</span> <span class="built_in">Array</span>(); <span class="comment">//奇数位*2 &gt;9 的分割之后的数组十位数</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> h = <span class="number">0</span>; h &lt; arrJiShu2.length; h++) &#123;</span><br><span class="line">      jishu_child1.push(<span class="built_in">parseInt</span>(arrJiShu2[h]) % <span class="number">10</span>);</span><br><span class="line">      jishu_child2.push(<span class="built_in">parseInt</span>(arrJiShu2[h]) / <span class="number">10</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> sumJiShu = <span class="number">0</span>; <span class="comment">//奇数位*2 &lt; 9 的数组之和</span></span><br><span class="line">  <span class="keyword">var</span> sumOuShu = <span class="number">0</span>; <span class="comment">//偶数位数组之和</span></span><br><span class="line">  <span class="keyword">var</span> sumJiShuChild1 = <span class="number">0</span>; <span class="comment">//奇数位*2 &gt;9 的分割之后的数组个位数之和</span></span><br><span class="line">  <span class="keyword">var</span> sumJiShuChild2 = <span class="number">0</span>; <span class="comment">//奇数位*2 &gt;9 的分割之后的数组十位数之和</span></span><br><span class="line">  <span class="keyword">var</span> sumTotal = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> m = <span class="number">0</span>; m &lt; arrJiShu.length; m++) &#123;</span><br><span class="line">      sumJiShu = sumJiShu + <span class="built_in">parseInt</span>(arrJiShu[m]);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> n = <span class="number">0</span>; n &lt; arrOuShu.length; n++) &#123;</span><br><span class="line">      sumOuShu = sumOuShu + <span class="built_in">parseInt</span>(arrOuShu[n]);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> p = <span class="number">0</span>; p &lt; jishu_child1.length; p++) &#123;</span><br><span class="line">      sumJiShuChild1 = sumJiShuChild1 + <span class="built_in">parseInt</span>(jishu_child1[p]);</span><br><span class="line">      sumJiShuChild2 = sumJiShuChild2 + <span class="built_in">parseInt</span>(jishu_child2[p]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//计算总和</span></span><br><span class="line">  sumTotal = <span class="built_in">parseInt</span>(sumJiShu) + <span class="built_in">parseInt</span>(sumOuShu) + <span class="built_in">parseInt</span>(sumJiShuChild1) + <span class="built_in">parseInt</span>(sumJiShuChild2);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//计算luhn值</span></span><br><span class="line">  <span class="keyword">var</span> k = <span class="built_in">parseInt</span>(sumTotal) % <span class="number">10</span> == <span class="number">0</span> ? <span class="number">10</span> : <span class="built_in">parseInt</span>(sumTotal) % <span class="number">10</span>;</span><br><span class="line">  <span class="keyword">var</span> luhn = <span class="number">10</span> - k;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (lastNum == luhn) &#123;</span><br><span class="line">  　callback();</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'请输入正确的银行卡号!'</span>))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输入密码不能少于4位</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">typePasswordLength</span> (<span class="params">rule, value, callback</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (value!== <span class="literal">null</span> &amp;&amp; value!==<span class="string">''</span>) &#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span>(value.length &lt;<span class="number">4</span>)&#123;</span><br><span class="line">        callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">"密码不得小于四位"</span>));</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        callback();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, <span class="number">100</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 姓名登录名不能包含特殊字符</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">typeSpecialCharacter</span> (<span class="params">rule, value, callback</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> reg =<span class="regexp">/^[^`!@#$%^&amp;*.&lt;&gt;]+$/</span>;</span><br><span class="line">  <span class="keyword">if</span>(value==<span class="string">''</span>||value==<span class="literal">undefined</span>||value==<span class="literal">null</span>)&#123;</span><br><span class="line">    callback();</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!reg.test(value))&#123;</span><br><span class="line">      callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'输入不能包含特殊字符'</span>));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      callback();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l
      
    
    </summary>
    
    
      <category term="Js" scheme="http://yoursite.com/categories/Js/"/>
    
    
      <category term="Js" scheme="http://yoursite.com/tags/Js/"/>
    
  </entry>
  
  <entry>
    <title>pc端常用的电脑屏幕分辨率(响应式媒体查询)</title>
    <link href="http://yoursite.com/2019/11/18/pc%E7%AB%AF%E5%B8%B8%E7%94%A8%E7%9A%84%E7%94%B5%E8%84%91%E5%B1%8F%E5%B9%95%E5%88%86%E8%BE%A8%E7%8E%87-%E5%93%8D%E5%BA%94%E5%BC%8F%E5%AA%92%E4%BD%93%E6%9F%A5%E8%AF%A2/"/>
    <id>http://yoursite.com/2019/11/18/pc端常用的电脑屏幕分辨率-响应式媒体查询/</id>
    <published>2019-11-18T09:48:35.000Z</published>
    <updated>2019-12-05T10:06:09.548Z</updated>
    
    <content type="html"><![CDATA[<p>PC端<strong><strong>****</strong></strong></p><p>按屏幕宽度大小排序（主流的用橙色标明）</p><p>分辨率   比例 | 设备尺寸</p><p>1024*500 （8.9寸）</p><p>1024*768 （比例4：3  | 10.4寸、12.1寸、14.1寸、15寸; ）</p><p>1280*800（16：10  |15.4寸）</p><p>1280*1024(比例：5：4  | 14.1寸、15.0寸)</p><p>1280*854(比例：15：10 | 15.2）</p><p>1366*768 (比例：16：9 | 不常见）</p><p>1440*900 （16：10  17寸 仅苹果用）</p><p>1440*1050（比例：5：4  | 14.1寸、15.0寸）</p><p>1600*1024（14：9  不常见）</p><p>1600*1200 （4：3 | 15、16.1）</p><p>1680*1050（16：10 | 15.4寸、20.0寸）</p><p>1920*1200 (23寸）</p><p>PC端响应式媒体断点</p><p>用min-width时，小的放上面大的在下面</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">@media screen and (min-width: <span class="number">1024</span>px)&#123;</span><br><span class="line">body&#123;font-size: 18px;color: #fe0024;&#125;</span><br><span class="line">&#125; <span class="comment">/*&gt;=1024的设备*/</span></span><br><span class="line">@media (min-width: <span class="number">1100</span>px) &#123;</span><br><span class="line">body&#123;font-size: 20px;color: #cb00fe;&#125;</span><br><span class="line">&#125; <span class="comment">/*&gt;=1024的设备*/</span></span><br><span class="line">@media (min-width: <span class="number">1280</span>px) &#123;</span><br><span class="line">body&#123;font-size: 22px;color: #fea100;&#125;</span><br><span class="line">&#125; </span><br><span class="line">@media (min-width: <span class="number">1366</span>px) &#123;</span><br><span class="line">body&#123;font-size: 24px;color:#ec0bb4&#125;</span><br><span class="line">&#125; </span><br><span class="line">@media (min-width: <span class="number">1440</span>px) &#123;</span><br><span class="line">body&#123;font-size: 25px !important;color:#2ddc04&#125;</span><br><span class="line">&#125; </span><br><span class="line">@media (min-width: <span class="number">1680</span>px) &#123;</span><br><span class="line">body&#123;font-size: 28px;color:#ef2525&#125;</span><br><span class="line">&#125; </span><br><span class="line">@media (min-width: <span class="number">1920</span>px) &#123;</span><br><span class="line">body&#123;font-size: 33px;color: #ffff00;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>max-width那么就是大的在上面，小的在下面</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">@media screen and (max-width: <span class="number">1920</span>px) &#123;</span><br><span class="line">  body&#123;font-size: 33px;color: #ffff00;&#125;</span><br><span class="line">&#125; </span><br><span class="line">@media screen and (max-width: <span class="number">1680</span>px) &#123;</span><br><span class="line">  body&#123;font-size: 28px;color:#ef2525&#125;</span><br><span class="line">&#125;</span><br><span class="line">@media screen and (max-width: <span class="number">1440</span>px) &#123;</span><br><span class="line">  body&#123;font-size: 25px !important;color:#2ddc04&#125;</span><br><span class="line">&#125; </span><br><span class="line">@media screen and (max-width: <span class="number">1366</span>px) &#123;</span><br><span class="line">  body&#123;font-size: 24px;color:#ec0bb4&#125;</span><br><span class="line">&#125;</span><br><span class="line">@media screen and (max-width: <span class="number">1280</span>px) &#123;</span><br><span class="line">  body&#123;font-size: 22px;color: #fea100;&#125;</span><br><span class="line">  &#125; </span><br><span class="line">@media screen and (max-width: <span class="number">1100</span>px) &#123;</span><br><span class="line">  body&#123;font-size: 20px;color: #cb00fe;&#125;</span><br><span class="line">&#125; </span><br><span class="line">@media screen and (max-width: <span class="number">1024</span>px)&#123;</span><br><span class="line">  body&#123;font-size: 18px;color: #fe0024;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;PC端&lt;strong&gt;&lt;strong&gt;****&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;按屏幕宽度大小排序（主流的用橙色标明）&lt;/p&gt;
&lt;p&gt;分辨率   比例 | 设备尺寸&lt;/p&gt;
&lt;p&gt;1024*500 （8.9寸）&lt;/p&gt;
&lt;p&gt;1024*768 （比例4：3
      
    
    </summary>
    
    
      <category term="Js" scheme="http://yoursite.com/categories/Js/"/>
    
    
      <category term="Js" scheme="http://yoursite.com/tags/Js/"/>
    
  </entry>
  
  <entry>
    <title>pdf预览</title>
    <link href="http://yoursite.com/2019/11/09/pdf%E9%A2%84%E8%A7%88/"/>
    <id>http://yoursite.com/2019/11/09/pdf预览/</id>
    <published>2019-11-09T13:39:33.000Z</published>
    <updated>2019-12-02T08:59:37.190Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;p&gt;&#123;&#123;title&#125;&#125;&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">    &lt;el-progress :percentage="progress" :format="format(progress)"&gt;&lt;/</span>el-progress&gt;</span><br><span class="line">    &lt;canvas v-<span class="keyword">for</span>=<span class="string">"n in totalPage"</span> :id=<span class="string">"'the-canvas' + n"</span> :key=<span class="string">"n"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"pdf-content"</span> style=<span class="string">"background-color: antiquewhite"</span> charset=<span class="string">"gb2312"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span></span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"handle-page"</span>&gt;</span><br><span class="line">      &lt;button @click=<span class="string">"enlarge"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"el-icon-plus"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">      &lt;button @click=<span class="string">"letting"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"el-icon-minus"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">      &lt;button @click=<span class="string">"rotation"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"el-icon-refresh"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">  import pdfJS from 'pdfjs-dist'</span></span><br><span class="line"><span class="regexp">  export default &#123;</span></span><br><span class="line"><span class="regexp">    props: &#123;</span></span><br><span class="line"><span class="regexp">      dataFlow: &#123;</span></span><br><span class="line"><span class="regexp">        type: String,</span></span><br><span class="line"><span class="regexp">        required: true,</span></span><br><span class="line"><span class="regexp">        default: "",</span></span><br><span class="line"><span class="regexp">      &#125;,</span></span><br><span class="line"><span class="regexp">      title: &#123;</span></span><br><span class="line"><span class="regexp">        type: String,</span></span><br><span class="line"><span class="regexp">        default: '',</span></span><br><span class="line"><span class="regexp">      &#125;,</span></span><br><span class="line"><span class="regexp">      loadPage: &#123;/</span><span class="regexp">/权限控制的页面数</span></span><br><span class="line"><span class="regexp">        type: Number,</span></span><br><span class="line"><span class="regexp">        default: 0,</span></span><br><span class="line"><span class="regexp">      &#125;,</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    data () &#123;</span></span><br><span class="line"><span class="regexp">      return &#123;</span></span><br><span class="line"><span class="regexp">        pdfDoc: null,</span></span><br><span class="line"><span class="regexp">        totalPage: 0,/</span><span class="regexp">/总的页面数</span></span><br><span class="line"><span class="regexp">        loadedPageCount: 0,/</span><span class="regexp">/当前加载的页面数</span></span><br><span class="line"><span class="regexp">        scale: 1.3, /</span><span class="regexp">/缩放倍数，1表示原始大小</span></span><br><span class="line"><span class="regexp">        rotate: 0,</span></span><br><span class="line"><span class="regexp">        progress: 0,/</span><span class="regexp">/进度条</span></span><br><span class="line"><span class="regexp">        isShow: false</span></span><br><span class="line"><span class="regexp">      &#125;</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    watch: &#123;</span></span><br><span class="line"><span class="regexp">      dataFlow (newval, oldval) &#123;</span></span><br><span class="line"><span class="regexp">        if(newval) &#123;</span></span><br><span class="line"><span class="regexp">          this.isShow = false;</span></span><br><span class="line"><span class="regexp">          this.loadedPageCount = 0;</span></span><br><span class="line"><span class="regexp">          this.progress = 0;</span></span><br><span class="line"><span class="regexp">          console.log(newval);</span></span><br><span class="line"><span class="regexp">          this.getPDFFile(newval);</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">      &#125;</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    computed: &#123;</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    created() &#123;</span></span><br><span class="line"><span class="regexp">      pdfJS.GlobalWorkerOptions.workerSrc = require('pdfjs-dist/</span>build/pdf.worker.min.js<span class="string">');</span></span><br><span class="line"><span class="string">      this.getPDFFile(this.dataFlow);</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    mounted() &#123;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    methods: &#123;</span></span><br><span class="line"><span class="string">      getPDFFile (res) &#123;</span></span><br><span class="line"><span class="string">        if (!res) return</span></span><br><span class="line"><span class="string">        this.isShow = true;</span></span><br><span class="line"><span class="string">        this.loadedPageCount = 0;</span></span><br><span class="line"><span class="string">        // cmaps防止页面中乱码的问题,cdn引用和本地引用均可。cdn引入犹豫网络问题，容易加载丢失。</span></span><br><span class="line"><span class="string">        // let CMAP_URL = '</span>https:<span class="comment">//cdn.jsdelivr.net/npm/pdfjs-dist@2.0.943/cmaps/';</span></span><br><span class="line">        <span class="keyword">let</span> CMAP_URL = <span class="string">'./static/cmaps/'</span>;</span><br><span class="line">        <span class="comment">/***********其实这里是base64解决跨域的关键************/</span></span><br><span class="line">        <span class="keyword">let</span> raw = <span class="built_in">window</span>.atob(res) <span class="comment">//从这里 到下面 得到 rawArray</span></span><br><span class="line">        <span class="keyword">let</span> rawLength = raw.length</span><br><span class="line">        <span class="keyword">let</span> rawArray = <span class="keyword">new</span> <span class="built_in">Uint8Array</span>(<span class="keyword">new</span> <span class="built_in">ArrayBuffer</span>(rawLength))</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;rawLength;i++)&#123;</span><br><span class="line">          rawArray[i] = raw.charCodeAt(i)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/********************************************/</span></span><br><span class="line">        <span class="comment">// 也就是这里！！！  这些语句是我们将base64格式的数据转成pdf.js可以解析的格式  !</span></span><br><span class="line">        <span class="comment">// (https://img-blog.csdnimg.cn/20190321174128417.png)这个是rawArray的最终格式 通过此链接可以查看图片</span></span><br><span class="line">        <span class="comment">// console.log(rawArray)</span></span><br><span class="line">        pdfJS.getDocument(&#123;<span class="attr">data</span>: rawArray,<span class="attr">cMapUrl</span>: CMAP_URL,<span class="attr">cMapPacked</span>: <span class="literal">true</span>,&#125;).then(<span class="function"><span class="params">pdf</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">this</span>.pdfDoc = pdf;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="keyword">this</span>.pdfDoc)</span><br><span class="line">          <span class="keyword">this</span>.renderPage();</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      renderPage() &#123;</span><br><span class="line">        <span class="keyword">const</span> that = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.loadPage == <span class="number">0</span> || <span class="keyword">this</span>.loadPage &gt;= <span class="keyword">this</span>.pdfDoc.numPages) &#123;</span><br><span class="line">          <span class="keyword">this</span>.totalPage = <span class="keyword">this</span>.pdfDoc.numPages;<span class="comment">//总页数</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">this</span>.totalPage = <span class="keyword">this</span>.loadPage;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//一次加载了所有页，也可以一页页加载</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>; i&lt;=<span class="keyword">this</span>.totalPage; i++) &#123;</span><br><span class="line">          <span class="keyword">this</span>.pdfDoc.getPage(i).then(<span class="function">(<span class="params">page</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> viewport = page.getViewport(<span class="keyword">this</span>.scale, <span class="keyword">this</span>.rotate); <span class="comment">//对视图展示的操作</span></span><br><span class="line">            <span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">'the-canvas'</span> + page.pageNumber);</span><br><span class="line">            <span class="keyword">var</span> context = canvas.getContext(<span class="string">'2d'</span>);</span><br><span class="line">            canvas.height = viewport.height;</span><br><span class="line">            canvas.width = viewport.width;</span><br><span class="line">            <span class="keyword">var</span> renderContext = &#123;</span><br><span class="line">              canvasContext: context,</span><br><span class="line">              viewport: viewport</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="comment">// 先加载完成所有页面，后渲染所有页面</span></span><br><span class="line">            page.render(renderContext).promise.then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">              <span class="keyword">this</span>.loadedPageCount ++;<span class="comment">//加载一个+1，最后总数和totalPage一样了，表示pdf加载完了</span></span><br><span class="line">              <span class="keyword">this</span>.$nextTick(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">this</span>.progress = <span class="built_in">Math</span>.round( <span class="keyword">this</span>.loadedPageCount / <span class="keyword">this</span>.totalPage * <span class="number">100</span>);</span><br><span class="line">                <span class="keyword">this</span>.format(<span class="keyword">this</span>.progress);</span><br><span class="line">              &#125;)</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.progress = <span class="number">100</span>;</span><br><span class="line">            <span class="built_in">console</span>.log(error);</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">//放大</span></span><br><span class="line">      enlarge()&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.progress == <span class="number">100</span>) &#123;</span><br><span class="line">          <span class="keyword">this</span>.progress = <span class="number">0</span>;</span><br><span class="line">          <span class="keyword">this</span>.loadedPageCount = <span class="number">0</span>;</span><br><span class="line">          <span class="keyword">this</span>.scale += <span class="number">0.1</span>;</span><br><span class="line">          <span class="keyword">this</span>.renderPage();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">//缩小</span></span><br><span class="line">      letting()&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.progress == <span class="number">100</span>) &#123;</span><br><span class="line">          <span class="keyword">this</span>.progress = <span class="number">0</span>;</span><br><span class="line">          <span class="keyword">this</span>.loadedPageCount = <span class="number">0</span>;</span><br><span class="line">          <span class="keyword">this</span>.scale -= <span class="number">0.1</span>;</span><br><span class="line">          <span class="keyword">this</span>.renderPage();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">// 旋转</span></span><br><span class="line">      rotation()&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.progress == <span class="number">100</span>) &#123;</span><br><span class="line">          <span class="keyword">this</span>.progress = <span class="number">0</span>;</span><br><span class="line">          <span class="keyword">this</span>.loadedPageCount = <span class="number">0</span>;</span><br><span class="line">          <span class="keyword">this</span>.rotate += <span class="number">90</span>;</span><br><span class="line">          <span class="keyword">this</span>.renderPage();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      format(percentage) &#123;</span><br><span class="line">        <span class="keyword">return</span> percentage === <span class="number">100</span> ? <span class="string">'满'</span> : <span class="string">`<span class="subst">$&#123;percentage&#125;</span>%`</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;style lang="scss" scoped&gt;</span></span><br><span class="line"><span class="regexp">  .handle-page &#123;</span></span><br><span class="line"><span class="regexp">    border-radius: 3px;</span></span><br><span class="line"><span class="regexp">    position: fixed;</span></span><br><span class="line"><span class="regexp">    top: 280px;</span></span><br><span class="line"><span class="regexp">    right: 48%;</span></span><br><span class="line"><span class="regexp">    transform: translateX(500px);</span></span><br><span class="line"><span class="regexp">    background-color: rgb(240, 240, 240);</span></span><br><span class="line"><span class="regexp">    border: 1px solid #C4C9D0;</span></span><br><span class="line"><span class="regexp">    button &#123;</span></span><br><span class="line"><span class="regexp">      display: block;</span></span><br><span class="line"><span class="regexp">      width: 30px;</span></span><br><span class="line"><span class="regexp">      height: 30px;</span></span><br><span class="line"><span class="regexp">      padding: 10px 0;</span></span><br><span class="line"><span class="regexp">      margin: 0 10px;</span></span><br><span class="line"><span class="regexp">      border: 0;</span></span><br><span class="line"><span class="regexp">      outline: none;</span></span><br><span class="line"><span class="regexp">      box-sizing:content-box;</span></span><br><span class="line"><span class="regexp">      font-size: 14px;</span></span><br><span class="line"><span class="regexp">      cursor: pointer;</span></span><br><span class="line"><span class="regexp">      border-bottom: 1px solid #C4C9D0;</span></span><br><span class="line"><span class="regexp">      background-color: rgb(240, 240, 240);</span></span><br><span class="line"><span class="regexp">      &amp;:hover &#123;</span></span><br><span class="line"><span class="regexp">        color: #009A52;</span></span><br><span class="line"><span class="regexp">      &#125;</span></span><br><span class="line"><span class="regexp">      &amp;:last-child &#123;</span></span><br><span class="line"><span class="regexp">        border-bottom: none;</span></span><br><span class="line"><span class="regexp">      &#125;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">  .pdf-content &#123;</span></span><br><span class="line"><span class="regexp">    position: relative;</span></span><br><span class="line"><span class="regexp">    left: 50%;</span></span><br><span class="line"><span class="regexp">    transform: translateX(-50%);</span></span><br><span class="line"><span class="regexp">    background-color: antiquewhite;</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>style&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l
      
    
    </summary>
    
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>H5C3新特性</title>
    <link href="http://yoursite.com/2019/11/04/H5C3%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    <id>http://yoursite.com/2019/11/04/H5C3新特性/</id>
    <published>2019-11-04T08:41:59.000Z</published>
    <updated>2019-12-05T10:07:19.936Z</updated>
    
    <content type="html"><![CDATA[<p>CSS3新特性：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">1.颜色：新增RGBA，HSLA模式 </span><br><span class="line">2. 文字阴影（text-shadow） </span><br><span class="line">3. 边框： 圆角（border-radius）边框阴影： box-shadow </span><br><span class="line">4. 盒子模型：box-sizing </span><br><span class="line">5. 背景：background-size 设置背景图片的尺寸background-origin 设置背景图片的原点background-clip 设置背景图片的裁切区域，以”，”分隔可以设置多背景，用于自适应布局 </span><br><span class="line">6. 渐变：linear-gradient、radial-gradient </span><br><span class="line">7. 过渡：transition，可实现动画 </span><br><span class="line">8. 自定义动画 </span><br><span class="line">9. 在CSS3中唯一引入的伪元素 ：selection. </span><br><span class="line">10. 媒体查询，多栏布局 </span><br><span class="line">11. border-image </span><br><span class="line">12. 2D转换：transform：translate(x，y) rotate(x，y) skew(x，y) scale(x，y) </span><br><span class="line">13. 3D转换 </span><br><span class="line">14.新增选择器：属性选择器、伪类选择器、伪元素选择器。 </span><br><span class="line"></span><br><span class="line">H5新特性:</span><br><span class="line"></span><br><span class="line">1. 拖拽释放(Drag and drop) API </span><br><span class="line">2. 语义化更好的内容标签（header,nav,footer,aside,article,section） </span><br><span class="line">3. 音频、视频API(audio,video) </span><br><span class="line">4. 画布(Canvas) API </span><br><span class="line">5. 地理(Geolocation) API </span><br><span class="line">6. 数据存储 localStorage、sessionStorage  </span><br><span class="line">7. 表单控件，calendar、date、time、email、url、search</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;CSS3新特性：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;
      
    
    </summary>
    
    
      <category term="H5C3" scheme="http://yoursite.com/categories/H5C3/"/>
    
    
      <category term="H5C3" scheme="http://yoursite.com/tags/H5C3/"/>
    
  </entry>
  
  <entry>
    <title>人间失格读后感</title>
    <link href="http://yoursite.com/2019/11/04/%E4%BA%BA%E9%97%B4%E5%A4%B1%E6%A0%BC%E8%AF%BB%E5%90%8E%E6%84%9F/"/>
    <id>http://yoursite.com/2019/11/04/人间失格读后感/</id>
    <published>2019-11-04T08:28:22.000Z</published>
    <updated>2019-11-04T08:30:28.332Z</updated>
    
    <content type="html"><![CDATA[<p>小时候的叶藏是一个心思很重的孩子，太早的成熟使他有着同龄人所没有的敏感。虽然生活在所有人中间，但是给人的感觉确实离群索居的，与周围的人显得那么格格不入。在很小的时候他就知道他的幸福观与这世上所有人的幸福观都大相径庭，并为此而彻夜难眠痛苦呻吟走火入魔，这种状态，在其他人看来或许是离经叛道的，一旦他表露这种想法的话，大概会被人当做精神病人送进冷冰冰的医院吧。</p><p>他决定扮演一个小丑，来掩饰自己真实的内心世界，来取悦这世上所有的人，自己的亲人朋友，自己的老师同学，乃至周围的各种形形色色的所有人。读到这里，心真的很难不痛，这本不是一个孩子应该承受的！</p><p>长大后的叶藏越发的颓废，逃课、酗酒、抽烟、娼妓，糜烂的生活像极了我们眼中坏小子的形象。他陷得越来越深了，终于在某一天，与常子一起跳入了冰冷的河水中，常子死了，叶藏还活着，只是这种活着真的是叶藏所需要的吗？行尸走肉一般卑微的活着。。。除了压抑，还是压抑，找不到别的形容词更能形容读人间失格的感觉。</p><p>与其说人间失格是太宰治最后的遗著，不如说这是他留给这个冷冰冰的世界的遗书更合适。太宰治在《人间失格》中，藉大庭叶藏的独白表达他的人生与思想：「信赖是罪吗？」「已经没有回头路了，不论怎麼做，做什麼，都只会徒劳无功，只会让人觉得更差耻吧了！」「苟活著就是罪恶的种子！我的不幸，是无力拒绝他人的不幸。一旦拒绝，不论对方或是自己心裏，永远都有一道无法弥补的白色裂痕。我被这样的恐惧胁迫著。问问老天：不抵抗是罪吗？」</p><p>非常沉重的独白，是人生绝望的极致。太了解人生，也就绝对悲观。这也许就是太宰治的成就，也是他的悲剧。</p><p>活在自己的世界里，卑微而自由，这是叶藏或者是太宰治的选择。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;小时候的叶藏是一个心思很重的孩子，太早的成熟使他有着同龄人所没有的敏感。虽然生活在所有人中间，但是给人的感觉确实离群索居的，与周围的人显得那么格格不入。在很小的时候他就知道他的幸福观与这世上所有人的幸福观都大相径庭，并为此而彻夜难眠痛苦呻吟走火入魔，这种状态，在其他人看来或
      
    
    </summary>
    
    
      <category term="其他" scheme="http://yoursite.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="其他" scheme="http://yoursite.com/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>云端有个小卖部读后感</title>
    <link href="http://yoursite.com/2019/11/04/%E4%BA%91%E7%AB%AF%E6%9C%89%E4%B8%AA%E5%B0%8F%E5%8D%96%E9%83%A8%E8%AF%BB%E5%90%8E%E6%84%9F/"/>
    <id>http://yoursite.com/2019/11/04/云端有个小卖部读后感/</id>
    <published>2019-11-04T08:28:02.000Z</published>
    <updated>2019-11-04T08:30:11.243Z</updated>
    
    <content type="html"><![CDATA[<p> 一次坐火车去闺蜜那里,到的太早,闲来无事去书店买了这本云端有个小卖部,今天写下读完的感受.</p><p> 我几乎是含泪看完的这本书,主人公并没有天赋异禀,也没有帅气多金,他只是一个普通的不能在普通的凡人,甚至在牛大田和毛婷婷,连小球球都比不上的让人深刻,相反他的外婆王莺莺确很出彩,火急火燎的暴脾气,每天开着拖拉机去进货,甚至把刘十三从一个城市拉回老家,她从不去表达自己对刘十三的爱,确又无时不刻不在展现她的爱.她不想让刘十三在外面闯荡,却不会去阻拦他,甚至心疼他在外过的拮据,偷偷塞钱,做刘十三爱吃的饭菜.知道自己癌症后隐瞒把刘十三接回来陪自己.可能是隔代亲,也可能刘十三是唯一的把他和自己的女儿联系在一起的那个人,遗憾的是他最后都没有在见到过自己的女儿.<br>​ 刘十三,一个拼了命想去大城市的年轻人,他妈妈留下的笔记就是去大城市工作,找个爱的女孩结婚,考上清货北大.他和我们是一样的普通到不能再普通,事业一直停滞不前,同事之间的关系也很现实,当你在低谷,没有人会拉你,他们还会使劲的去踩踏你,感情上他一直忘不掉女神，一直恋恋不舍，直到时间模糊了他的记忆，这也是人生吧，当时觉得天大的事情，若干年后回头看时，也不过尔尔。难过可以，伤心可以，但是不能放弃自己，很庆幸刘十三遇到了程霜，那个女孩带她走了出来，让他明白了什么是爱.<br>​ 小球球让人心疼到骨子里,在该拥有童真童趣的年纪要伪装自己的情绪,担负起责任,甚至知道被误解了都不会去为自己辩解,他的懂事让人心疼.<br>​ 程霜,是个那么开朗，又让人那么心疼的姑娘，和病魔抗争了那么久，最终还是离开了，生命不知道何时就会终止,拼全力去努力生活享受所有好的与坏的处境,没有什么比活着更幸福.<br>​ 最后的最后,王莺莺和程霜都离开了刘十三,球球去了福利院,美好的事情从来都不属于生活,生活本来就是悲喜交加的.毛婷婷不管弟弟怎么做,从没有放弃过他,毛婷婷的婚礼上，一直在等她的弟弟，不过没有能够等到。她在婚礼之后，就要离开云边镇，去到远方，这也是一个姐姐对自己的唯一亲人的告别吧。,牛大田烧掉棋牌室为了秦小贞,都是生活的影子,也是这些事情丰富了刘十三的生活.</p><p> 悲伤和希望，都是一缕光，得与失从来都是成对出现的。</p><ol><li>有朵盛开的云，缓缓滑过山顶，随风飘向天边 ，我们慢慢明白，有些告别，就是最后一面。</li><li>山风微微，像月光下晃动的海浪， 温和而柔软，停留在时光的背后， 变成小时候听过的故事。 在遥远的城市，陌生的地方， 有他未曾见过的山和海。　</li><li>人和人之间舒服的关系，是可以一直不说话，也可以随时说话。　　</li><li>生命是有光的。 在我熄灭以前，能够照亮你一点，就是我所有能做的了。 我爱你，你要记得我。　　</li><li>有些人刻苦铭心， 没几年会遗忘。 有些人不论生死， 都陪在身旁。　</li><li>等待而已， 也叫努力? 是在等别人离开， 还是在等自己放弃?　　</li><li>云边有个小卖部，货架堆着岁月和夕阳，背后就是山。老人靠着躺椅假装睡着，小孩子偷走了一块糖。泪水几点钟落地，飞鸟要去向何方。人们聚和离，云朵来又往。讲故事的人，总有一个故事不愿讲。时光飞逝，悄悄话变成纸张。　　</li><li>夏夜的歌声，冬至的歌声， 都从水面掠过，皱起一层波纹， 像天空坠落的泪水，又归于天空。 人们随口说的一些话，跌落墙角， 风吹不走，阳光烧不掉，独自沉眠。　　</li><li>“我有很重要的事， 输了的话， 我就真的一无所有了。”　　</li><li>这世上大部分抒情，都会被认作是无病呻吟。能理解你得了什么病，基本上就是知己。</li><li>刘十三的家在山间，院子开了一个小卖部，从窗户伸出手去，彷佛摸到云朵　</li><li>程霜离开的时候，春风穿过云边镇，花瓣纷飞，好像幸福真的存在似的。　</li><li>原来世界上很多事情，不是你有计划，有毅力就能做到的。　　</li><li>他一无所知，无法描绘所有人创造的未来世界里，如何创造一个家。他孜孜不倦地承诺和分享，只是把扎根他每个细胞的小镇生涯，换了本日历，成为他反复的描绘。　　</li><li>如果每件事情都算来算去，那么等到想明白，可能就来不及做了。　</li><li>比你强的人，要么对你怜悯，要么对你无视。　　</li><li>印象中，水库秋冬弥漫水雾，春夏明艳斑斓，白天水波娴静温柔，深不见底。它能包裹孩子仰面漂游，也能藏着吃人水猴的传说。　</li><li>山这边是刘十三的童年，山那边是外婆的海。山风微微，像月光下晃动的海浪，有的，没的，温和而柔软，停留在时光的背后，变成小时候听过的故事。　　</li><li>有些人刻骨铭心，没几年就遗忘。有些人不论生死，都陪在你身旁。　　</li><li>再习惯等待，等不来依旧难过，那种难过，书上说叫做失望。直到长大后，他才明白，还有更大的难过，叫做绝望。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt; 一次坐火车去闺蜜那里,到的太早,闲来无事去书店买了这本云端有个小卖部,今天写下读完的感受.&lt;/p&gt;
&lt;p&gt; 我几乎是含泪看完的这本书,主人公并没有天赋异禀,也没有帅气多金,他只是一个普通的不能在普通的凡人,甚至在牛大田和毛婷婷,连小球球都比不上的让人深刻,相反他的外婆王莺
      
    
    </summary>
    
    
      <category term="其他" scheme="http://yoursite.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="其他" scheme="http://yoursite.com/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>js为一个元素绑定多个事件</title>
    <link href="http://yoursite.com/2019/11/04/js%E4%B8%BA%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%E7%BB%91%E5%AE%9A%E5%A4%9A%E4%B8%AA%E4%BA%8B%E4%BB%B6/"/>
    <id>http://yoursite.com/2019/11/04/js为一个元素绑定多个事件/</id>
    <published>2019-11-04T08:15:24.000Z</published>
    <updated>2019-12-02T09:00:12.182Z</updated>
    
    <content type="html"><![CDATA[<p>onclick()这种写法是DOM0级规范的写法，是所有的浏览器支持的，但是这种写法有不能同时绑定多个事件、使代码耦合在了一起的弊端。但是addEventListener() 是DOM2标准中定义的方法，它可以控制是在事件捕获阶段或者是在冒泡阶段调用事件处理程序。既然这个是DOM2标准中定义的，那么只有支持DOM2级事件处理程序的浏览器才支持这个方法（IE9,Firefox,Safari,Chrome和Opera支持）。</p><h3 id="一、onclick-方式"><a href="#一、onclick-方式" class="headerlink" title="一、onclick()方式"></a><strong>一、onclick()方式</strong></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;绑定多个事件&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script&gt;</span></span><br><span class="line"><span class="regexp">        window.onload = function()&#123;</span></span><br><span class="line"><span class="regexp">            document.getElementById('btn').onclick = function () &#123;</span></span><br><span class="line"><span class="regexp">                alert(1);</span></span><br><span class="line"><span class="regexp">            &#125;;</span></span><br><span class="line"><span class="regexp">            document.getElementById('btn').onclick = function () &#123;</span></span><br><span class="line"><span class="regexp">                alert(2);</span></span><br><span class="line"><span class="regexp">            &#125;;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">&lt;button id="btn"&gt;点我&lt;/</span>button&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure><p>运行结果是第二个onclick把第一个onclick给覆盖了，虽然大部分情况用on就可以完成想要的结果，但是有时又需要执行多个相同的事件，很明显如果用on不能完成</p><h3 id="二、addEventListener-方法"><a href="#二、addEventListener-方法" class="headerlink" title="二、addEventListener()方法"></a>二、addEventListener()方法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;绑定多个事件&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script&gt;</span></span><br><span class="line"><span class="regexp">        window.onload = function()&#123;</span></span><br><span class="line"><span class="regexp">            document.getElementById('btn').addEventListener('click', function()&#123;</span></span><br><span class="line"><span class="regexp">                alert(1);</span></span><br><span class="line"><span class="regexp">            &#125;, false);</span></span><br><span class="line"><span class="regexp">            document.getElementById('btn').addEventListener('click', function()&#123;</span></span><br><span class="line"><span class="regexp">                alert(2);</span></span><br><span class="line"><span class="regexp">            &#125;, false);</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">&lt;button id="btn"&gt;点我&lt;/</span>button&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure><p>addEventListenert方法第一个参数填写事件名，第二个参数是一个函数，第三个参数是指在冒泡阶段还是捕获阶段处理事件处理程序。true代表捕获阶段处理， false代表冒泡阶段处理。第三个参数可以省略，大多数情况也不需要用到第三个参数，不写第三个参数默认false</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;onclick()这种写法是DOM0级规范的写法，是所有的浏览器支持的，但是这种写法有不能同时绑定多个事件、使代码耦合在了一起的弊端。但是addEventListener() 是DOM2标准中定义的方法，它可以控制是在事件捕获阶段或者是在冒泡阶段调用事件处理程序。既然这个是
      
    
    </summary>
    
    
      <category term="Js" scheme="http://yoursite.com/categories/Js/"/>
    
    
      <category term="Js" scheme="http://yoursite.com/tags/Js/"/>
    
  </entry>
  
  <entry>
    <title>JS数组去重的两种方法</title>
    <link href="http://yoursite.com/2019/11/04/JS%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2019/11/04/JS数组去重的两种方法/</id>
    <published>2019-11-04T08:14:57.000Z</published>
    <updated>2019-12-02T08:57:51.563Z</updated>
    
    <content type="html"><![CDATA[<h5 id="一、循环遍历法（传统思路）"><a href="#一、循环遍历法（传统思路）" class="headerlink" title="一、循环遍历法（传统思路）"></a><strong>一、循环遍历法（传统思路）</strong></h5><p>最简单粗暴的算法，新建一个空数组，然后遍历原数组，将不在新数组中的项添加到新数组，最后返回新数组</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">compare</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> newarr = [];<span class="comment">//新建空数组</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;<span class="comment">//遍历原数组</span></span><br><span class="line">        <span class="keyword">var</span> isadd = <span class="literal">true</span>;<span class="comment">//设置标记</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; newarr.length; j++) &#123;<span class="comment">//遍历新数组</span></span><br><span class="line">            <span class="keyword">if</span> (arr[i] === newarr[j]) &#123;</span><br><span class="line">                isadd = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="comment">//如果当前原数组中的项，在新数组中存在，则标记为‘不添加’，并跳出新数组遍历</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (isadd) &#123;</span><br><span class="line">            newarr.push(arr[i]);</span><br><span class="line">        &#125;<span class="comment">//若标记为‘添加’（即遍历新数组后，没有发现相同项），则添加进新数组</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> newarr;<span class="comment">//返回新数组</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">5</span>]</span><br><span class="line"><span class="built_in">console</span>.log(compare(arr))</span><br></pre></td></tr></table></figure><p><strong>二、排序比较法（巧妙转换）</strong></p><p>相对第一种方法，需要每次遍历新旧两个数组，效率不高的情况。此方法先对原数组进行排序，这样每次只要与新数组的最后一项比较即可，大大提高效率</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sortarr</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> arrsort = arr.sort();<span class="comment">//对原数组进行排序</span></span><br><span class="line">    <span class="keyword">var</span> newarr = [];<span class="comment">//新建空数组</span></span><br><span class="line">    newarr.push(arrsort[<span class="number">0</span>]);<span class="comment">//将排序后数值的第一项给添加到新数组</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; arrsort.length; i++) &#123;<span class="comment">//遍历排序后的数组</span></span><br><span class="line">        <span class="keyword">if</span> (arrsort[i] !== newarr[newarr.length - <span class="number">1</span>]) &#123;</span><br><span class="line">            newarr.push(arrsort[i])</span><br><span class="line">        &#125;<span class="comment">//若当前项与新数组最后一项不同，这添加到新数组</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> newarr;<span class="comment">//返回新数组</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">5</span>]</span><br><span class="line"><span class="built_in">console</span>.log(sortarr(arr))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;一、循环遍历法（传统思路）&quot;&gt;&lt;a href=&quot;#一、循环遍历法（传统思路）&quot; class=&quot;headerlink&quot; title=&quot;一、循环遍历法（传统思路）&quot;&gt;&lt;/a&gt;&lt;strong&gt;一、循环遍历法（传统思路）&lt;/strong&gt;&lt;/h5&gt;&lt;p&gt;最简单粗暴的算法，
      
    
    </summary>
    
    
      <category term="Js" scheme="http://yoursite.com/categories/Js/"/>
    
    
      <category term="Js" scheme="http://yoursite.com/tags/Js/"/>
    
  </entry>
  
  <entry>
    <title>Vue+element实现全选与反选</title>
    <link href="http://yoursite.com/2019/11/04/Vue-element%E5%AE%9E%E7%8E%B0%E5%85%A8%E9%80%89%E4%B8%8E%E5%8F%8D%E9%80%89/"/>
    <id>http://yoursite.com/2019/11/04/Vue-element实现全选与反选/</id>
    <published>2019-11-04T08:14:15.000Z</published>
    <updated>2019-12-05T10:09:48.080Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div v-<span class="keyword">for</span>=<span class="string">"(item,index) in List"</span> :key=<span class="string">"index"</span>&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-checkbox  v-model=<span class="string">'checkArr'</span> :label=item.id  @change=<span class="string">"changevalue"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span></span><br><span class="line">        &lt;span&gt;&#123;&#123;item.name&#125;&#125;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>div&gt;</span><br><span class="line">      &lt;table&gt;</span><br><span class="line">      &lt;<span class="regexp">/table&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">    &lt;el-checkbox v-model=<span class="string">'cheackAllChecked'</span> @change=<span class="string">'checkAllFun'</span>&gt;全选&lt;<span class="regexp">/el-checkbox&gt;</span></span><br><span class="line"><span class="regexp">    &lt;span @click="reverseChecked"&gt;反选&lt;/</span>span&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      List: [</span><br><span class="line">        &#123;</span><br><span class="line">          id: <span class="string">"1"</span>,</span><br><span class="line">          name:<span class="string">'香蕉'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: <span class="string">"2"</span>,</span><br><span class="line">          name:<span class="string">'苹果'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: <span class="string">"3"</span>,</span><br><span class="line">          name:<span class="string">'橙子'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: <span class="string">"4"</span>,</span><br><span class="line">          name:<span class="string">'鸭梨'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: <span class="string">"5"</span>,</span><br><span class="line">          name:<span class="string">'葡萄'</span></span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      cheackAllChecked: <span class="literal">false</span>,</span><br><span class="line">      checkArr: [],</span><br><span class="line">      checkCompleteArr: []</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    <span class="comment">//实现全选</span></span><br><span class="line">    checkAllFun() &#123;</span><br><span class="line">      <span class="keyword">var</span> _this = <span class="keyword">this</span>;</span><br><span class="line">      <span class="keyword">this</span>.checkArr = [];</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.cheackAllChecked) &#123;</span><br><span class="line">        <span class="keyword">this</span>.List.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item, index</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">if</span> (index &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            _this.checkArr.push(item.id);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//实现反选</span></span><br><span class="line">    reverseChecked() &#123;</span><br><span class="line">      <span class="keyword">var</span> changeArr = [];</span><br><span class="line">      <span class="keyword">this</span>.List.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item, index</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (index &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">          changeArr.push(item.id);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="keyword">this</span>.removeByValue(changeArr, <span class="keyword">this</span>.checkArr);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//反选过滤函数</span></span><br><span class="line">    removeByValue(changearr, checkarr) &#123;</span><br><span class="line">      <span class="keyword">var</span> _this = <span class="keyword">this</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; checkarr.length; j++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; changearr.length; i++) &#123;</span><br><span class="line">          <span class="keyword">if</span> (changearr[i] === checkarr[j]) &#123;</span><br><span class="line">            changearr.splice(i, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">this</span>.checkArr = changearr;</span><br><span class="line">      <span class="keyword">if</span> (changearr.length &lt;= _this.checkCompleteArr.length) &#123;</span><br><span class="line">        <span class="keyword">this</span>.cheackAllChecked = <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (changearr.length === _this.checkCompleteArr.length) &#123;</span><br><span class="line">        <span class="keyword">this</span>.cheackAllChecked = <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//选项的change事件</span></span><br><span class="line">    changevalue() &#123;</span><br><span class="line">      <span class="keyword">var</span> _this = <span class="keyword">this</span>;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.checkArr.length &lt;= _this.checkCompleteArr.length) &#123;</span><br><span class="line">        <span class="keyword">this</span>.cheackAllChecked = <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.checkArr.length === _this.checkCompleteArr.length) &#123;</span><br><span class="line">        <span class="keyword">this</span>.cheackAllChecked = <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//全选或反选用到的完整数组值</span></span><br><span class="line">  mounted() &#123;</span><br><span class="line">    <span class="keyword">var</span> _this = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">this</span>.List.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item, index</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (index &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        _this.checkCompleteArr.push(item.id);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l
      
    
    </summary>
    
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
  </entry>
  
</feed>
