<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>晓婷成长记录</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-03-21T07:31:20.660Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>xiaoting</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vue项目中keepAlive的使用</title>
    <link href="http://yoursite.com/2020/03/20/vue%E9%A1%B9%E7%9B%AE%E4%B8%ADkeepAlive%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2020/03/20/vue项目中keepAlive的使用/</id>
    <published>2020-03-20T03:10:20.000Z</published>
    <updated>2020-03-21T07:31:20.660Z</updated>
    
    <content type="html"><![CDATA[<p><code>&lt;keep-alive&gt;</code>是Vue的内置组件，能在组件切换时保持之前的加载状态（缓存不活动的组件），防止重复渲染DOM，减少接口请求，减少服务器压力。</p><p><strong>prop:</strong></p><ul><li>include: 字符串或正则表达式。只有匹配的组件会被缓存。</li><li>exclude: 字符串或正则表达式。任何匹配的组件都不会被缓存。</li></ul><p><strong>常见用法</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">'payOrder'</span>,</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      username: <span class="string">''</span>,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;keep-alive include=<span class="string">"payOrder"</span>&gt;</span><br><span class="line">  &lt;router-view /&gt;</span><br><span class="line">&lt;<span class="regexp">/keep-alive&gt;</span></span><br></pre></td></tr></table></figure><p><strong>利用路由中的meta属性来控制</strong></p><p>使用$route.meta的keepAlive属性,keep-alive代码可以结合v-if进行包裹，如果meta中的keepAlive为true进行缓存，否侧不进行缓存，</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;keep-alive&gt;</span><br><span class="line">      &lt;router-view v-<span class="keyword">if</span>=<span class="string">"$route.meta.keepAlive"</span> /&gt;</span><br><span class="line">&lt;<span class="regexp">/keep-alive&gt;</span></span><br><span class="line"><span class="regexp">&lt;router-view v-if="!$route.meta.keepAlive" /</span>&gt;</span><br></pre></td></tr></table></figure><p>需要在<code>router</code>中设置router的元信息meta：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">"/"</span>,</span><br><span class="line">    name: <span class="string">"Home"</span>,</span><br><span class="line">    component: Home,</span><br><span class="line">    meta:&#123;</span><br><span class="line">      keepAlive:<span class="literal">false</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">"/payment"</span>,</span><br><span class="line">    name: <span class="string">"payment"</span>,</span><br><span class="line">    redirect: <span class="string">'/payment/order'</span>,</span><br><span class="line">    component: Payment,</span><br><span class="line">    children: [</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">"order"</span>,</span><br><span class="line">        name: <span class="string">"payOrder"</span>,</span><br><span class="line">        meta:&#123;</span><br><span class="line">          keepAlive:<span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">"@/views/payment/pay_order.vue"</span>),</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">  &#125;</span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>也可以通过路由导航钩子实现页面的刷新</p><ul><li>首页是A页面</li><li>B页面跳转到A，A页面需要缓存</li><li>C页面跳转到A，A页面不需要被缓存</li></ul><p>思路是在每个路由的<code>beforeRouteLeave(to, from, next)</code>钩子中设置<code>to.meta.keepAlive</code>：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    path: <span class="string">'/'</span>,</span><br><span class="line">    name: <span class="string">'A'</span>,</span><br><span class="line">    component: A,</span><br><span class="line">    meta: &#123;</span><br><span class="line">        keepAlive: <span class="literal">true</span> <span class="comment">// 需要被缓存</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;&#125;,</span><br><span class="line">    beforeRouteLeave(to, <span class="keyword">from</span>, next) &#123;</span><br><span class="line">         <span class="comment">// 设置下一个路由的 meta</span></span><br><span class="line">        to.meta.keepAlive = <span class="literal">true</span>;  <span class="comment">// B 跳转到 A 时，让 A 缓存，即不刷新</span></span><br><span class="line">        next();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;&#125;,</span><br><span class="line">    beforeRouteLeave(to, <span class="keyword">from</span>, next) &#123;</span><br><span class="line">        <span class="comment">// 设置下一个路由的 meta</span></span><br><span class="line">        to.meta.keepAlive = <span class="literal">false</span>; <span class="comment">// C 跳转到 A 时让 A 不缓存，即刷新</span></span><br><span class="line">        next();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>keep-alive生命周期钩子函数：activated、deactivated</strong></p><p>使用<code>&lt;keep-alive&gt;</code>会将数据保留在内存中，如果要在每次进入页面的时候获取最新的数据，需要在<code>activated</code>阶段获取数据，承担原来created钩子中获取数据的任务。</p><p><strong>使用keep-alive时钩子函数执行顺序：</strong></p><p>beforeRouteEnter–&gt; created –&gt; mounted –&gt; activated –&gt; deactivated，</p><p>再次进入缓存页面时只会执行：</p><p>beforeRouteEnter–&gt; activated –&gt; deactivated</p><p>所以在缓存页面中如果需要第二次进入页面仍然发送请求，可以将ajax请求放在activated中</p><p><strong>不使用keep-alive时钩子函数执行顺序：</strong></p><p>beforeRouteEnter–&gt; created –&gt; mounted –&gt; destroyed</p><p><code>keep-alive</code>相关的钩子函数：</p><ul><li><strong>activated</strong>： 缓存的组件再次进入时会触发</li><li><strong>deactivated</strong>： 缓存的组件离开时会触发</li></ul><p>路由元信息meta中添加一个isBack字段，用来解决beforeRouterEnter不能直接访问vue实例。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    path: <span class="string">"/"</span>,</span><br><span class="line">    name: <span class="string">"Home"</span>,</span><br><span class="line">    component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span> (<span class="string">'@/views/Home.vue'</span>),</span><br><span class="line">    meta:&#123;</span><br><span class="line">      keepAlive:<span class="literal">false</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">"/order"</span>,</span><br><span class="line">    name: <span class="string">"payOrder"</span>,</span><br><span class="line">    component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">"@/views/payment/pay_order.vue"</span>),</span><br><span class="line">    meta:&#123;</span><br><span class="line">      keepAlive:<span class="literal">true</span>,</span><br><span class="line">      isBack: <span class="literal">false</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">"/info"</span>,</span><br><span class="line">    name: <span class="string">"payInfo"</span>,</span><br><span class="line">    meta:&#123;</span><br><span class="line">      keepAlive:<span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">"@/views/payment/pay_info.vue"</span>),</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>借助<code>beforeRouteEnter</code>钩子函数来判断页面来源：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">beforeRouteEnter(to, <span class="keyword">from</span>, next) &#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="keyword">from</span>.name === <span class="string">'payInfo'</span>) &#123; <span class="comment">//判断是从哪个路由过来的，若是detail页面不需要刷新获取新数据，直接用之前缓存的数据即可</span></span><br><span class="line">      to.meta.isBack = <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  next();</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>最后，需要借助keep-alive提供钩子函数<code>activated</code>来完成是否更新：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">activated() &#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">this</span>.$route.meta.isBack) &#123;</span><br><span class="line">      <span class="comment">// 如果isBack是false，表明需要获取新数据，否则就不再请求，直接使用缓存的数据</span></span><br><span class="line">      <span class="keyword">this</span>.getData(); <span class="comment">// ajax获取数据方法</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 恢复成默认的false，避免isBack一直是true，导致下次无法获取数据</span></span><br><span class="line">    <span class="keyword">this</span>.$route.meta.isBack = <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>在<strong>keep-alive组件前进的页面刷新导致keep-alive组件状态丢失</strong></p><p>继续以上面的A、B页面为例，在进入详情B页面后，然后刷新，这时列表A页面的缓存的数据都丢失了，由于上面的判断规则也会导致不会重新获取数据。所以对于这种问题，还需要额外加一些判断条件。由于keep-alive第一次进入时会执行<strong>created</strong>方法，所以利用这点加一个标识来加以判断：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//第一次进入keep-alive路由组件时</span></span><br><span class="line"> created() &#123;</span><br><span class="line">   <span class="keyword">this</span>.isFirstEnter = <span class="literal">true</span>;</span><br><span class="line">  <span class="comment">// 只有第一次进入或者刷新页面后才会执行此钩子函数，使用keep-alive后（2+次）进入不会再执行此钩子函数</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>activated钩子函数也需要增加对应的判断：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">activated() &#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">this</span>.$route.meta.isBack || <span class="keyword">this</span>.isFirstEnter)&#123;</span><br><span class="line">        <span class="comment">// 如果isBack是false，表明需要获取新数据，否则就不再请求，直接使用缓存的数据</span></span><br><span class="line">        <span class="comment">// 如果isFirstEnter是true，表明是第一次进入此页面或用户刷新了页面，需获取新数据</span></span><br><span class="line">        <span class="keyword">this</span>.data = <span class="string">''</span><span class="comment">// 把数据清空，可以稍微避免让用户看到之前缓存的数据</span></span><br><span class="line">        <span class="keyword">this</span>.getData();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 恢复成默认的false，避免isBack一直是true，导致下次无法获取数据</span></span><br><span class="line">    <span class="keyword">this</span>.$route.meta.isBack=<span class="literal">false</span></span><br><span class="line">    <span class="comment">// 恢复成默认的false，避免isBack一直是true，导致每次都获取新数据</span></span><br><span class="line">    <span class="keyword">this</span>.isFirstEnter=<span class="literal">false</span>;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><ul><li><strong>缓存过多keep-alive组件，因常驻内存会导致内存占用过多</strong></li></ul><p>这是一个特别需要注意的问题，尤其是当整个系统或者系统大部分页面都使用keep-alive来缓存组件时，由于其是缓存在内存中的，若不加处理，内存堆积越来越大，导致系统卡顿。正确的解决方案是：<strong>需要及时销毁掉内存缓存的组件</strong>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;&amp;lt;keep-alive&amp;gt;&lt;/code&gt;是Vue的内置组件，能在组件切换时保持之前的加载状态（缓存不活动的组件），防止重复渲染DOM，减少接口请求，减少服务器压力。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;prop:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
      
    
    </summary>
    
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>测试文章</title>
    <link href="http://yoursite.com/2020/03/10/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <id>http://yoursite.com/2020/03/10/测试文章/</id>
    <published>2020-03-10T10:24:19.000Z</published>
    <updated>2020-03-10T10:24:19.166Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>初始化css</title>
    <link href="http://yoursite.com/2020/01/03/%E5%88%9D%E5%A7%8B%E5%8C%96css/"/>
    <id>http://yoursite.com/2020/01/03/初始化css/</id>
    <published>2020-01-03T06:39:56.000Z</published>
    <updated>2020-01-03T06:41:02.102Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*! minireset.css v0.0.4 | MIT License | github.com/jgthms/minireset.css */</span></span><br><span class="line"><span class="selector-tag">html</span>,</span><br><span class="line"><span class="selector-tag">body</span>,</span><br><span class="line"><span class="selector-tag">p</span>,</span><br><span class="line"><span class="selector-tag">ol</span>,</span><br><span class="line"><span class="selector-tag">ul</span>,</span><br><span class="line"><span class="selector-tag">li</span>,</span><br><span class="line"><span class="selector-tag">dl</span>,</span><br><span class="line"><span class="selector-tag">dt</span>,</span><br><span class="line"><span class="selector-tag">dd</span>,</span><br><span class="line"><span class="selector-tag">blockquote</span>,</span><br><span class="line"><span class="selector-tag">figure</span>,</span><br><span class="line"><span class="selector-tag">fieldset</span>,</span><br><span class="line"><span class="selector-tag">legend</span>,</span><br><span class="line"><span class="selector-tag">textarea</span>,</span><br><span class="line"><span class="selector-tag">pre</span>,</span><br><span class="line"><span class="selector-tag">iframe</span>,</span><br><span class="line"><span class="selector-tag">hr</span>,</span><br><span class="line"><span class="selector-tag">h1</span>,</span><br><span class="line"><span class="selector-tag">h2</span>,</span><br><span class="line"><span class="selector-tag">h3</span>,</span><br><span class="line"><span class="selector-tag">h4</span>,</span><br><span class="line"><span class="selector-tag">h5</span>,</span><br><span class="line"><span class="selector-tag">h6</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h1</span>,</span><br><span class="line"><span class="selector-tag">h2</span>,</span><br><span class="line"><span class="selector-tag">h3</span>,</span><br><span class="line"><span class="selector-tag">h4</span>,</span><br><span class="line"><span class="selector-tag">h5</span>,</span><br><span class="line"><span class="selector-tag">h6</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: normal;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line"><span class="selector-tag">input</span>,</span><br><span class="line"><span class="selector-tag">select</span>,</span><br><span class="line"><span class="selector-tag">textarea</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">*, *<span class="selector-pseudo">:before</span>, *<span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: inherit;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span>,</span><br><span class="line"><span class="selector-tag">embed</span>,</span><br><span class="line"><span class="selector-tag">iframe</span>,</span><br><span class="line"><span class="selector-tag">object</span>,</span><br><span class="line"><span class="selector-tag">video</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: auto;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">audio</span> &#123;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">iframe</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line">  <span class="attribute">border-collapse</span>: collapse;</span><br><span class="line">  <span class="attribute">border-spacing</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">td</span>,</span><br><span class="line"><span class="selector-tag">th</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">html</span>, <span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#root</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
    
      <category term="H5C3" scheme="http://yoursite.com/categories/H5C3/"/>
    
    
      <category term="H5C3" scheme="http://yoursite.com/tags/H5C3/"/>
    
  </entry>
  
  <entry>
    <title>vue文件上传组件</title>
    <link href="http://yoursite.com/2019/12/23/vue%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%84%E4%BB%B6/"/>
    <id>http://yoursite.com/2019/12/23/vue文件上传组件/</id>
    <published>2019-12-23T06:30:08.000Z</published>
    <updated>2019-12-23T06:48:44.189Z</updated>
    
    <content type="html"><![CDATA[<p>上传组件(我用的是element ui 自定义上传组件)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;el-upload</span><br><span class="line">      <span class="class"><span class="keyword">class</span></span>=<span class="string">"upload-demo"</span></span><br><span class="line">      ref=<span class="string">"upload1"</span></span><br><span class="line">      action=<span class="string">"String"</span></span><br><span class="line">      :on-change=<span class="string">"uploadChange"</span></span><br><span class="line">      :header=<span class="string">"headerType"</span></span><br><span class="line">      :<span class="keyword">with</span>-credentials=<span class="string">"true"</span></span><br><span class="line">      :on-preview=<span class="string">"handlePreview"</span></span><br><span class="line">      :on-remove=<span class="string">"handleRemove"</span></span><br><span class="line">      :onSuccess=<span class="string">"handleSuccess"</span></span><br><span class="line">      :auto-upload=<span class="string">"false"</span></span><br><span class="line">      multiple</span><br><span class="line">      :limit=<span class="string">"15"</span></span><br><span class="line">      :on-exceed=<span class="string">"handleExceed"</span></span><br><span class="line">      :file-list=<span class="string">"FileList"</span></span><br><span class="line">    &gt;</span><br><span class="line">      &lt;el-button <span class="class"><span class="keyword">class</span></span>=<span class="string">"file_btn"</span> slot=<span class="string">"trigger"</span> size=<span class="string">"small"</span> type=<span class="string">"primary"</span>&gt;选取文件&lt;<span class="regexp">/el-button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>el-upload&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; debounce &#125; <span class="keyword">from</span> <span class="string">'@/utils/Debounce'</span><span class="comment">//这里我添加了防抖功能</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">'my-upload'</span>,</span><br><span class="line">  props: &#123;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      headerType: &#123;<span class="string">"Content-Type"</span>: <span class="string">"multipart/form-data"</span>&#125;,</span><br><span class="line">      options: &#123;</span><br><span class="line">        language_url: <span class="string">"/static/lang/zh_CN.js"</span> <span class="comment">//This url points to location of persian language file.</span></span><br><span class="line">      &#125;,</span><br><span class="line">      FileList: [],</span><br><span class="line">      isfileSuccess: <span class="literal">false</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">      uploadChange(file, fileList) &#123;</span><br><span class="line">        <span class="keyword">this</span>.isfileSuccess = <span class="literal">true</span>;</span><br><span class="line">        debounce(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">this</span>.FileList = fileList</span><br><span class="line">          <span class="keyword">if</span>(<span class="keyword">this</span>.isfileSuccess)&#123;</span><br><span class="line">            <span class="keyword">this</span>.$message.warning(<span class="string">"正在上传附件"</span>)</span><br><span class="line">            setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">              <span class="keyword">this</span>.$emit(<span class="string">'handleUpload'</span>, <span class="keyword">this</span>.FileList);</span><br><span class="line">            &#125;, <span class="number">3000</span>);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;, <span class="number">300</span>)</span><br><span class="line">      &#125;,</span><br><span class="line">      handlePreview(file) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(file);</span><br><span class="line">      &#125;,</span><br><span class="line">      handleRemove(file, fileList) &#123;</span><br><span class="line">        <span class="keyword">this</span>.FileList = fileList</span><br><span class="line">        <span class="built_in">console</span>.log(file, fileList);</span><br><span class="line">      &#125;,</span><br><span class="line">      handleSuccess() &#123;</span><br><span class="line">      &#125;,</span><br><span class="line">      handleProgress(event, file, fileList) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(event);</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">// 上传限制文件数</span></span><br><span class="line">      handleExceed(files, fileList) &#123;</span><br><span class="line">        <span class="keyword">this</span>.$message.warning(</span><br><span class="line">          <span class="string">`当前限制选择 15 个文件，本次选择了 <span class="subst">$&#123;</span></span></span><br><span class="line"><span class="string"><span class="subst">            files.length</span></span></span><br><span class="line"><span class="string"><span class="subst">            &#125;</span> 个文件，共选择了 <span class="subst">$&#123;files.length + fileList.length&#125;</span> 个文件`</span></span><br><span class="line">        );</span><br><span class="line">      &#125;,</span><br><span class="line">  &#125;<span class="comment">//下文主要是methods的介绍，此处先省略</span></span><br><span class="line">  &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>父组件引用子组件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"filter-container r-menu"</span> style=<span class="string">"margin-top:20px;margin-left:20px;margin-right:20px"</span>&gt;</span><br><span class="line">      &lt;el-form ref=<span class="string">"form"</span> :model=<span class="string">"form"</span> label-width=<span class="string">"100px"</span></span><br><span class="line">               style=<span class="string">"width:80%;margin:20px 10%;"</span>&gt;</span><br><span class="line">        &lt;el-form-item label=<span class="string">"上传附件"</span>&gt;</span><br><span class="line">          &lt;my-upload @handleUpload=<span class="string">"handleUpload"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">my-upload</span>&gt;</span></span></span><br><span class="line">        &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp">        &lt;el-form-item&gt;</span></span><br><span class="line"><span class="regexp">          &lt;el-button type="primary" size="small" :loading="Publish" style="height:32px" @click.prevent="handlePublish"&gt;发布</span></span><br><span class="line"><span class="regexp">          &lt;/</span>el-button&gt;</span><br><span class="line">        &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>el-form&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">  import &#123;Upload, publish&#125; from '@/</span>api/dynamicList.js<span class="string">'</span></span><br><span class="line"><span class="string">  import  myUpload from'</span>@/components/my-upload.vue<span class="string">'</span></span><br><span class="line"><span class="string">  export default &#123;</span></span><br><span class="line"><span class="string">    components: &#123;</span></span><br><span class="line"><span class="string">      myUpload</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    data() &#123;</span></span><br><span class="line"><span class="string">      return &#123;</span></span><br><span class="line"><span class="string">        Publish: false,</span></span><br><span class="line"><span class="string">        form: &#123;&#125;,</span></span><br><span class="line"><span class="string">        fileList: [],</span></span><br><span class="line"><span class="string">      &#125;;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    mounted() &#123;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    methods: &#123;</span></span><br><span class="line"><span class="string">      handleUpload(fileList) &#123;</span></span><br><span class="line"><span class="string">        let fd = new FormData();</span></span><br><span class="line"><span class="string">        this.fileList = fileList;</span></span><br><span class="line"><span class="string">        console.log(this.fileList)</span></span><br><span class="line"><span class="string">        this.fileList.forEach(item =&gt; &#123;</span></span><br><span class="line"><span class="string">          fd.append("file", item.raw, item.raw.name);</span></span><br><span class="line"><span class="string">        &#125;);</span></span><br><span class="line"><span class="string">        if (this.fileList.length == 0) return this.$message.warning("请选择上传文件！");</span></span><br><span class="line"><span class="string">        Upload(fd).then(res =&gt; &#123;</span></span><br><span class="line"><span class="string">          if (res.data.code === 1) &#123;</span></span><br><span class="line"><span class="string">            this.$message.success('</span>上传成功！<span class="string">')</span></span><br><span class="line"><span class="string">            let urlList = []</span></span><br><span class="line"><span class="string">            let nameList = []</span></span><br><span class="line"><span class="string">            if (res.data.data.fileUrl !== '</span><span class="string">') &#123;</span></span><br><span class="line"><span class="string">              urlList = res.data.data.fileUrl.split('</span>,<span class="string">')</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            if (res.data.data.fileUrl !== '</span><span class="string">') &#123;</span></span><br><span class="line"><span class="string">              nameList = res.data.data.fileName.split('</span>,<span class="string">')</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            this.$set(this.form, '</span>fileUrl<span class="string">', urlList)</span></span><br><span class="line"><span class="string">            this.$set(this.form, '</span>fileName<span class="string">', nameList)</span></span><br><span class="line"><span class="string">            console.log(this.form)</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;);</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      handlePublish() &#123;</span></span><br><span class="line"><span class="string">        this.$refs['</span>form<span class="string">'].validate(valid =&gt; &#123;</span></span><br><span class="line"><span class="string">          if (valid) &#123;</span></span><br><span class="line"><span class="string">            this.Publish = true;</span></span><br><span class="line"><span class="string">            publish(this.form).then(res =&gt; &#123;</span></span><br><span class="line"><span class="string">              if (res.data.code === 1) &#123;</span></span><br><span class="line"><span class="string">                this.$message.success("发布成功");</span></span><br><span class="line"><span class="string">                this.Publish = false;</span></span><br><span class="line"><span class="string">              &#125; else &#123;</span></span><br><span class="line"><span class="string">                this.$message.error(res.data.msg);</span></span><br><span class="line"><span class="string">                this.Publish = false;</span></span><br><span class="line"><span class="string">              &#125;</span></span><br><span class="line"><span class="string">            &#125;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;)</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">  &#125;;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;style scoped&gt;</span></span><br><span class="line"><span class="string">&lt;/style&gt;</span></span><br></pre></td></tr></table></figure><p>防抖和节流</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 函数防抖 (只执行最后一次点击)</span></span><br><span class="line"><span class="comment"> * @param fn</span></span><br><span class="line"><span class="comment"> * @param delay</span></span><br><span class="line"><span class="comment"> * @returns &#123;Function&#125;</span></span><br><span class="line"><span class="comment"> * @constructor</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">let</span> timeout = <span class="literal">null</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> debounce = <span class="function">(<span class="params">fn, t</span>) =&gt;</span> &#123;</span><br><span class="line"> <span class="keyword">if</span>(timeout !== <span class="literal">null</span>) clearTimeout(timeout)</span><br><span class="line"> timeout = setTimeout(fn, t)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 函数节流 (一定时间内点击多次只执行一次)</span></span><br><span class="line"><span class="comment">* @param fn</span></span><br><span class="line"><span class="comment">* @param interval</span></span><br><span class="line"><span class="comment">* @returns &#123;Function&#125;</span></span><br><span class="line"><span class="comment">* @constructor</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">let</span> lastTime;</span><br><span class="line"><span class="keyword">let</span> timer;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> throttle = <span class="function">(<span class="params">fn, t</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> now = +<span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">  <span class="keyword">if</span>(lastTime &amp;&amp; lastTime - now &lt; <span class="number">2000</span>)&#123;</span><br><span class="line">      clearTimeout(timer)</span><br><span class="line">  &#125;</span><br><span class="line">  timer = setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    fn();</span><br><span class="line">    lastTime = +<span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line">  &#125;,t)</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 节流方法2</span></span><br><span class="line"><span class="comment">// export const Throttle = (fn, t) =&gt; &#123;</span></span><br><span class="line"><span class="comment">//   let last;</span></span><br><span class="line"><span class="comment">//   let timer;</span></span><br><span class="line"><span class="comment">//   let interval = t || 500;</span></span><br><span class="line"><span class="comment">//   return function () &#123;</span></span><br><span class="line"><span class="comment">//       let args = arguments;</span></span><br><span class="line"><span class="comment">//       let now = +new Date();</span></span><br><span class="line"><span class="comment">//       if (last &amp;&amp; now - last &lt; interval) &#123;</span></span><br><span class="line"><span class="comment">//           clearTimeout(timer);</span></span><br><span class="line"><span class="comment">//           timer = setTimeout(() =&gt; &#123;</span></span><br><span class="line"><span class="comment">//               last = now;</span></span><br><span class="line"><span class="comment">//               fn.apply(this, args);</span></span><br><span class="line"><span class="comment">//           &#125;, interval);</span></span><br><span class="line"><span class="comment">//       &#125; else &#123;</span></span><br><span class="line"><span class="comment">//           last = now;</span></span><br><span class="line"><span class="comment">//           fn.apply(this, args);</span></span><br><span class="line"><span class="comment">//       &#125;</span></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;上传组件(我用的是element ui 自定义上传组件)&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span cla
      
    
    </summary>
    
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>vue防抖和节流</title>
    <link href="http://yoursite.com/2019/12/13/vue%E9%98%B2%E6%8A%96%E5%92%8C%E8%8A%82%E6%B5%81/"/>
    <id>http://yoursite.com/2019/12/13/vue防抖和节流/</id>
    <published>2019-12-13T07:32:43.000Z</published>
    <updated>2019-12-23T07:19:40.021Z</updated>
    
    <content type="html"><![CDATA[<p>防抖<br>触发高频事件后 n 秒内函数只会执行一次，如果 n 秒内高频事件再次被触发，则重新计算时间；<br>思路：<br>每次触发事件时都取消之前的延时调用方法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">fn</span>) </span>&#123;</span><br><span class="line">     <span class="keyword">let</span> timeout = <span class="literal">null</span>; <span class="comment">// 创建一个标记用来存放定时器的返回值</span></span><br><span class="line">     <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">       clearTimeout(timeout); <span class="comment">// 每当用户输入的时候把前一个 setTimeout clear 掉</span></span><br><span class="line">       timeout = setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123; <span class="comment">// 然后又创建一个新的 setTimeout, 这样就能保证输入字符后的 interval 间隔内如果还有字符输入的话，就不会执行 fn 函数</span></span><br><span class="line">         fn.apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">       &#125;, <span class="number">500</span>);</span><br><span class="line">     &#125;;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">sayHi</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(<span class="string">'防抖成功'</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">var</span> inp = <span class="built_in">document</span>.getElementById(<span class="string">'inp'</span>);</span><br><span class="line">   inp.addEventListener(<span class="string">'input'</span>, debounce(sayHi)); <span class="comment">// 防抖</span></span><br></pre></td></tr></table></figure><p>节流<br>高频事件触发，但在 n 秒内只会执行一次，所以节流会稀释函数的执行频率。<br>思路：<br>每次触发事件时都判断当前是否有等待执行的延时函数。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">throttle</span>(<span class="params">fn</span>) </span>&#123;</span><br><span class="line">     <span class="keyword">let</span> canRun = <span class="literal">true</span>; <span class="comment">// 通过闭包保存一个标记</span></span><br><span class="line">     <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">       <span class="keyword">if</span> (!canRun) <span class="keyword">return</span>; <span class="comment">// 在函数开头判断标记是否为 true，不为 true 则 return</span></span><br><span class="line">       canRun = <span class="literal">false</span>; <span class="comment">// 立即设置为 false</span></span><br><span class="line">       setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123; <span class="comment">// 将外部传入的函数的执行放在 setTimeout 中</span></span><br><span class="line">         fn.apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">         <span class="comment">// 最后在 setTimeout 执行完毕后再把标记设置为 true(关键) 表示可以执行下一次循环了。当定时器没有执行的时候标记永远是 false，在开头被 return 掉</span></span><br><span class="line">         canRun = <span class="literal">true</span>;</span><br><span class="line">       &#125;, <span class="number">500</span>);</span><br><span class="line">     &#125;;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">sayHi</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(e.target.innerWidth, e.target.innerHeight);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">window</span>.addEventListener(<span class="string">'resize'</span>, throttle(sayHi));</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;防抖&lt;br&gt;触发高频事件后 n 秒内函数只会执行一次，如果 n 秒内高频事件再次被触发，则重新计算时间；&lt;br&gt;思路：&lt;br&gt;每次触发事件时都取消之前的延时调用方法：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class
      
    
    </summary>
    
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>js深克隆浅克隆</title>
    <link href="http://yoursite.com/2019/12/13/js%E6%B7%B1%E5%85%8B%E9%9A%86%E6%B5%85%E5%85%8B%E9%9A%86/"/>
    <id>http://yoursite.com/2019/12/13/js深克隆浅克隆/</id>
    <published>2019-12-13T03:01:14.000Z</published>
    <updated>2019-12-13T03:15:03.158Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、js中的对象"><a href="#一、js中的对象" class="headerlink" title="一、js中的对象"></a>一、js中的对象</h3><p>　　谈到对象的克隆，必定要说一下对象的概念。</p><p>　　js中的数据类型分为两大类：原始类型和对象类型。<br>　（1）原始类型包括：数值、字符串、布尔值、null、undefined（后两个是特殊的原始值，这里不做详细的说明，我的上一篇博客有谈到过一些）<br>　（2）对象类型包括：对象即是属性的集合，当然这里又两个特殊的对象—-函数（js中的一等对象）、数组（键值的有序集合）。</p><p>　　好了既然对象分为这两类，这两种类型在复制克隆的时候是有很大区别的。原始类型存储的是对象的实际数据，而对象类型存储的是对象的引用地址（对象的实际内容单独存放，为了减少数据开销通常存放在内存中）。</p><p>ps：说到这里，大家要知道，对象的原型也是引用对象，它把原型的方法和属性放在内存当中，通过原型链的方式来指向这个内存地址。</p><h3 id="二、克隆的概念"><a href="#二、克隆的概念" class="headerlink" title="二、克隆的概念"></a>二、克隆的概念</h3><p>　　浅度克隆：原始类型为值传递，对象类型仍为引用传递。</p><p>　　深度克隆：所有元素或属性均完全复制，与原对象完全脱离，也就是说所有对于新对象的修改都不会反映到原对象中。</p><h3 id="三、浅克隆的表现"><a href="#三、浅克隆的表现" class="headerlink" title="三、浅克隆的表现"></a>三、浅克隆的表现</h3><p>1.原始类型</p><p>　　看下面一段代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//数值克隆的表现</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="string">"1"</span>;</span><br><span class="line"><span class="keyword">var</span> b=a;</span><br><span class="line">b=<span class="string">"2"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a);<span class="comment">// "1"</span></span><br><span class="line"><span class="built_in">console</span>.log(b);<span class="comment">// "2"</span></span><br><span class="line"><span class="comment">//字符串克隆的表现</span></span><br><span class="line"><span class="keyword">var</span> c=<span class="string">"1"</span>;</span><br><span class="line"><span class="keyword">var</span> d=c;</span><br><span class="line">d=<span class="string">"2"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(c);<span class="comment">// "1"</span></span><br><span class="line"><span class="built_in">console</span>.log(d);<span class="comment">// "2"</span></span><br><span class="line"><span class="comment">//字符串克隆的表现</span></span><br><span class="line"><span class="keyword">var</span> x=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">var</span> y=x;</span><br><span class="line">y=<span class="literal">false</span>;</span><br><span class="line"><span class="built_in">console</span>.log(x);<span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(y);<span class="comment">// false</span></span><br></pre></td></tr></table></figure><p>　　从上面的代码大家可以看出，原始类型即使我们采用普通的克隆方式仍能得到正确的结果，原因就是原始类型存储的是对象的实际数据。<br><strong>PS:对象的简易克隆小技巧：var tmpObj = JSON.parse(JSON.stringify(传入对象));</strong></p><p>2.对象类型</p><p>　　前面说过，函数式一等对象，当然也是对象类型，但是函数的克隆通过浅克隆即可实现</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> m=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;alert(<span class="number">1</span>);&#125;;</span><br><span class="line"><span class="keyword">var</span> n=m;</span><br><span class="line">n=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;alert(<span class="number">2</span>);&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(m());<span class="comment">//1</span></span><br><span class="line"><span class="built_in">console</span>.log(n());<span class="comment">//2</span></span><br></pre></td></tr></table></figure><p>　大家能看到，我们直接通过普通赋值的方式，就实现了函数的克隆，并且不会影响之前的对象。原因就是函数的克隆会在内存单独开辟一块空间，互不影响。</p><p>　　好了，说了这个特殊的”关系户“以后，我们来说说普通的”选手“。为了方便后续的代码表现，我这里定义一个复杂的对象类型oPerson。下面看一下对象类型的浅复制有什么危害：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> oPerson=&#123;</span><br><span class="line">    oName:<span class="string">"rookiebob"</span>,</span><br><span class="line">    oAge:<span class="string">"18"</span>,</span><br><span class="line">    oAddress:&#123;</span><br><span class="line">        province:<span class="string">"beijing"</span></span><br><span class="line">    &#125;,    </span><br><span class="line">    ofavorite:[</span><br><span class="line">        <span class="string">"swimming"</span>,</span><br><span class="line">        &#123;<span class="attr">reading</span>:<span class="string">"history book"</span>&#125;</span><br><span class="line">    ],</span><br><span class="line">    skill:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"bob is coding"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clone</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> result=&#123;&#125;;</span><br><span class="line">    <span class="keyword">for</span>(key <span class="keyword">in</span> obj)&#123;</span><br><span class="line">        result[key]=obj[key];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> oNew=clone(oPerson);</span><br><span class="line"><span class="built_in">console</span>.log(oPerson.oAddress.province);<span class="comment">//beijing</span></span><br><span class="line">oNew.oAddress.province=<span class="string">"shanghai"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(oPerson.oAddress.province);<span class="comment">//shanghai</span></span><br></pre></td></tr></table></figure><p>通过上面的代码，大家能看到，经过对象克隆以后，我修改oNew的地址，发现原对象oPerson也被修改了。这说明对象的克隆不够彻底，那也就是说深度克隆失败！</p><p>四、深克隆的实现</p><p>　　为了保证对象的所有属性都被复制到，我们必须知道如果for循环以后，得到的元素仍是Object或者Array，那么需要再次循环，直到元素是原始类型或者函数为止。为了得到元素的类型，我们定义一个通用函数，用来返回传入对象的类型。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//返回传递给他的任意对象的类</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isClass</span>(<span class="params">o</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(o).slice(<span class="number">8</span>,<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PS:Object.prototype.toString.call(o)能直接返回对象的类属性，形如”[object class]”的字符串，我们通过截取class，并能知道传入的对象是什么类型</p><p>下面就是真正的深度克隆</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//深度克隆</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deepClone</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> result,oClass=isClass(obj);</span><br><span class="line"><span class="comment">//确定result的类型</span></span><br><span class="line"><span class="keyword">if</span>(oClass===<span class="string">"Object"</span>)&#123;</span><br><span class="line">result=&#123;&#125;;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(oClass===<span class="string">"Array"</span>)&#123;</span><br><span class="line">result=[];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> obj;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(key <span class="keyword">in</span> obj)&#123;</span><br><span class="line"><span class="keyword">var</span> copy=obj[key];</span><br><span class="line"><span class="keyword">if</span>(isClass(copy)==<span class="string">"Object"</span>)&#123;</span><br><span class="line">result[key]=<span class="built_in">arguments</span>.callee(copy);<span class="comment">//递归调用</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(isClass(copy)==<span class="string">"Array"</span>)&#123;</span><br><span class="line">result[key]=<span class="built_in">arguments</span>.callee(copy);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">result[key]=obj[key];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//返回传递给他的任意对象的类</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isClass</span>(<span class="params">o</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(o===<span class="literal">null</span>) <span class="keyword">return</span> <span class="string">"Null"</span>;</span><br><span class="line"><span class="keyword">if</span>(o===<span class="literal">undefined</span>) <span class="keyword">return</span> <span class="string">"Undefined"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(o).slice(<span class="number">8</span>,<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> oPerson=&#123;</span><br><span class="line">oName:<span class="string">"rookiebob"</span>,</span><br><span class="line">oAge:<span class="string">"18"</span>,</span><br><span class="line">oAddress:&#123;</span><br><span class="line">province:<span class="string">"beijing"</span></span><br><span class="line">&#125;,    </span><br><span class="line">ofavorite:[</span><br><span class="line"><span class="string">"swimming"</span>,</span><br><span class="line">&#123;<span class="attr">reading</span>:<span class="string">"history book"</span>&#125;</span><br><span class="line">],</span><br><span class="line">skill:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"bob is coding"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//深度克隆一个对象</span></span><br><span class="line"><span class="keyword">var</span> oNew=deepClone(oPerson);</span><br><span class="line">oNew.ofavorite[<span class="number">1</span>].reading=<span class="string">"picture"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(oNew.ofavorite[<span class="number">1</span>].reading);<span class="comment">//picture</span></span><br><span class="line"><span class="built_in">console</span>.log(oPerson.ofavorite[<span class="number">1</span>].reading);<span class="comment">//history book</span></span><br><span class="line">oNew.oAddress.province=<span class="string">"shanghai"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(oPerson.oAddress.province);<span class="comment">//beijing</span></span><br><span class="line"><span class="built_in">console</span>.log(oNew.oAddress.province);<span class="comment">//shanghai</span></span><br></pre></td></tr></table></figure><p>从上面的代码可以看到，深度克隆的对象可以完全脱离原对象，我们对新对象的任何修改都不会反映到原对象中，这样深度克隆就实现了。</p><p><strong>这里要注意一点的就是：为什么deepClone这个函数中的result一定要判断类型？这里有一种情况，如果你的result直接是{}对象，我明明传进去的是一个数组，结果你复制完了以后，变成了一个对象了。</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//深度克隆</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deepClone</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> result=&#123;&#125;,oClass=isClass(obj);</span><br><span class="line">    <span class="comment">// if(oClass==="Object")&#123;</span></span><br><span class="line">    <span class="comment">//     result=&#123;&#125;;</span></span><br><span class="line">    <span class="comment">// &#125;else if(oClass==="Array")&#123;</span></span><br><span class="line">    <span class="comment">//     result=[];</span></span><br><span class="line">    <span class="comment">// &#125;else&#123;</span></span><br><span class="line">    <span class="comment">//     return obj;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="keyword">for</span>(key <span class="keyword">in</span> obj)&#123;</span><br><span class="line">        <span class="keyword">var</span> copy=obj[key];</span><br><span class="line">        <span class="keyword">if</span>(isClass(copy)==<span class="string">"Object"</span>)&#123;</span><br><span class="line">            result[key]=<span class="built_in">arguments</span>.callee(copy);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(isClass(copy)==<span class="string">"Array"</span>)&#123;</span><br><span class="line">            result[key]=<span class="built_in">arguments</span>.callee(copy);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            result[key]=obj[key];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isClass</span>(<span class="params">o</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(o===<span class="literal">null</span>) <span class="keyword">return</span> <span class="string">"Null"</span>;</span><br><span class="line">    <span class="keyword">if</span>(o===<span class="literal">undefined</span>) <span class="keyword">return</span> <span class="string">"Undefined"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(o).slice(<span class="number">8</span>,<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//克隆一个数组</span></span><br><span class="line"><span class="keyword">var</span> arr=[<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>];</span><br><span class="line"><span class="keyword">var</span> oNew=deepClone(arr);</span><br><span class="line"><span class="built_in">console</span>.log(oNew);<span class="comment">//Object &#123;0: "a", 1: "b", 2: "c"&#125;</span></span><br></pre></td></tr></table></figure><p>作为知识点记录，转载自：<a href="http://www.2cto.com/kf/201409/332955.html" target="_blank" rel="noopener">http://www.2cto.com/kf/201409/332955.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;一、js中的对象&quot;&gt;&lt;a href=&quot;#一、js中的对象&quot; class=&quot;headerlink&quot; title=&quot;一、js中的对象&quot;&gt;&lt;/a&gt;一、js中的对象&lt;/h3&gt;&lt;p&gt;　　谈到对象的克隆，必定要说一下对象的概念。&lt;/p&gt;
&lt;p&gt;　　js中的数据类型分为两大类：
      
    
    </summary>
    
    
      <category term="Js" scheme="http://yoursite.com/categories/Js/"/>
    
    
      <category term="Js" scheme="http://yoursite.com/tags/Js/"/>
    
  </entry>
  
  <entry>
    <title>vue页面勾选翻页记忆功能</title>
    <link href="http://yoursite.com/2019/12/03/vue%E9%A1%B5%E9%9D%A2%E5%8B%BE%E9%80%89%E7%BF%BB%E9%A1%B5%E8%AE%B0%E5%BF%86%E5%8A%9F%E8%83%BD/"/>
    <id>http://yoursite.com/2019/12/03/vue页面勾选翻页记忆功能/</id>
    <published>2019-12-03T07:09:26.000Z</published>
    <updated>2019-12-03T07:19:47.739Z</updated>
    
    <content type="html"><![CDATA[<p>实现思路:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"customer-container"</span>&gt;</span><br><span class="line">      &lt;el-row&gt;</span><br><span class="line">        &lt;el-form :inline=<span class="string">"true"</span> :model=<span class="string">"tableList"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"demo-form-inline"</span>&gt;</span><br><span class="line">          &lt;el-form-item label=<span class="string">""</span>&gt;</span><br><span class="line">            &lt;el-input size=<span class="string">"mini"</span> style=<span class="string">"width:140px;"</span> v-model=<span class="string">"tableList.pageName"</span> placeholder=<span class="string">"请输入页面名称"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line">            &lt;el-input size=<span class="string">"mini"</span> style=<span class="string">"width:140px;"</span> v-model=<span class="string">"tableList.shopName"</span> placeholder=<span class="string">"请输入店铺名称"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line">            &lt;el-button size=<span class="string">"small"</span> type=<span class="string">"primary"</span> style=<span class="string">"margin-left: 10px;"</span></span><br><span class="line">                       @click=<span class="string">"getSearchPage(tableList.shopName,tableList.pageName)"</span>&gt;查询</span><br><span class="line">            &lt;<span class="regexp">/el-button&gt;</span></span><br><span class="line"><span class="regexp">          &lt;/</span>el-form-item&gt;</span><br><span class="line">          &lt;!--<span class="xml"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">style</span>=<span class="string">"float:left;"</span> <span class="attr">type</span>=<span class="string">"primary"</span> <span class="attr">size</span>=<span class="string">"small"</span> @<span class="attr">click</span>=<span class="string">"handleChooseData"</span>&gt;</span>获取选中的内容<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span>--&gt;</span><br><span class="line">        &lt;<span class="regexp">/el-form&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>el-row&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;el-table ref="multipleTable" :data="gridDatas" border tooltip-effect="dark"  style="width: 100%;" @selection-change="handleSelectionChange"&gt;</span></span><br><span class="line"><span class="regexp">      &lt;el-table-column type="selection" width="55"&gt;&lt;/</span>el-table-column&gt;</span><br><span class="line">      &lt;el-table-column prop=<span class="string">"pho"</span> label=<span class="string">"图片"</span>&gt;</span><br><span class="line">        &lt;!– 图片的显示 –&gt;</span><br><span class="line">        &lt;template   slot-scope=<span class="string">"scope"</span>&gt;</span><br><span class="line">          &lt;img :src=<span class="string">"scope.row.pho"</span>  min-width=<span class="string">"70"</span> height=<span class="string">"70"</span> /&gt;</span><br><span class="line">        &lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>el-table-column&gt;</span><br><span class="line">      &lt;el-table-column prop=<span class="string">"goodsName"</span> label=<span class="string">"商品名称"</span>&gt;</span><br><span class="line">      &lt;<span class="regexp">/el-table-column&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>el-table&gt;</span><br><span class="line">    &lt;el-pagination <span class="class"><span class="keyword">class</span></span>=<span class="string">"pagination"</span> @size-change=<span class="string">"SizeChangeDanpin"</span> @current-change=<span class="string">"handleCurrentChange"</span> background layout=<span class="string">"total, prev, pager, next , jumper"</span> :current-page.sync=<span class="string">"tableList.pageIndex"</span> :total=<span class="string">"totalCount"</span>&gt;</span><br><span class="line">    &lt;<span class="regexp">/el-pagination&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">export default &#123;</span></span><br><span class="line"><span class="regexp">  components:&#123;&#125;,</span></span><br><span class="line"><span class="regexp">  props:&#123;&#125;,</span></span><br><span class="line"><span class="regexp">  data() &#123;</span></span><br><span class="line"><span class="regexp">  return &#123;</span></span><br><span class="line"><span class="regexp">    selectedData:[],</span></span><br><span class="line"><span class="regexp">    tableList: &#123;</span></span><br><span class="line"><span class="regexp">      goodsName: '',</span></span><br><span class="line"><span class="regexp">      companyId: '00000001',</span></span><br><span class="line"><span class="regexp">      pageIndex: 1,</span></span><br><span class="line"><span class="regexp">      goodsId: ''</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    gridDatas: [],</span></span><br><span class="line"><span class="regexp">    totalCount:1,</span></span><br><span class="line"><span class="regexp">    idKey: 'goodsId', /</span><span class="regexp">/ 标识列表数据中每一行的唯一键的名称(需要按自己的数据改一下)</span></span><br><span class="line"><span class="regexp">    multipleSelection: [],</span></span><br><span class="line"><span class="regexp">    multipleSelectionAll:[],/</span><span class="regexp">/所有选中的数据包含跨页数据</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;,</span></span><br><span class="line"><span class="regexp">methods: &#123;</span></span><br><span class="line"><span class="regexp">    setSelectRow() &#123;</span></span><br><span class="line"><span class="regexp">      if (!this.multipleSelectionAll || this.multipleSelectionAll.length &lt;= 0) &#123;</span></span><br><span class="line"><span class="regexp">        return;</span></span><br><span class="line"><span class="regexp">      &#125;</span></span><br><span class="line"><span class="regexp">      /</span><span class="regexp">/ 标识当前行的唯一键的名称</span></span><br><span class="line"><span class="regexp">      let idKey = this.idKey;</span></span><br><span class="line"><span class="regexp">      let selectAllIds = [];</span></span><br><span class="line"><span class="regexp">      let that = this;</span></span><br><span class="line"><span class="regexp">      this.multipleSelectionAll.forEach(row=&gt;&#123;</span></span><br><span class="line"><span class="regexp">        selectAllIds.push(row[idKey]);</span></span><br><span class="line"><span class="regexp">      &#125;)</span></span><br><span class="line"><span class="regexp">      this.$refs.multipleTable.clearSelection();</span></span><br><span class="line"><span class="regexp">      for(var i = 0; i &lt; this.gridDatas.length; i++) &#123;</span></span><br><span class="line"><span class="regexp">        if (selectAllIds.indexOf(this.gridDatas[i][idKey]) &gt;= 0) &#123;</span></span><br><span class="line"><span class="regexp">          /</span><span class="regexp">/ 设置选中，记住table组件需要使用ref="table"</span></span><br><span class="line"><span class="regexp">          this.$refs.multipleTable.toggleRowSelection(this.gridDatas[i], true);</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">      &#125;</span></span><br><span class="line"><span class="regexp">    &#125; ,</span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/ 记忆选择核心方法</span></span><br><span class="line"><span class="regexp">    changePageCoreRecordData () &#123;</span></span><br><span class="line"><span class="regexp">      /</span><span class="regexp">/ 标识当前行的唯一键的名称</span></span><br><span class="line"><span class="regexp">      let idKey = this.idKey;</span></span><br><span class="line"><span class="regexp">      let that = this;</span></span><br><span class="line"><span class="regexp">      /</span><span class="regexp">/ 如果总记忆中还没有选择的数据，那么就直接取当前页选中的数据，不需要后面一系列计算</span></span><br><span class="line"><span class="regexp">      if (this.multipleSelectionAll.length &lt;= 0) &#123;</span></span><br><span class="line"><span class="regexp">        this.multipleSelectionAll = this.multipleSelection;</span></span><br><span class="line"><span class="regexp">        return;</span></span><br><span class="line"><span class="regexp">      &#125;</span></span><br><span class="line"><span class="regexp">      /</span><span class="regexp">/ 总选择里面的key集合</span></span><br><span class="line"><span class="regexp">      let selectAllIds = [];</span></span><br><span class="line"><span class="regexp">      this.multipleSelectionAll.forEach(row=&gt;&#123;</span></span><br><span class="line"><span class="regexp">        selectAllIds.push(row[idKey]);</span></span><br><span class="line"><span class="regexp">      &#125;)</span></span><br><span class="line"><span class="regexp">      console.log(this.multipleSelectionAll)</span></span><br><span class="line"><span class="regexp">      console.log(selectAllIds)</span></span><br><span class="line"><span class="regexp">      let selectIds = []</span></span><br><span class="line"><span class="regexp">      /</span><span class="regexp">/ 获取当前页选中的id</span></span><br><span class="line"><span class="regexp">      this.multipleSelection.forEach(row=&gt;&#123;</span></span><br><span class="line"><span class="regexp">        selectIds.push(row[idKey]);</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ 如果总选择里面不包含当前页选中的数据，那么就加入到总选择集合里</span></span><br><span class="line"><span class="regexp">        if (selectAllIds.indexOf(row[idKey]) &lt; 0) &#123;</span></span><br><span class="line"><span class="regexp">          that.multipleSelectionAll.push(row);</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">      &#125;)</span></span><br><span class="line"><span class="regexp">      let noSelectIds = [];</span></span><br><span class="line"><span class="regexp">      /</span><span class="regexp">/ 得到当前页没有选中的id</span></span><br><span class="line"><span class="regexp">      this.gridDatas.forEach(row=&gt;&#123;</span></span><br><span class="line"><span class="regexp">        if (selectIds.indexOf(row[idKey]) &lt; 0) &#123;</span></span><br><span class="line"><span class="regexp">          noSelectIds.push(row[idKey]);</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">      &#125;)</span></span><br><span class="line"><span class="regexp">      noSelectIds.forEach(id=&gt;&#123;</span></span><br><span class="line"><span class="regexp">        if (selectAllIds.indexOf(id) &gt;= 0) &#123;</span></span><br><span class="line"><span class="regexp">          for(let i = 0; i&lt; that.multipleSelectionAll.length; i ++) &#123;</span></span><br><span class="line"><span class="regexp">            if (that.multipleSelectionAll[i][idKey] == id) &#123;</span></span><br><span class="line"><span class="regexp">              /</span><span class="regexp">/ 如果总选择中有未被选中的，那么就删除这条</span></span><br><span class="line"><span class="regexp">              that.multipleSelectionAll.splice(i, 1);</span></span><br><span class="line"><span class="regexp">              break;</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">          &#125;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">      &#125;)</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/点击商品名称页</span></span><br><span class="line"><span class="regexp">    handleCurrentChange(val) &#123;</span></span><br><span class="line"><span class="regexp">      this.changePageCoreRecordData();</span></span><br><span class="line"><span class="regexp">      this.tableList.pageIndex=val;</span></span><br><span class="line"><span class="regexp">      this.getDatas();</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/ 改变单品表格每页数目</span></span><br><span class="line"><span class="regexp">    SizeChangeDanpin(val) &#123;</span></span><br><span class="line"><span class="regexp">      this.changePageCoreRecordData();</span></span><br><span class="line"><span class="regexp">      console.log(`每页 $&#123;val&#125; 条`);</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    getDatas()&#123;</span></span><br><span class="line"><span class="regexp">      WxHomeGoodOn(this.tableList).then((data) =&gt; &#123;</span></span><br><span class="line"><span class="regexp">        this.loading = false;</span></span><br><span class="line"><span class="regexp">        if(data.code === 1)&#123;</span></span><br><span class="line"><span class="regexp">            if(data !=='')&#123;</span></span><br><span class="line"><span class="regexp">            this.loading = false;</span></span><br><span class="line"><span class="regexp">            this.gridDatas = data.data;</span></span><br><span class="line"><span class="regexp">            this.totalCount = data.pageInfo.totalCount;</span></span><br><span class="line"><span class="regexp">              setTimeout(()=&gt;&#123;</span></span><br><span class="line"><span class="regexp">                this.setSelectRow();</span></span><br><span class="line"><span class="regexp">              &#125;, 200)</span></span><br><span class="line"><span class="regexp">          &#125;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">      &#125;).catch(message =&gt; &#123;</span></span><br><span class="line"><span class="regexp">        console.log('"请求失败"')</span></span><br><span class="line"><span class="regexp">        this.loading = false;</span></span><br><span class="line"><span class="regexp">      &#125;)</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    handleSelectionChange(val) &#123;</span></span><br><span class="line"><span class="regexp">      this.multipleSelection = val;</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/ 得到选中的所有数据</span></span><br><span class="line"><span class="regexp">    getAllSelectionData() &#123;</span></span><br><span class="line"><span class="regexp">      /</span><span class="regexp">/ 再执行一次记忆勾选数据匹配，目的是为了在当前页操作勾选后直接获取选中数据</span></span><br><span class="line"><span class="regexp">      this.changePageCoreRecordData();</span></span><br><span class="line"><span class="regexp">      console.log(this.multipleSelectionAll)</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">  &#125;,</span></span><br><span class="line"><span class="regexp">  mounted()&#123;</span></span><br><span class="line"><span class="regexp">    this.$nextTick(function () &#123;</span></span><br><span class="line"><span class="regexp">      /</span><span class="regexp">/ 初始化渲染</span></span><br><span class="line"><span class="regexp">      this.tableList.pageIndex = 1</span></span><br><span class="line"><span class="regexp">      this.getDatas()</span></span><br><span class="line"><span class="regexp">    &#125;)</span></span><br><span class="line"><span class="regexp">  &#125;    </span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;实现思路:&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;
      
    
    </summary>
    
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>zTree练习使用</title>
    <link href="http://yoursite.com/2019/12/02/zTree%E7%BB%83%E4%B9%A0%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2019/12/02/zTree练习使用/</id>
    <published>2019-12-02T08:50:59.000Z</published>
    <updated>2019-12-02T08:54:21.173Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;HTML&gt;</span><br><span class="line">&lt;HEAD&gt;</span><br><span class="line">  &lt;TITLE&gt; ZTREE DEMO &lt;<span class="regexp">/TITLE&gt;</span></span><br><span class="line"><span class="regexp">  &lt;meta http-equiv="content-type" content="text/</span>html; charset=UTF<span class="number">-8</span><span class="string">"&gt;</span></span><br><span class="line"><span class="string">  &lt;link rel="</span>stylesheet<span class="string">" href="</span>script/zTree/css/demo.css<span class="string">"/&gt;</span></span><br><span class="line"><span class="string">  &lt;link rel="</span>stylesheet<span class="string">" href="</span>script/zTree/css/zTreeStyle/zTreeStyle.css<span class="string">" type="</span>text/css<span class="string">"/&gt;</span></span><br><span class="line"><span class="string">  &lt;script type="</span>text/javascript<span class="string">" src="</span>script/zTree/js/jquery<span class="number">-1.4</span><span class="number">.4</span>.min.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">  &lt;!--&lt;script type="</span>text/javascript<span class="string">" src="</span>script/zTree/jquery.ztree.core<span class="number">-3.5</span>.js<span class="string">"&gt;&lt;/script&gt;--&gt;</span></span><br><span class="line"><span class="string">  &lt;script type="</span>text/javascript<span class="string">" src="</span>script/zTree/js/jquery.ztree.core.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">  &lt;script type="</span>text/javascript<span class="string">" src="</span>script/zTree/js/jquery.ztree.excheck.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">  &lt;script type="</span>text/javascript<span class="string">" src="</span>script/zTree/js/jquery.ztree.exedit.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">  &lt;script&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    var setting = &#123;</span></span><br><span class="line"><span class="string">      edit: &#123;</span></span><br><span class="line"><span class="string">        drag:&#123;</span></span><br><span class="line"><span class="string">          isCopy: false,</span></span><br><span class="line"><span class="string">          isMove: true,</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        removeTitle: "</span>删除知识点<span class="string">",</span></span><br><span class="line"><span class="string">        renameTitle: "</span>修改知识点名称<span class="string">",</span></span><br><span class="line"><span class="string">        enable: true//设置 zTree 是否处于编辑状态</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      data: &#123;</span></span><br><span class="line"><span class="string">        keep: &#123;</span></span><br><span class="line"><span class="string">          leaf: true,</span></span><br><span class="line"><span class="string">          parent: true</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        simpleData: &#123;</span></span><br><span class="line"><span class="string">          enable: true</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        key: &#123;</span></span><br><span class="line"><span class="string">          title: "</span>code<span class="string">"</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      callback: &#123;</span></span><br><span class="line"><span class="string">        beforeDrag: zTreeBeforeDrag,</span></span><br><span class="line"><span class="string">        beforeDrop: zTreeBeforeDrop,</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;;</span></span><br><span class="line"><span class="string">    //进行zNodes的设置，对它进行赋值，也可以从后台获取，为方便在这里采用直接赋值；  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    var zNodes =[</span></span><br><span class="line"><span class="string">      &#123; id:1, pId:0, name:"</span>文件<span class="string">", open:true&#125;,</span></span><br><span class="line"><span class="string">      &#123; id:11, pId:1, name:"</span>文件<span class="number">1</span><span class="string">"&#125;,</span></span><br><span class="line"><span class="string">      &#123; id:12, pId:1, name:"</span>文件<span class="number">2</span><span class="string">"&#125;,</span></span><br><span class="line"><span class="string">      &#123; id:13, pId:1, name:"</span>文件<span class="number">3</span><span class="string">"&#125;,</span></span><br><span class="line"><span class="string">      &#123; id:14, pId:1, name:"</span>文件<span class="number">4</span><span class="string">"&#125;,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      &#123; id:2, pId:0, name:"</span>报告<span class="string">", open:true&#125;,</span></span><br><span class="line"><span class="string">      &#123; id:21, pId:2, name:"</span>报告<span class="number">1</span><span class="string">"&#125;,</span></span><br><span class="line"><span class="string">      &#123; id:22, pId:2, name:"</span>报告<span class="number">2</span><span class="string">"&#125;,</span></span><br><span class="line"><span class="string">      &#123; id:23, pId:2, name:"</span>报告<span class="number">3</span><span class="string">"&#125;,</span></span><br><span class="line"><span class="string">      &#123; id:24, pId:2, name:"</span>报告<span class="number">4</span><span class="string">"&#125;,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      &#123; id:3, pId:0, name:"</span>测试<span class="string">", open:true&#125;,</span></span><br><span class="line"><span class="string">      &#123; id:31, pId:3, name:"</span>测试<span class="number">1</span><span class="string">"&#125;,</span></span><br><span class="line"><span class="string">      &#123; id:32, pId:3, name:"</span>测试<span class="number">2</span><span class="string">"&#125;,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      &#123; id:4, pId:0, name:"</span>类别<span class="string">", open:true&#125;,</span></span><br><span class="line"><span class="string">      &#123; id:41, pId:4, name:"</span>类别<span class="number">1</span><span class="string">"&#125;,</span></span><br><span class="line"><span class="string">      &#123; id:43, pId:4, name:"</span>类别<span class="number">2</span><span class="string">"&#125;,</span></span><br><span class="line"><span class="string">      &#123; id:42, pId:4, name:"</span>类别<span class="number">3</span><span class="string">"&#125;,</span></span><br><span class="line"><span class="string">      &#123; id:421, pId:42, name:"</span>类别<span class="number">4</span><span class="string">"&#125;,</span></span><br><span class="line"><span class="string">      &#123; id:422, pId:42, name:"</span>类别<span class="number">5</span><span class="string">"&#125;,</span></span><br><span class="line"><span class="string">      &#123; id:423, pId:42, name:"</span>类别<span class="number">6</span><span class="string">"&#125;,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    ];</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    $(document).ready(function()&#123;</span></span><br><span class="line">      $.fn.zTree.init($("#treeDemo"), setting, zNodes);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">zTreeBeforeDrag</span>(<span class="params">treeId, treeNodes</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>,l=treeNodes.length; i&lt;l; i++) &#123;</span><br><span class="line">        <span class="keyword">var</span>  pid = treeNodes[i].pId;</span><br><span class="line">                   <span class="keyword">if</span>(pid==<span class="string">"root"</span>||pid==<span class="literal">null</span>||pid==<span class="string">"null"</span>)&#123;</span><br><span class="line">                    alert(<span class="string">"只能移动叶子节点。"</span>);</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">              &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**拖拽释放之后结束前执行 moveType值类型请参考api */</span>    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">zTreeBeforeDrop</span>(<span class="params">treeId, treeNodes, targetNode, moveType</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> oldPid=treeNodes[<span class="number">0</span>].pId;</span><br><span class="line">      <span class="keyword">var</span>  targetPid=targetNode.pId;</span><br><span class="line">      <span class="keyword">if</span>(oldPid!=targetPid)&#123;</span><br><span class="line">        alert(<span class="string">"只能在同一知识点下面移动位置"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(oldPid==<span class="string">"root"</span>||targetPid==<span class="string">"root"</span>)&#123;</span><br><span class="line">        alert(<span class="string">"只能移动子知识的节点。"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>HEAD&gt;</span><br><span class="line">&lt;BODY&gt;</span><br><span class="line">&lt;div id=<span class="string">"treeDemo"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"ztree"</span> &gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/BODY&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>HTML&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l
      
    
    </summary>
    
    
      <category term="Js" scheme="http://yoursite.com/categories/Js/"/>
    
    
      <category term="Js" scheme="http://yoursite.com/tags/Js/"/>
    
  </entry>
  
  <entry>
    <title>前端常见的一些验证</title>
    <link href="http://yoursite.com/2019/11/22/%E5%89%8D%E7%AB%AF%E5%B8%B8%E8%A7%81%E7%9A%84%E4%B8%80%E4%BA%9B%E9%AA%8C%E8%AF%81/"/>
    <id>http://yoursite.com/2019/11/22/前端常见的一些验证/</id>
    <published>2019-11-22T07:10:47.000Z</published>
    <updated>2019-12-05T10:01:11.542Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 表单校验规则</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 是否手机号码或者固话*/</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">validatePhoneTwo</span>(<span class="params">rule, value, callback</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> reg = <span class="regexp">/^((0\d&#123;2,3&#125;-\d&#123;7,8&#125;)|(1[34578]\d&#123;9&#125;))$/</span>;;</span><br><span class="line">  <span class="keyword">if</span> (value == <span class="string">''</span> || value == <span class="literal">undefined</span> || value == <span class="literal">null</span>) &#123;</span><br><span class="line">    callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'请输入电话号码或者固话号码'</span>));</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> ((!reg.test(value)) &amp;&amp; value != <span class="string">''</span>) &#123;</span><br><span class="line">      callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'请输入正确的电话号码或者固话号码'</span>));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      callback();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 是否固话*/</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">validateTelphone</span>(<span class="params">rule, value,callback</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> reg =<span class="regexp">/0\d&#123;2&#125;-\d&#123;7,8&#125;/</span>;</span><br><span class="line">  <span class="keyword">if</span>(value==<span class="string">''</span>||value==<span class="literal">undefined</span>||value==<span class="literal">null</span>)&#123;</span><br><span class="line">    callback();</span><br><span class="line">  &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> ((!reg.test(value)) &amp;&amp; value != <span class="string">''</span>) &#123;</span><br><span class="line">      callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'请输入正确的固话（格式：区号+号码,如010-1234567）'</span>));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      callback();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 是否手机号码*/</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">validatePhone</span>(<span class="params">rule, value,callback</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> reg =<span class="regexp">/^[1][3,4,5,7,8][0-9]&#123;9&#125;$/</span>;</span><br><span class="line">  <span class="keyword">if</span>(value==<span class="string">''</span>||value==<span class="literal">undefined</span>||value==<span class="literal">null</span>)&#123;</span><br><span class="line">    callback();</span><br><span class="line">  &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> ((!reg.test(value)) &amp;&amp; value != <span class="string">''</span>) &#123;</span><br><span class="line">      callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'请输入正确的电话号码'</span>));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      callback();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 是否身份证号码*/</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">validateIdNo</span>(<span class="params">rule, value,callback</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> city=&#123;<span class="number">11</span>:<span class="string">"北京"</span>,<span class="number">12</span>:<span class="string">"天津"</span>,<span class="number">13</span>:<span class="string">"河北"</span>,<span class="number">14</span>:<span class="string">"山西"</span>,<span class="number">15</span>:<span class="string">"内蒙古"</span>,<span class="number">21</span>:<span class="string">"辽宁"</span>,<span class="number">22</span>:<span class="string">"吉林"</span>,<span class="number">23</span>:<span class="string">"黑龙江 "</span>,<span class="number">31</span>:<span class="string">"上海"</span>,<span class="number">32</span>:<span class="string">"江苏"</span>,<span class="number">33</span>:<span class="string">"浙江"</span>,<span class="number">34</span>:<span class="string">"安徽"</span>,<span class="number">35</span>:<span class="string">"福建"</span>,<span class="number">36</span>:<span class="string">"江西"</span>,<span class="number">37</span>:<span class="string">"山东"</span>,<span class="number">41</span>:<span class="string">"河南"</span>,<span class="number">42</span>:<span class="string">"湖北 "</span>,<span class="number">43</span>:<span class="string">"湖南"</span>,<span class="number">44</span>:<span class="string">"广东"</span>,<span class="number">45</span>:<span class="string">"广西"</span>,<span class="number">46</span>:<span class="string">"海南"</span>,<span class="number">50</span>:<span class="string">"重庆"</span>,<span class="number">51</span>:<span class="string">"四川"</span>,<span class="number">52</span>:<span class="string">"贵州"</span>,<span class="number">53</span>:<span class="string">"云南"</span>,<span class="number">54</span>:<span class="string">"西藏 "</span>,<span class="number">61</span>:<span class="string">"陕西"</span>,<span class="number">62</span>:<span class="string">"甘肃"</span>,<span class="number">63</span>:<span class="string">"青海"</span>,<span class="number">64</span>:<span class="string">"宁夏"</span>,<span class="number">65</span>:<span class="string">"新疆"</span>,<span class="number">71</span>:<span class="string">"台湾"</span>,<span class="number">81</span>:<span class="string">"香港"</span>,<span class="number">82</span>:<span class="string">"澳门"</span>,<span class="number">91</span>:<span class="string">"国外 "</span>&#125;;</span><br><span class="line">  <span class="keyword">if</span>(!value || !<span class="regexp">/^\d&#123;6&#125;(18|19|20)?\d&#123;2&#125;(0[1-9]|1[012])(0[1-9]|[12]\d|3[01])\d&#123;3&#125;(\d|[xX])$/</span>.test(value))&#123;</span><br><span class="line">    callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'请输入正确的身份证号'</span>));</span><br><span class="line">  &#125;<span class="keyword">else</span> <span class="keyword">if</span>(!city[value.substr(<span class="number">0</span>,<span class="number">2</span>)])&#123;</span><br><span class="line">    callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'请输入正确的身份证号'</span>));</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="comment">//18位身份证需要验证最后一位校验位</span></span><br><span class="line">      <span class="keyword">if</span>(value.length == <span class="number">18</span>)&#123;</span><br><span class="line">        value = value.split(<span class="string">''</span>);</span><br><span class="line">          <span class="comment">//∑(ai×Wi)(mod 11)</span></span><br><span class="line">          <span class="comment">//加权因子</span></span><br><span class="line">          <span class="keyword">var</span> factor = [ <span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">2</span> ];</span><br><span class="line">          <span class="comment">//校验位</span></span><br><span class="line">          <span class="keyword">var</span> parity = [ <span class="number">1</span>, <span class="number">0</span>, <span class="string">'X'</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span> ];</span><br><span class="line">          <span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line">          <span class="keyword">var</span> ai = <span class="number">0</span>;</span><br><span class="line">          <span class="keyword">var</span> wi = <span class="number">0</span>;</span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">17</span>; i++)</span><br><span class="line">          &#123;</span><br><span class="line">              ai = value[i];</span><br><span class="line">              wi = factor[i];</span><br><span class="line">              sum += ai * wi;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span>(parity[sum % <span class="number">11</span>] != value[<span class="number">17</span>].toUpperCase())&#123;</span><br><span class="line">            callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'请输入正确的身份证号'</span>));</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> callback();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 验证是否整数</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">isInteger</span>(<span class="params">rule, value, callback</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!value) &#123;</span><br><span class="line">    callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'输入不可以为空'</span>));</span><br><span class="line">  &#125;</span><br><span class="line">  setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">Number</span>(value)) &#123;</span><br><span class="line">      callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'请输入正整数'</span>));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> re = <span class="regexp">/^[0-9]*[1-9][0-9]*$/</span>;</span><br><span class="line">      <span class="keyword">const</span> rsCheck = re.test(value);</span><br><span class="line">      <span class="keyword">if</span> (!rsCheck) &#123;</span><br><span class="line">        callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'请输入正整数'</span>));</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        callback();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * validate email</span></span><br><span class="line"><span class="comment"> * @param email</span></span><br><span class="line"><span class="comment"> * @returns &#123;boolean&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/* 是否邮箱*/</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">validateEMail</span>(<span class="params">rule, value,callback</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> reg =<span class="regexp">/^([a-zA-Z0-9]+[-_\.]?)+@[a-zA-Z0-9]+\.[a-z]+$/</span>;</span><br><span class="line">  <span class="keyword">if</span>(value==<span class="string">''</span>||value==<span class="literal">undefined</span>||value==<span class="literal">null</span>)&#123;</span><br><span class="line">    callback();</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!reg.test(value))&#123;</span><br><span class="line">      callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'请输入正确的邮箱地址！'</span>));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      callback();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//银行卡卡号校验方法。</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">formatBankNo</span>(<span class="params">rule, bankno, callback</span>) </span>&#123;</span><br><span class="line">  bankno = bankno.replace(<span class="regexp">/\s*/g</span>,<span class="string">''</span>) <span class="comment">// 去除空格</span></span><br><span class="line">  <span class="keyword">var</span> lastNum = bankno.substr(bankno.length - <span class="number">1</span>, <span class="number">1</span>); <span class="comment">//取出最后一位（与luhn进行比较）</span></span><br><span class="line">  <span class="keyword">var</span> first15Num = bankno.substr(<span class="number">0</span>, bankno.length - <span class="number">1</span>); <span class="comment">//前15或18位</span></span><br><span class="line">  <span class="keyword">var</span> newArr = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = first15Num.length - <span class="number">1</span>; i &gt; <span class="number">-1</span>; i--) &#123; <span class="comment">//前15或18位倒序存进数组</span></span><br><span class="line">    newArr.push(first15Num.substr(i, <span class="number">1</span>));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> arrJiShu = <span class="keyword">new</span> <span class="built_in">Array</span>(); <span class="comment">//奇数位*2的积 &lt;9</span></span><br><span class="line">  <span class="keyword">var</span> arrJiShu2 = <span class="keyword">new</span> <span class="built_in">Array</span>(); <span class="comment">//奇数位*2的积 &gt;9</span></span><br><span class="line">  <span class="keyword">var</span> arrOuShu = <span class="keyword">new</span> <span class="built_in">Array</span>(); <span class="comment">//偶数位数组</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; newArr.length; j++) &#123;</span><br><span class="line">    <span class="keyword">if</span> ((j + <span class="number">1</span>) % <span class="number">2</span> == <span class="number">1</span>) &#123; <span class="comment">//奇数位</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">parseInt</span>(newArr[j]) * <span class="number">2</span> &lt; <span class="number">9</span>) arrJiShu.push(<span class="built_in">parseInt</span>(newArr[j]) * <span class="number">2</span>);</span><br><span class="line">      <span class="keyword">else</span> arrJiShu2.push(<span class="built_in">parseInt</span>(newArr[j]) * <span class="number">2</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="comment">//偶数位</span></span><br><span class="line">      arrOuShu.push(newArr[j]);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> jishu_child1 = <span class="keyword">new</span> <span class="built_in">Array</span>(); <span class="comment">//奇数位*2 &gt;9 的分割之后的数组个位数</span></span><br><span class="line">  <span class="keyword">var</span> jishu_child2 = <span class="keyword">new</span> <span class="built_in">Array</span>(); <span class="comment">//奇数位*2 &gt;9 的分割之后的数组十位数</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> h = <span class="number">0</span>; h &lt; arrJiShu2.length; h++) &#123;</span><br><span class="line">      jishu_child1.push(<span class="built_in">parseInt</span>(arrJiShu2[h]) % <span class="number">10</span>);</span><br><span class="line">      jishu_child2.push(<span class="built_in">parseInt</span>(arrJiShu2[h]) / <span class="number">10</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> sumJiShu = <span class="number">0</span>; <span class="comment">//奇数位*2 &lt; 9 的数组之和</span></span><br><span class="line">  <span class="keyword">var</span> sumOuShu = <span class="number">0</span>; <span class="comment">//偶数位数组之和</span></span><br><span class="line">  <span class="keyword">var</span> sumJiShuChild1 = <span class="number">0</span>; <span class="comment">//奇数位*2 &gt;9 的分割之后的数组个位数之和</span></span><br><span class="line">  <span class="keyword">var</span> sumJiShuChild2 = <span class="number">0</span>; <span class="comment">//奇数位*2 &gt;9 的分割之后的数组十位数之和</span></span><br><span class="line">  <span class="keyword">var</span> sumTotal = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> m = <span class="number">0</span>; m &lt; arrJiShu.length; m++) &#123;</span><br><span class="line">      sumJiShu = sumJiShu + <span class="built_in">parseInt</span>(arrJiShu[m]);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> n = <span class="number">0</span>; n &lt; arrOuShu.length; n++) &#123;</span><br><span class="line">      sumOuShu = sumOuShu + <span class="built_in">parseInt</span>(arrOuShu[n]);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> p = <span class="number">0</span>; p &lt; jishu_child1.length; p++) &#123;</span><br><span class="line">      sumJiShuChild1 = sumJiShuChild1 + <span class="built_in">parseInt</span>(jishu_child1[p]);</span><br><span class="line">      sumJiShuChild2 = sumJiShuChild2 + <span class="built_in">parseInt</span>(jishu_child2[p]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//计算总和</span></span><br><span class="line">  sumTotal = <span class="built_in">parseInt</span>(sumJiShu) + <span class="built_in">parseInt</span>(sumOuShu) + <span class="built_in">parseInt</span>(sumJiShuChild1) + <span class="built_in">parseInt</span>(sumJiShuChild2);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//计算luhn值</span></span><br><span class="line">  <span class="keyword">var</span> k = <span class="built_in">parseInt</span>(sumTotal) % <span class="number">10</span> == <span class="number">0</span> ? <span class="number">10</span> : <span class="built_in">parseInt</span>(sumTotal) % <span class="number">10</span>;</span><br><span class="line">  <span class="keyword">var</span> luhn = <span class="number">10</span> - k;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (lastNum == luhn) &#123;</span><br><span class="line">  　callback();</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'请输入正确的银行卡号!'</span>))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输入密码不能少于4位</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">typePasswordLength</span> (<span class="params">rule, value, callback</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (value!== <span class="literal">null</span> &amp;&amp; value!==<span class="string">''</span>) &#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span>(value.length &lt;<span class="number">4</span>)&#123;</span><br><span class="line">        callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">"密码不得小于四位"</span>));</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        callback();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, <span class="number">100</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 姓名登录名不能包含特殊字符</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">typeSpecialCharacter</span> (<span class="params">rule, value, callback</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> reg =<span class="regexp">/^[^`!@#$%^&amp;*.&lt;&gt;]+$/</span>;</span><br><span class="line">  <span class="keyword">if</span>(value==<span class="string">''</span>||value==<span class="literal">undefined</span>||value==<span class="literal">null</span>)&#123;</span><br><span class="line">    callback();</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!reg.test(value))&#123;</span><br><span class="line">      callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'输入不能包含特殊字符'</span>));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      callback();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l
      
    
    </summary>
    
    
      <category term="Js" scheme="http://yoursite.com/categories/Js/"/>
    
    
      <category term="Js" scheme="http://yoursite.com/tags/Js/"/>
    
  </entry>
  
  <entry>
    <title>pc端常用的电脑屏幕分辨率(响应式媒体查询)</title>
    <link href="http://yoursite.com/2019/11/18/pc%E7%AB%AF%E5%B8%B8%E7%94%A8%E7%9A%84%E7%94%B5%E8%84%91%E5%B1%8F%E5%B9%95%E5%88%86%E8%BE%A8%E7%8E%87-%E5%93%8D%E5%BA%94%E5%BC%8F%E5%AA%92%E4%BD%93%E6%9F%A5%E8%AF%A2/"/>
    <id>http://yoursite.com/2019/11/18/pc端常用的电脑屏幕分辨率-响应式媒体查询/</id>
    <published>2019-11-18T09:48:35.000Z</published>
    <updated>2019-12-05T10:06:09.548Z</updated>
    
    <content type="html"><![CDATA[<p>PC端<strong><strong>****</strong></strong></p><p>按屏幕宽度大小排序（主流的用橙色标明）</p><p>分辨率   比例 | 设备尺寸</p><p>1024*500 （8.9寸）</p><p>1024*768 （比例4：3  | 10.4寸、12.1寸、14.1寸、15寸; ）</p><p>1280*800（16：10  |15.4寸）</p><p>1280*1024(比例：5：4  | 14.1寸、15.0寸)</p><p>1280*854(比例：15：10 | 15.2）</p><p>1366*768 (比例：16：9 | 不常见）</p><p>1440*900 （16：10  17寸 仅苹果用）</p><p>1440*1050（比例：5：4  | 14.1寸、15.0寸）</p><p>1600*1024（14：9  不常见）</p><p>1600*1200 （4：3 | 15、16.1）</p><p>1680*1050（16：10 | 15.4寸、20.0寸）</p><p>1920*1200 (23寸）</p><p>PC端响应式媒体断点</p><p>用min-width时，小的放上面大的在下面</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">@media screen and (min-width: <span class="number">1024</span>px)&#123;</span><br><span class="line">body&#123;font-size: 18px;color: #fe0024;&#125;</span><br><span class="line">&#125; <span class="comment">/*&gt;=1024的设备*/</span></span><br><span class="line">@media (min-width: <span class="number">1100</span>px) &#123;</span><br><span class="line">body&#123;font-size: 20px;color: #cb00fe;&#125;</span><br><span class="line">&#125; <span class="comment">/*&gt;=1024的设备*/</span></span><br><span class="line">@media (min-width: <span class="number">1280</span>px) &#123;</span><br><span class="line">body&#123;font-size: 22px;color: #fea100;&#125;</span><br><span class="line">&#125; </span><br><span class="line">@media (min-width: <span class="number">1366</span>px) &#123;</span><br><span class="line">body&#123;font-size: 24px;color:#ec0bb4&#125;</span><br><span class="line">&#125; </span><br><span class="line">@media (min-width: <span class="number">1440</span>px) &#123;</span><br><span class="line">body&#123;font-size: 25px !important;color:#2ddc04&#125;</span><br><span class="line">&#125; </span><br><span class="line">@media (min-width: <span class="number">1680</span>px) &#123;</span><br><span class="line">body&#123;font-size: 28px;color:#ef2525&#125;</span><br><span class="line">&#125; </span><br><span class="line">@media (min-width: <span class="number">1920</span>px) &#123;</span><br><span class="line">body&#123;font-size: 33px;color: #ffff00;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>max-width那么就是大的在上面，小的在下面</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">@media screen and (max-width: <span class="number">1920</span>px) &#123;</span><br><span class="line">  body&#123;font-size: 33px;color: #ffff00;&#125;</span><br><span class="line">&#125; </span><br><span class="line">@media screen and (max-width: <span class="number">1680</span>px) &#123;</span><br><span class="line">  body&#123;font-size: 28px;color:#ef2525&#125;</span><br><span class="line">&#125;</span><br><span class="line">@media screen and (max-width: <span class="number">1440</span>px) &#123;</span><br><span class="line">  body&#123;font-size: 25px !important;color:#2ddc04&#125;</span><br><span class="line">&#125; </span><br><span class="line">@media screen and (max-width: <span class="number">1366</span>px) &#123;</span><br><span class="line">  body&#123;font-size: 24px;color:#ec0bb4&#125;</span><br><span class="line">&#125;</span><br><span class="line">@media screen and (max-width: <span class="number">1280</span>px) &#123;</span><br><span class="line">  body&#123;font-size: 22px;color: #fea100;&#125;</span><br><span class="line">  &#125; </span><br><span class="line">@media screen and (max-width: <span class="number">1100</span>px) &#123;</span><br><span class="line">  body&#123;font-size: 20px;color: #cb00fe;&#125;</span><br><span class="line">&#125; </span><br><span class="line">@media screen and (max-width: <span class="number">1024</span>px)&#123;</span><br><span class="line">  body&#123;font-size: 18px;color: #fe0024;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;PC端&lt;strong&gt;&lt;strong&gt;****&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;按屏幕宽度大小排序（主流的用橙色标明）&lt;/p&gt;
&lt;p&gt;分辨率   比例 | 设备尺寸&lt;/p&gt;
&lt;p&gt;1024*500 （8.9寸）&lt;/p&gt;
&lt;p&gt;1024*768 （比例4：3
      
    
    </summary>
    
    
      <category term="Js" scheme="http://yoursite.com/categories/Js/"/>
    
    
      <category term="Js" scheme="http://yoursite.com/tags/Js/"/>
    
  </entry>
  
  <entry>
    <title>pdf预览</title>
    <link href="http://yoursite.com/2019/11/09/pdf%E9%A2%84%E8%A7%88/"/>
    <id>http://yoursite.com/2019/11/09/pdf预览/</id>
    <published>2019-11-09T13:39:33.000Z</published>
    <updated>2019-12-02T08:59:37.190Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;p&gt;&#123;&#123;title&#125;&#125;&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">    &lt;el-progress :percentage="progress" :format="format(progress)"&gt;&lt;/</span>el-progress&gt;</span><br><span class="line">    &lt;canvas v-<span class="keyword">for</span>=<span class="string">"n in totalPage"</span> :id=<span class="string">"'the-canvas' + n"</span> :key=<span class="string">"n"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"pdf-content"</span> style=<span class="string">"background-color: antiquewhite"</span> charset=<span class="string">"gb2312"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span></span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"handle-page"</span>&gt;</span><br><span class="line">      &lt;button @click=<span class="string">"enlarge"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"el-icon-plus"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">      &lt;button @click=<span class="string">"letting"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"el-icon-minus"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">      &lt;button @click=<span class="string">"rotation"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"el-icon-refresh"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">  import pdfJS from 'pdfjs-dist'</span></span><br><span class="line"><span class="regexp">  export default &#123;</span></span><br><span class="line"><span class="regexp">    props: &#123;</span></span><br><span class="line"><span class="regexp">      dataFlow: &#123;</span></span><br><span class="line"><span class="regexp">        type: String,</span></span><br><span class="line"><span class="regexp">        required: true,</span></span><br><span class="line"><span class="regexp">        default: "",</span></span><br><span class="line"><span class="regexp">      &#125;,</span></span><br><span class="line"><span class="regexp">      title: &#123;</span></span><br><span class="line"><span class="regexp">        type: String,</span></span><br><span class="line"><span class="regexp">        default: '',</span></span><br><span class="line"><span class="regexp">      &#125;,</span></span><br><span class="line"><span class="regexp">      loadPage: &#123;/</span><span class="regexp">/权限控制的页面数</span></span><br><span class="line"><span class="regexp">        type: Number,</span></span><br><span class="line"><span class="regexp">        default: 0,</span></span><br><span class="line"><span class="regexp">      &#125;,</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    data () &#123;</span></span><br><span class="line"><span class="regexp">      return &#123;</span></span><br><span class="line"><span class="regexp">        pdfDoc: null,</span></span><br><span class="line"><span class="regexp">        totalPage: 0,/</span><span class="regexp">/总的页面数</span></span><br><span class="line"><span class="regexp">        loadedPageCount: 0,/</span><span class="regexp">/当前加载的页面数</span></span><br><span class="line"><span class="regexp">        scale: 1.3, /</span><span class="regexp">/缩放倍数，1表示原始大小</span></span><br><span class="line"><span class="regexp">        rotate: 0,</span></span><br><span class="line"><span class="regexp">        progress: 0,/</span><span class="regexp">/进度条</span></span><br><span class="line"><span class="regexp">        isShow: false</span></span><br><span class="line"><span class="regexp">      &#125;</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    watch: &#123;</span></span><br><span class="line"><span class="regexp">      dataFlow (newval, oldval) &#123;</span></span><br><span class="line"><span class="regexp">        if(newval) &#123;</span></span><br><span class="line"><span class="regexp">          this.isShow = false;</span></span><br><span class="line"><span class="regexp">          this.loadedPageCount = 0;</span></span><br><span class="line"><span class="regexp">          this.progress = 0;</span></span><br><span class="line"><span class="regexp">          console.log(newval);</span></span><br><span class="line"><span class="regexp">          this.getPDFFile(newval);</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">      &#125;</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    computed: &#123;</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    created() &#123;</span></span><br><span class="line"><span class="regexp">      pdfJS.GlobalWorkerOptions.workerSrc = require('pdfjs-dist/</span>build/pdf.worker.min.js<span class="string">');</span></span><br><span class="line"><span class="string">      this.getPDFFile(this.dataFlow);</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    mounted() &#123;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    methods: &#123;</span></span><br><span class="line"><span class="string">      getPDFFile (res) &#123;</span></span><br><span class="line"><span class="string">        if (!res) return</span></span><br><span class="line"><span class="string">        this.isShow = true;</span></span><br><span class="line"><span class="string">        this.loadedPageCount = 0;</span></span><br><span class="line"><span class="string">        // cmaps防止页面中乱码的问题,cdn引用和本地引用均可。cdn引入犹豫网络问题，容易加载丢失。</span></span><br><span class="line"><span class="string">        // let CMAP_URL = '</span>https:<span class="comment">//cdn.jsdelivr.net/npm/pdfjs-dist@2.0.943/cmaps/';</span></span><br><span class="line">        <span class="keyword">let</span> CMAP_URL = <span class="string">'./static/cmaps/'</span>;</span><br><span class="line">        <span class="comment">/***********其实这里是base64解决跨域的关键************/</span></span><br><span class="line">        <span class="keyword">let</span> raw = <span class="built_in">window</span>.atob(res) <span class="comment">//从这里 到下面 得到 rawArray</span></span><br><span class="line">        <span class="keyword">let</span> rawLength = raw.length</span><br><span class="line">        <span class="keyword">let</span> rawArray = <span class="keyword">new</span> <span class="built_in">Uint8Array</span>(<span class="keyword">new</span> <span class="built_in">ArrayBuffer</span>(rawLength))</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;rawLength;i++)&#123;</span><br><span class="line">          rawArray[i] = raw.charCodeAt(i)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/********************************************/</span></span><br><span class="line">        <span class="comment">// 也就是这里！！！  这些语句是我们将base64格式的数据转成pdf.js可以解析的格式  !</span></span><br><span class="line">        <span class="comment">// (https://img-blog.csdnimg.cn/20190321174128417.png)这个是rawArray的最终格式 通过此链接可以查看图片</span></span><br><span class="line">        <span class="comment">// console.log(rawArray)</span></span><br><span class="line">        pdfJS.getDocument(&#123;<span class="attr">data</span>: rawArray,<span class="attr">cMapUrl</span>: CMAP_URL,<span class="attr">cMapPacked</span>: <span class="literal">true</span>,&#125;).then(<span class="function"><span class="params">pdf</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">this</span>.pdfDoc = pdf;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="keyword">this</span>.pdfDoc)</span><br><span class="line">          <span class="keyword">this</span>.renderPage();</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      renderPage() &#123;</span><br><span class="line">        <span class="keyword">const</span> that = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.loadPage == <span class="number">0</span> || <span class="keyword">this</span>.loadPage &gt;= <span class="keyword">this</span>.pdfDoc.numPages) &#123;</span><br><span class="line">          <span class="keyword">this</span>.totalPage = <span class="keyword">this</span>.pdfDoc.numPages;<span class="comment">//总页数</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">this</span>.totalPage = <span class="keyword">this</span>.loadPage;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//一次加载了所有页，也可以一页页加载</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>; i&lt;=<span class="keyword">this</span>.totalPage; i++) &#123;</span><br><span class="line">          <span class="keyword">this</span>.pdfDoc.getPage(i).then(<span class="function">(<span class="params">page</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> viewport = page.getViewport(<span class="keyword">this</span>.scale, <span class="keyword">this</span>.rotate); <span class="comment">//对视图展示的操作</span></span><br><span class="line">            <span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">'the-canvas'</span> + page.pageNumber);</span><br><span class="line">            <span class="keyword">var</span> context = canvas.getContext(<span class="string">'2d'</span>);</span><br><span class="line">            canvas.height = viewport.height;</span><br><span class="line">            canvas.width = viewport.width;</span><br><span class="line">            <span class="keyword">var</span> renderContext = &#123;</span><br><span class="line">              canvasContext: context,</span><br><span class="line">              viewport: viewport</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="comment">// 先加载完成所有页面，后渲染所有页面</span></span><br><span class="line">            page.render(renderContext).promise.then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">              <span class="keyword">this</span>.loadedPageCount ++;<span class="comment">//加载一个+1，最后总数和totalPage一样了，表示pdf加载完了</span></span><br><span class="line">              <span class="keyword">this</span>.$nextTick(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">this</span>.progress = <span class="built_in">Math</span>.round( <span class="keyword">this</span>.loadedPageCount / <span class="keyword">this</span>.totalPage * <span class="number">100</span>);</span><br><span class="line">                <span class="keyword">this</span>.format(<span class="keyword">this</span>.progress);</span><br><span class="line">              &#125;)</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.progress = <span class="number">100</span>;</span><br><span class="line">            <span class="built_in">console</span>.log(error);</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">//放大</span></span><br><span class="line">      enlarge()&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.progress == <span class="number">100</span>) &#123;</span><br><span class="line">          <span class="keyword">this</span>.progress = <span class="number">0</span>;</span><br><span class="line">          <span class="keyword">this</span>.loadedPageCount = <span class="number">0</span>;</span><br><span class="line">          <span class="keyword">this</span>.scale += <span class="number">0.1</span>;</span><br><span class="line">          <span class="keyword">this</span>.renderPage();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">//缩小</span></span><br><span class="line">      letting()&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.progress == <span class="number">100</span>) &#123;</span><br><span class="line">          <span class="keyword">this</span>.progress = <span class="number">0</span>;</span><br><span class="line">          <span class="keyword">this</span>.loadedPageCount = <span class="number">0</span>;</span><br><span class="line">          <span class="keyword">this</span>.scale -= <span class="number">0.1</span>;</span><br><span class="line">          <span class="keyword">this</span>.renderPage();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">// 旋转</span></span><br><span class="line">      rotation()&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.progress == <span class="number">100</span>) &#123;</span><br><span class="line">          <span class="keyword">this</span>.progress = <span class="number">0</span>;</span><br><span class="line">          <span class="keyword">this</span>.loadedPageCount = <span class="number">0</span>;</span><br><span class="line">          <span class="keyword">this</span>.rotate += <span class="number">90</span>;</span><br><span class="line">          <span class="keyword">this</span>.renderPage();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      format(percentage) &#123;</span><br><span class="line">        <span class="keyword">return</span> percentage === <span class="number">100</span> ? <span class="string">'满'</span> : <span class="string">`<span class="subst">$&#123;percentage&#125;</span>%`</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;style lang="scss" scoped&gt;</span></span><br><span class="line"><span class="regexp">  .handle-page &#123;</span></span><br><span class="line"><span class="regexp">    border-radius: 3px;</span></span><br><span class="line"><span class="regexp">    position: fixed;</span></span><br><span class="line"><span class="regexp">    top: 280px;</span></span><br><span class="line"><span class="regexp">    right: 48%;</span></span><br><span class="line"><span class="regexp">    transform: translateX(500px);</span></span><br><span class="line"><span class="regexp">    background-color: rgb(240, 240, 240);</span></span><br><span class="line"><span class="regexp">    border: 1px solid #C4C9D0;</span></span><br><span class="line"><span class="regexp">    button &#123;</span></span><br><span class="line"><span class="regexp">      display: block;</span></span><br><span class="line"><span class="regexp">      width: 30px;</span></span><br><span class="line"><span class="regexp">      height: 30px;</span></span><br><span class="line"><span class="regexp">      padding: 10px 0;</span></span><br><span class="line"><span class="regexp">      margin: 0 10px;</span></span><br><span class="line"><span class="regexp">      border: 0;</span></span><br><span class="line"><span class="regexp">      outline: none;</span></span><br><span class="line"><span class="regexp">      box-sizing:content-box;</span></span><br><span class="line"><span class="regexp">      font-size: 14px;</span></span><br><span class="line"><span class="regexp">      cursor: pointer;</span></span><br><span class="line"><span class="regexp">      border-bottom: 1px solid #C4C9D0;</span></span><br><span class="line"><span class="regexp">      background-color: rgb(240, 240, 240);</span></span><br><span class="line"><span class="regexp">      &amp;:hover &#123;</span></span><br><span class="line"><span class="regexp">        color: #009A52;</span></span><br><span class="line"><span class="regexp">      &#125;</span></span><br><span class="line"><span class="regexp">      &amp;:last-child &#123;</span></span><br><span class="line"><span class="regexp">        border-bottom: none;</span></span><br><span class="line"><span class="regexp">      &#125;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">  .pdf-content &#123;</span></span><br><span class="line"><span class="regexp">    position: relative;</span></span><br><span class="line"><span class="regexp">    left: 50%;</span></span><br><span class="line"><span class="regexp">    transform: translateX(-50%);</span></span><br><span class="line"><span class="regexp">    background-color: antiquewhite;</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>style&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l
      
    
    </summary>
    
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>H5C3新特性</title>
    <link href="http://yoursite.com/2019/11/04/H5C3%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    <id>http://yoursite.com/2019/11/04/H5C3新特性/</id>
    <published>2019-11-04T08:41:59.000Z</published>
    <updated>2019-12-05T10:07:19.936Z</updated>
    
    <content type="html"><![CDATA[<p>CSS3新特性：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">1.颜色：新增RGBA，HSLA模式 </span><br><span class="line">2. 文字阴影（text-shadow） </span><br><span class="line">3. 边框： 圆角（border-radius）边框阴影： box-shadow </span><br><span class="line">4. 盒子模型：box-sizing </span><br><span class="line">5. 背景：background-size 设置背景图片的尺寸background-origin 设置背景图片的原点background-clip 设置背景图片的裁切区域，以”，”分隔可以设置多背景，用于自适应布局 </span><br><span class="line">6. 渐变：linear-gradient、radial-gradient </span><br><span class="line">7. 过渡：transition，可实现动画 </span><br><span class="line">8. 自定义动画 </span><br><span class="line">9. 在CSS3中唯一引入的伪元素 ：selection. </span><br><span class="line">10. 媒体查询，多栏布局 </span><br><span class="line">11. border-image </span><br><span class="line">12. 2D转换：transform：translate(x，y) rotate(x，y) skew(x，y) scale(x，y) </span><br><span class="line">13. 3D转换 </span><br><span class="line">14.新增选择器：属性选择器、伪类选择器、伪元素选择器。 </span><br><span class="line"></span><br><span class="line">H5新特性:</span><br><span class="line"></span><br><span class="line">1. 拖拽释放(Drag and drop) API </span><br><span class="line">2. 语义化更好的内容标签（header,nav,footer,aside,article,section） </span><br><span class="line">3. 音频、视频API(audio,video) </span><br><span class="line">4. 画布(Canvas) API </span><br><span class="line">5. 地理(Geolocation) API </span><br><span class="line">6. 数据存储 localStorage、sessionStorage  </span><br><span class="line">7. 表单控件，calendar、date、time、email、url、search</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;CSS3新特性：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;
      
    
    </summary>
    
    
      <category term="H5C3" scheme="http://yoursite.com/categories/H5C3/"/>
    
    
      <category term="H5C3" scheme="http://yoursite.com/tags/H5C3/"/>
    
  </entry>
  
  <entry>
    <title>人间失格读后感</title>
    <link href="http://yoursite.com/2019/11/04/%E4%BA%BA%E9%97%B4%E5%A4%B1%E6%A0%BC%E8%AF%BB%E5%90%8E%E6%84%9F/"/>
    <id>http://yoursite.com/2019/11/04/人间失格读后感/</id>
    <published>2019-11-04T08:28:22.000Z</published>
    <updated>2019-11-04T08:30:28.332Z</updated>
    
    <content type="html"><![CDATA[<p>小时候的叶藏是一个心思很重的孩子，太早的成熟使他有着同龄人所没有的敏感。虽然生活在所有人中间，但是给人的感觉确实离群索居的，与周围的人显得那么格格不入。在很小的时候他就知道他的幸福观与这世上所有人的幸福观都大相径庭，并为此而彻夜难眠痛苦呻吟走火入魔，这种状态，在其他人看来或许是离经叛道的，一旦他表露这种想法的话，大概会被人当做精神病人送进冷冰冰的医院吧。</p><p>他决定扮演一个小丑，来掩饰自己真实的内心世界，来取悦这世上所有的人，自己的亲人朋友，自己的老师同学，乃至周围的各种形形色色的所有人。读到这里，心真的很难不痛，这本不是一个孩子应该承受的！</p><p>长大后的叶藏越发的颓废，逃课、酗酒、抽烟、娼妓，糜烂的生活像极了我们眼中坏小子的形象。他陷得越来越深了，终于在某一天，与常子一起跳入了冰冷的河水中，常子死了，叶藏还活着，只是这种活着真的是叶藏所需要的吗？行尸走肉一般卑微的活着。。。除了压抑，还是压抑，找不到别的形容词更能形容读人间失格的感觉。</p><p>与其说人间失格是太宰治最后的遗著，不如说这是他留给这个冷冰冰的世界的遗书更合适。太宰治在《人间失格》中，藉大庭叶藏的独白表达他的人生与思想：「信赖是罪吗？」「已经没有回头路了，不论怎麼做，做什麼，都只会徒劳无功，只会让人觉得更差耻吧了！」「苟活著就是罪恶的种子！我的不幸，是无力拒绝他人的不幸。一旦拒绝，不论对方或是自己心裏，永远都有一道无法弥补的白色裂痕。我被这样的恐惧胁迫著。问问老天：不抵抗是罪吗？」</p><p>非常沉重的独白，是人生绝望的极致。太了解人生，也就绝对悲观。这也许就是太宰治的成就，也是他的悲剧。</p><p>活在自己的世界里，卑微而自由，这是叶藏或者是太宰治的选择。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;小时候的叶藏是一个心思很重的孩子，太早的成熟使他有着同龄人所没有的敏感。虽然生活在所有人中间，但是给人的感觉确实离群索居的，与周围的人显得那么格格不入。在很小的时候他就知道他的幸福观与这世上所有人的幸福观都大相径庭，并为此而彻夜难眠痛苦呻吟走火入魔，这种状态，在其他人看来或
      
    
    </summary>
    
    
      <category term="其他" scheme="http://yoursite.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="其他" scheme="http://yoursite.com/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>云端有个小卖部读后感</title>
    <link href="http://yoursite.com/2019/11/04/%E4%BA%91%E7%AB%AF%E6%9C%89%E4%B8%AA%E5%B0%8F%E5%8D%96%E9%83%A8%E8%AF%BB%E5%90%8E%E6%84%9F/"/>
    <id>http://yoursite.com/2019/11/04/云端有个小卖部读后感/</id>
    <published>2019-11-04T08:28:02.000Z</published>
    <updated>2019-11-04T08:30:11.243Z</updated>
    
    <content type="html"><![CDATA[<p> 一次坐火车去闺蜜那里,到的太早,闲来无事去书店买了这本云端有个小卖部,今天写下读完的感受.</p><p> 我几乎是含泪看完的这本书,主人公并没有天赋异禀,也没有帅气多金,他只是一个普通的不能在普通的凡人,甚至在牛大田和毛婷婷,连小球球都比不上的让人深刻,相反他的外婆王莺莺确很出彩,火急火燎的暴脾气,每天开着拖拉机去进货,甚至把刘十三从一个城市拉回老家,她从不去表达自己对刘十三的爱,确又无时不刻不在展现她的爱.她不想让刘十三在外面闯荡,却不会去阻拦他,甚至心疼他在外过的拮据,偷偷塞钱,做刘十三爱吃的饭菜.知道自己癌症后隐瞒把刘十三接回来陪自己.可能是隔代亲,也可能刘十三是唯一的把他和自己的女儿联系在一起的那个人,遗憾的是他最后都没有在见到过自己的女儿.<br>​ 刘十三,一个拼了命想去大城市的年轻人,他妈妈留下的笔记就是去大城市工作,找个爱的女孩结婚,考上清货北大.他和我们是一样的普通到不能再普通,事业一直停滞不前,同事之间的关系也很现实,当你在低谷,没有人会拉你,他们还会使劲的去踩踏你,感情上他一直忘不掉女神，一直恋恋不舍，直到时间模糊了他的记忆，这也是人生吧，当时觉得天大的事情，若干年后回头看时，也不过尔尔。难过可以，伤心可以，但是不能放弃自己，很庆幸刘十三遇到了程霜，那个女孩带她走了出来，让他明白了什么是爱.<br>​ 小球球让人心疼到骨子里,在该拥有童真童趣的年纪要伪装自己的情绪,担负起责任,甚至知道被误解了都不会去为自己辩解,他的懂事让人心疼.<br>​ 程霜,是个那么开朗，又让人那么心疼的姑娘，和病魔抗争了那么久，最终还是离开了，生命不知道何时就会终止,拼全力去努力生活享受所有好的与坏的处境,没有什么比活着更幸福.<br>​ 最后的最后,王莺莺和程霜都离开了刘十三,球球去了福利院,美好的事情从来都不属于生活,生活本来就是悲喜交加的.毛婷婷不管弟弟怎么做,从没有放弃过他,毛婷婷的婚礼上，一直在等她的弟弟，不过没有能够等到。她在婚礼之后，就要离开云边镇，去到远方，这也是一个姐姐对自己的唯一亲人的告别吧。,牛大田烧掉棋牌室为了秦小贞,都是生活的影子,也是这些事情丰富了刘十三的生活.</p><p> 悲伤和希望，都是一缕光，得与失从来都是成对出现的。</p><ol><li>有朵盛开的云，缓缓滑过山顶，随风飘向天边 ，我们慢慢明白，有些告别，就是最后一面。</li><li>山风微微，像月光下晃动的海浪， 温和而柔软，停留在时光的背后， 变成小时候听过的故事。 在遥远的城市，陌生的地方， 有他未曾见过的山和海。　</li><li>人和人之间舒服的关系，是可以一直不说话，也可以随时说话。　　</li><li>生命是有光的。 在我熄灭以前，能够照亮你一点，就是我所有能做的了。 我爱你，你要记得我。　　</li><li>有些人刻苦铭心， 没几年会遗忘。 有些人不论生死， 都陪在身旁。　</li><li>等待而已， 也叫努力? 是在等别人离开， 还是在等自己放弃?　　</li><li>云边有个小卖部，货架堆着岁月和夕阳，背后就是山。老人靠着躺椅假装睡着，小孩子偷走了一块糖。泪水几点钟落地，飞鸟要去向何方。人们聚和离，云朵来又往。讲故事的人，总有一个故事不愿讲。时光飞逝，悄悄话变成纸张。　　</li><li>夏夜的歌声，冬至的歌声， 都从水面掠过，皱起一层波纹， 像天空坠落的泪水，又归于天空。 人们随口说的一些话，跌落墙角， 风吹不走，阳光烧不掉，独自沉眠。　　</li><li>“我有很重要的事， 输了的话， 我就真的一无所有了。”　　</li><li>这世上大部分抒情，都会被认作是无病呻吟。能理解你得了什么病，基本上就是知己。</li><li>刘十三的家在山间，院子开了一个小卖部，从窗户伸出手去，彷佛摸到云朵　</li><li>程霜离开的时候，春风穿过云边镇，花瓣纷飞，好像幸福真的存在似的。　</li><li>原来世界上很多事情，不是你有计划，有毅力就能做到的。　　</li><li>他一无所知，无法描绘所有人创造的未来世界里，如何创造一个家。他孜孜不倦地承诺和分享，只是把扎根他每个细胞的小镇生涯，换了本日历，成为他反复的描绘。　　</li><li>如果每件事情都算来算去，那么等到想明白，可能就来不及做了。　</li><li>比你强的人，要么对你怜悯，要么对你无视。　　</li><li>印象中，水库秋冬弥漫水雾，春夏明艳斑斓，白天水波娴静温柔，深不见底。它能包裹孩子仰面漂游，也能藏着吃人水猴的传说。　</li><li>山这边是刘十三的童年，山那边是外婆的海。山风微微，像月光下晃动的海浪，有的，没的，温和而柔软，停留在时光的背后，变成小时候听过的故事。　　</li><li>有些人刻骨铭心，没几年就遗忘。有些人不论生死，都陪在你身旁。　　</li><li>再习惯等待，等不来依旧难过，那种难过，书上说叫做失望。直到长大后，他才明白，还有更大的难过，叫做绝望。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt; 一次坐火车去闺蜜那里,到的太早,闲来无事去书店买了这本云端有个小卖部,今天写下读完的感受.&lt;/p&gt;
&lt;p&gt; 我几乎是含泪看完的这本书,主人公并没有天赋异禀,也没有帅气多金,他只是一个普通的不能在普通的凡人,甚至在牛大田和毛婷婷,连小球球都比不上的让人深刻,相反他的外婆王莺
      
    
    </summary>
    
    
      <category term="其他" scheme="http://yoursite.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="其他" scheme="http://yoursite.com/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>js为一个元素绑定多个事件</title>
    <link href="http://yoursite.com/2019/11/04/js%E4%B8%BA%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%E7%BB%91%E5%AE%9A%E5%A4%9A%E4%B8%AA%E4%BA%8B%E4%BB%B6/"/>
    <id>http://yoursite.com/2019/11/04/js为一个元素绑定多个事件/</id>
    <published>2019-11-04T08:15:24.000Z</published>
    <updated>2019-12-02T09:00:12.182Z</updated>
    
    <content type="html"><![CDATA[<p>onclick()这种写法是DOM0级规范的写法，是所有的浏览器支持的，但是这种写法有不能同时绑定多个事件、使代码耦合在了一起的弊端。但是addEventListener() 是DOM2标准中定义的方法，它可以控制是在事件捕获阶段或者是在冒泡阶段调用事件处理程序。既然这个是DOM2标准中定义的，那么只有支持DOM2级事件处理程序的浏览器才支持这个方法（IE9,Firefox,Safari,Chrome和Opera支持）。</p><h3 id="一、onclick-方式"><a href="#一、onclick-方式" class="headerlink" title="一、onclick()方式"></a><strong>一、onclick()方式</strong></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;绑定多个事件&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script&gt;</span></span><br><span class="line"><span class="regexp">        window.onload = function()&#123;</span></span><br><span class="line"><span class="regexp">            document.getElementById('btn').onclick = function () &#123;</span></span><br><span class="line"><span class="regexp">                alert(1);</span></span><br><span class="line"><span class="regexp">            &#125;;</span></span><br><span class="line"><span class="regexp">            document.getElementById('btn').onclick = function () &#123;</span></span><br><span class="line"><span class="regexp">                alert(2);</span></span><br><span class="line"><span class="regexp">            &#125;;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">&lt;button id="btn"&gt;点我&lt;/</span>button&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure><p>运行结果是第二个onclick把第一个onclick给覆盖了，虽然大部分情况用on就可以完成想要的结果，但是有时又需要执行多个相同的事件，很明显如果用on不能完成</p><h3 id="二、addEventListener-方法"><a href="#二、addEventListener-方法" class="headerlink" title="二、addEventListener()方法"></a>二、addEventListener()方法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;绑定多个事件&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script&gt;</span></span><br><span class="line"><span class="regexp">        window.onload = function()&#123;</span></span><br><span class="line"><span class="regexp">            document.getElementById('btn').addEventListener('click', function()&#123;</span></span><br><span class="line"><span class="regexp">                alert(1);</span></span><br><span class="line"><span class="regexp">            &#125;, false);</span></span><br><span class="line"><span class="regexp">            document.getElementById('btn').addEventListener('click', function()&#123;</span></span><br><span class="line"><span class="regexp">                alert(2);</span></span><br><span class="line"><span class="regexp">            &#125;, false);</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">&lt;button id="btn"&gt;点我&lt;/</span>button&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure><p>addEventListenert方法第一个参数填写事件名，第二个参数是一个函数，第三个参数是指在冒泡阶段还是捕获阶段处理事件处理程序。true代表捕获阶段处理， false代表冒泡阶段处理。第三个参数可以省略，大多数情况也不需要用到第三个参数，不写第三个参数默认false</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;onclick()这种写法是DOM0级规范的写法，是所有的浏览器支持的，但是这种写法有不能同时绑定多个事件、使代码耦合在了一起的弊端。但是addEventListener() 是DOM2标准中定义的方法，它可以控制是在事件捕获阶段或者是在冒泡阶段调用事件处理程序。既然这个是
      
    
    </summary>
    
    
      <category term="Js" scheme="http://yoursite.com/categories/Js/"/>
    
    
      <category term="Js" scheme="http://yoursite.com/tags/Js/"/>
    
  </entry>
  
  <entry>
    <title>JS数组去重的两种方法</title>
    <link href="http://yoursite.com/2019/11/04/JS%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2019/11/04/JS数组去重的两种方法/</id>
    <published>2019-11-04T08:14:57.000Z</published>
    <updated>2019-12-02T08:57:51.563Z</updated>
    
    <content type="html"><![CDATA[<h5 id="一、循环遍历法（传统思路）"><a href="#一、循环遍历法（传统思路）" class="headerlink" title="一、循环遍历法（传统思路）"></a><strong>一、循环遍历法（传统思路）</strong></h5><p>最简单粗暴的算法，新建一个空数组，然后遍历原数组，将不在新数组中的项添加到新数组，最后返回新数组</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">compare</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> newarr = [];<span class="comment">//新建空数组</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;<span class="comment">//遍历原数组</span></span><br><span class="line">        <span class="keyword">var</span> isadd = <span class="literal">true</span>;<span class="comment">//设置标记</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; newarr.length; j++) &#123;<span class="comment">//遍历新数组</span></span><br><span class="line">            <span class="keyword">if</span> (arr[i] === newarr[j]) &#123;</span><br><span class="line">                isadd = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="comment">//如果当前原数组中的项，在新数组中存在，则标记为‘不添加’，并跳出新数组遍历</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (isadd) &#123;</span><br><span class="line">            newarr.push(arr[i]);</span><br><span class="line">        &#125;<span class="comment">//若标记为‘添加’（即遍历新数组后，没有发现相同项），则添加进新数组</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> newarr;<span class="comment">//返回新数组</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">5</span>]</span><br><span class="line"><span class="built_in">console</span>.log(compare(arr))</span><br></pre></td></tr></table></figure><p><strong>二、排序比较法（巧妙转换）</strong></p><p>相对第一种方法，需要每次遍历新旧两个数组，效率不高的情况。此方法先对原数组进行排序，这样每次只要与新数组的最后一项比较即可，大大提高效率</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sortarr</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> arrsort = arr.sort();<span class="comment">//对原数组进行排序</span></span><br><span class="line">    <span class="keyword">var</span> newarr = [];<span class="comment">//新建空数组</span></span><br><span class="line">    newarr.push(arrsort[<span class="number">0</span>]);<span class="comment">//将排序后数值的第一项给添加到新数组</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; arrsort.length; i++) &#123;<span class="comment">//遍历排序后的数组</span></span><br><span class="line">        <span class="keyword">if</span> (arrsort[i] !== newarr[newarr.length - <span class="number">1</span>]) &#123;</span><br><span class="line">            newarr.push(arrsort[i])</span><br><span class="line">        &#125;<span class="comment">//若当前项与新数组最后一项不同，这添加到新数组</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> newarr;<span class="comment">//返回新数组</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">5</span>]</span><br><span class="line"><span class="built_in">console</span>.log(sortarr(arr))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;一、循环遍历法（传统思路）&quot;&gt;&lt;a href=&quot;#一、循环遍历法（传统思路）&quot; class=&quot;headerlink&quot; title=&quot;一、循环遍历法（传统思路）&quot;&gt;&lt;/a&gt;&lt;strong&gt;一、循环遍历法（传统思路）&lt;/strong&gt;&lt;/h5&gt;&lt;p&gt;最简单粗暴的算法，
      
    
    </summary>
    
    
      <category term="Js" scheme="http://yoursite.com/categories/Js/"/>
    
    
      <category term="Js" scheme="http://yoursite.com/tags/Js/"/>
    
  </entry>
  
  <entry>
    <title>Vue+element实现全选与反选</title>
    <link href="http://yoursite.com/2019/11/04/Vue-element%E5%AE%9E%E7%8E%B0%E5%85%A8%E9%80%89%E4%B8%8E%E5%8F%8D%E9%80%89/"/>
    <id>http://yoursite.com/2019/11/04/Vue-element实现全选与反选/</id>
    <published>2019-11-04T08:14:15.000Z</published>
    <updated>2019-12-05T10:09:48.080Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div v-<span class="keyword">for</span>=<span class="string">"(item,index) in List"</span> :key=<span class="string">"index"</span>&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-checkbox  v-model=<span class="string">'checkArr'</span> :label=item.id  @change=<span class="string">"changevalue"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span></span><br><span class="line">        &lt;span&gt;&#123;&#123;item.name&#125;&#125;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>div&gt;</span><br><span class="line">      &lt;table&gt;</span><br><span class="line">      &lt;<span class="regexp">/table&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">    &lt;el-checkbox v-model=<span class="string">'cheackAllChecked'</span> @change=<span class="string">'checkAllFun'</span>&gt;全选&lt;<span class="regexp">/el-checkbox&gt;</span></span><br><span class="line"><span class="regexp">    &lt;span @click="reverseChecked"&gt;反选&lt;/</span>span&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      List: [</span><br><span class="line">        &#123;</span><br><span class="line">          id: <span class="string">"1"</span>,</span><br><span class="line">          name:<span class="string">'香蕉'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: <span class="string">"2"</span>,</span><br><span class="line">          name:<span class="string">'苹果'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: <span class="string">"3"</span>,</span><br><span class="line">          name:<span class="string">'橙子'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: <span class="string">"4"</span>,</span><br><span class="line">          name:<span class="string">'鸭梨'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: <span class="string">"5"</span>,</span><br><span class="line">          name:<span class="string">'葡萄'</span></span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      cheackAllChecked: <span class="literal">false</span>,</span><br><span class="line">      checkArr: [],</span><br><span class="line">      checkCompleteArr: []</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    <span class="comment">//实现全选</span></span><br><span class="line">    checkAllFun() &#123;</span><br><span class="line">      <span class="keyword">var</span> _this = <span class="keyword">this</span>;</span><br><span class="line">      <span class="keyword">this</span>.checkArr = [];</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.cheackAllChecked) &#123;</span><br><span class="line">        <span class="keyword">this</span>.List.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item, index</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">if</span> (index &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            _this.checkArr.push(item.id);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//实现反选</span></span><br><span class="line">    reverseChecked() &#123;</span><br><span class="line">      <span class="keyword">var</span> changeArr = [];</span><br><span class="line">      <span class="keyword">this</span>.List.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item, index</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (index &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">          changeArr.push(item.id);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="keyword">this</span>.removeByValue(changeArr, <span class="keyword">this</span>.checkArr);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//反选过滤函数</span></span><br><span class="line">    removeByValue(changearr, checkarr) &#123;</span><br><span class="line">      <span class="keyword">var</span> _this = <span class="keyword">this</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; checkarr.length; j++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; changearr.length; i++) &#123;</span><br><span class="line">          <span class="keyword">if</span> (changearr[i] === checkarr[j]) &#123;</span><br><span class="line">            changearr.splice(i, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">this</span>.checkArr = changearr;</span><br><span class="line">      <span class="keyword">if</span> (changearr.length &lt;= _this.checkCompleteArr.length) &#123;</span><br><span class="line">        <span class="keyword">this</span>.cheackAllChecked = <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (changearr.length === _this.checkCompleteArr.length) &#123;</span><br><span class="line">        <span class="keyword">this</span>.cheackAllChecked = <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//选项的change事件</span></span><br><span class="line">    changevalue() &#123;</span><br><span class="line">      <span class="keyword">var</span> _this = <span class="keyword">this</span>;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.checkArr.length &lt;= _this.checkCompleteArr.length) &#123;</span><br><span class="line">        <span class="keyword">this</span>.cheackAllChecked = <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.checkArr.length === _this.checkCompleteArr.length) &#123;</span><br><span class="line">        <span class="keyword">this</span>.cheackAllChecked = <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//全选或反选用到的完整数组值</span></span><br><span class="line">  mounted() &#123;</span><br><span class="line">    <span class="keyword">var</span> _this = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">this</span>.List.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item, index</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (index &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        _this.checkCompleteArr.push(item.id);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l
      
    
    </summary>
    
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue实现路由的按需加载</title>
    <link href="http://yoursite.com/2019/11/04/Vue%E5%AE%9E%E7%8E%B0%E8%B7%AF%E7%94%B1%E7%9A%84%E6%8C%89%E9%9C%80%E5%8A%A0%E8%BD%BD/"/>
    <id>http://yoursite.com/2019/11/04/Vue实现路由的按需加载/</id>
    <published>2019-11-04T08:05:07.000Z</published>
    <updated>2019-12-05T10:10:17.545Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>vue异步组件</p></li><li><p>es提案的import()</p></li><li><p>webpack的require,ensure()</p><p>vue异步组件技术 ==== 异步加载<br>vue-router配置路由 , 使用vue的异步组件技术 , 可以实现按需加载 .<br>但是,这种情况下一个组件生成一个js文件</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* vue异步组件技术 */</span></span><br><span class="line">&#123;</span><br><span class="line">  path: <span class="string">'/home'</span>,</span><br><span class="line">  name: <span class="string">'home'</span>,</span><br><span class="line">  component: <span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">require</span>([<span class="string">'@/components/home'</span>],resolve)</span><br><span class="line">&#125;,&#123;</span><br><span class="line">  path: <span class="string">'/index'</span>,</span><br><span class="line">  name: <span class="string">'Index'</span>,</span><br><span class="line">  component: <span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">require</span>([<span class="string">'@/components/index'</span>],resolve)</span><br><span class="line">&#125;,&#123;</span><br><span class="line">  path: <span class="string">'/about'</span>,</span><br><span class="line">  name: <span class="string">'about'</span>,</span><br><span class="line">  component: <span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">require</span>([<span class="string">'@/components/about'</span>],resolve)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>组件懒加载方案二 路由懒加载(使用import)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 下面2行代码，没有指定webpackChunkName，每个组件打包成一个js文件。</span></span><br><span class="line"><span class="comment">/* const Home = () =&gt; import('@/components/home')</span></span><br><span class="line"><span class="comment">const Index = () =&gt; import('@/components/index')</span></span><br><span class="line"><span class="comment">const About = () =&gt; import('@/components/about') */</span></span><br><span class="line"><span class="comment">// 下面2行代码，指定了相同的webpackChunkName，会合并打包成一个js文件。 把组件按组分块</span></span><br><span class="line"><span class="keyword">const</span> Home =  <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="comment">/* webpackChunkName: 'ImportFuncDemo' */</span> <span class="string">'@/components/home'</span>)</span><br><span class="line"><span class="keyword">const</span> Index = <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="comment">/* webpackChunkName: 'ImportFuncDemo' */</span> <span class="string">'@/components/index'</span>)</span><br><span class="line"><span class="keyword">const</span> About = <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="comment">/* webpackChunkName: 'ImportFuncDemo' */</span> <span class="string">'@/components/about'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  path: <span class="string">'/about'</span>,</span><br><span class="line">  component: About</span><br><span class="line">&#125;, &#123;</span><br><span class="line">  path: <span class="string">'/index'</span>,</span><br><span class="line">  component: Index</span><br><span class="line">&#125;, &#123;</span><br><span class="line">  path: <span class="string">'/home'</span>,</span><br><span class="line">  component: Home</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>webpack提供的require.ensure()<br>vue-router配置路由，使用webpack的require.ensure技术，也可以实现按需加载。<br>这种情况下，多个路由指定相同的chunkName，会合并打包成一个js文件。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 组件懒加载方案三: webpack提供的require.ensure() */</span></span><br><span class="line">&#123;</span><br><span class="line">  path: <span class="string">'/home'</span>,</span><br><span class="line">  name: <span class="string">'home'</span>,</span><br><span class="line">  component: <span class="function"><span class="params">r</span> =&gt;</span> <span class="built_in">require</span>.ensure([], () =&gt; r(<span class="built_in">require</span>(<span class="string">'@/components/home'</span>)), <span class="string">'demo'</span>)</span><br><span class="line">&#125;, &#123;</span><br><span class="line">  path: <span class="string">'/index'</span>,</span><br><span class="line">  name: <span class="string">'Index'</span>,</span><br><span class="line">  component: <span class="function"><span class="params">r</span> =&gt;</span> <span class="built_in">require</span>.ensure([], () =&gt; r(<span class="built_in">require</span>(<span class="string">'@/components/index'</span>)), <span class="string">'demo'</span>)</span><br><span class="line">&#125;, &#123;</span><br><span class="line">  path: <span class="string">'/about'</span>,</span><br><span class="line">  name: <span class="string">'about'</span>,</span><br><span class="line">  component: <span class="function"><span class="params">r</span> =&gt;</span> <span class="built_in">require</span>.ensure([], () =&gt; r(<span class="built_in">require</span>(<span class="string">'@/components/about'</span>)), <span class="string">'demo-01'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>转自：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fsegmentfault.com%2Fa%2F1190000011519350" target="_blank" rel="noopener">https://segmentfault.com/a/1190000011519350</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;vue异步组件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;es提案的import()&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;webpack的require,ensure()&lt;/p&gt;
&lt;p&gt;vue异步组件技术 ==== 异步加载&lt;br&gt;vue-router配置路由 , 
      
    
    </summary>
    
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue中nextTick正确使用</title>
    <link href="http://yoursite.com/2019/11/04/Vue%E4%B8%ADnextTick%E6%AD%A3%E7%A1%AE%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2019/11/04/Vue中nextTick正确使用/</id>
    <published>2019-11-04T07:49:44.000Z</published>
    <updated>2019-12-05T10:10:44.162Z</updated>
    
    <content type="html"><![CDATA[<p>官方文档解释如下：</p><p>在下次 DOM 更新循环结束之后执行延迟回调。在修改数据之后立即使用这个方法，获取更新后的 DOM。</p><p>获取更新后的DOM言外之意就是什么操作需要用到了更新后的DOM而不能使用之前的DOM或者使用更新前的DOM或出问题，所以就衍生出了这个获取更新后的DOM的Vue方法。所以放在Vue.nextTick()回调函数中的执行的应该是会对DOM进行操作的 js代码.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"app"</span>&gt;</span><br><span class="line">  &lt;div ref=<span class="string">"msg"</span>&gt;&#123;&#123;msg&#125;&#125;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  &lt;div v-if="msg1"&gt;msg1 ****&#123;&#123;msg1&#125;&#125;&lt;/</span>div&gt;</span><br><span class="line">  &lt;div v-<span class="keyword">if</span>=<span class="string">"msg2"</span>&gt;msg2 ****&#123;&#123;msg2&#125;&#125;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  &lt;div v-if="msg3"&gt;msg3 ****&#123;&#123;msg3&#125;&#125;&lt;/</span>div&gt;</span><br><span class="line">  &lt;button @click=<span class="string">"changeMsg"</span> style=<span class="string">"width:100px;height: 30px;"</span>&gt;点我&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">    data()&#123;</span><br><span class="line">      <span class="keyword">return</span>&#123;</span><br><span class="line">        msg: <span class="string">'Hello Vue.'</span>,</span><br><span class="line">        msg1: <span class="string">''</span>,</span><br><span class="line">        msg2: <span class="string">''</span>,</span><br><span class="line">        msg3: <span class="string">''</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods:&#123;</span><br><span class="line">      changeMsg()&#123;</span><br><span class="line">        <span class="keyword">this</span>.msg = <span class="string">"Hello world."</span></span><br><span class="line">        <span class="keyword">this</span>.msg1 = <span class="keyword">this</span>.$refs.msg.innerHTML</span><br><span class="line">        <span class="keyword">this</span>.$nextTick(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">this</span>.msg2 = <span class="keyword">this</span>.$refs.msg.innerHTML</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">this</span>.msg3 = <span class="keyword">this</span>.$refs.msg.innerHTML</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>点击前</p><p><img src="https://img2018.cnblogs.com/blog/1249970/201812/1249970-20181225173222675-1187052446.png" alt="img"></p><p>点击后</p><p><img src="https://img2018.cnblogs.com/blog/1249970/201812/1249970-20181225173309466-1782014173.png" alt="img"></p><p>msg2显示的内容是变换之后的。其根本原因是因为Vue中DOM更新是异步的。</p><h3 id="什么时候需要用的Vue-nextTick"><a href="#什么时候需要用的Vue-nextTick" class="headerlink" title="什么时候需要用的Vue.nextTick()"></a>什么时候需要用的Vue.nextTick()</h3><p>1.你在Vue生命周期的created()钩子函数进行的DOM操作一定要放在Vue.nextTick()的回调函数中。原因是什么呢，原因是在created()钩子函数执行的时候DOM 其实并未进行任何渲染，而此时进行DOM操作无异于徒劳，所以此处一定要将DOM操作的js代码放进Vue.nextTick()的回调函数中。与之对应的就是mounted钩子函数，因为该钩子函数执行时所有的DOM挂载和渲染都已完成，此时在该钩子函数中进行任何DOM操作都不会有问题 。</p><p>2.在数据变化后要执行的某个操作，而这个操作需要使用随数据改变而改变的DOM结构的时候，这个操作都应该放进Vue.nextTick()的回调函数中。</p><p>原因是，Vue是异步执行dom更新的，一旦观察到数据变化，Vue就会开启一个队列，然后把在同一个事件循环 (event loop) 当中观察到数据变化的 watcher 推送进这个队列。如果这个watcher被触发多次，只会被推送到队列一次。这种缓冲行为可以有效的去掉重复数据造成的不必要的计算和DOm操作。而在下一个事件循环时，Vue会清空队列，并进行必要的DOM更新。<br>当你设置this.msg1 = this.$refs.msg.innerHTML,DOM 并不会马上更新，而是在异步队列被清除，也就是下一个事件循环开始时执行更新时才会进行必要的DOM更新。如果此时你想要根据更新的 DOM 状态去做某些事情，就会出现问题。。为了在数据变化之后等待 Vue 完成更新 DOM ，可以在数据变化之后立即使用 Vue.nextTick(callback) 。这样回调函数在 DOM 更新完成后就会调用。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;官方文档解释如下：&lt;/p&gt;
&lt;p&gt;在下次 DOM 更新循环结束之后执行延迟回调。在修改数据之后立即使用这个方法，获取更新后的 DOM。&lt;/p&gt;
&lt;p&gt;获取更新后的DOM言外之意就是什么操作需要用到了更新后的DOM而不能使用之前的DOM或者使用更新前的DOM或出问题，所以就衍
      
    
    </summary>
    
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>10个常用的Win键快捷键 相当实用！</title>
    <link href="http://yoursite.com/2019/10/24/10%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84Win%E9%94%AE%E5%BF%AB%E6%8D%B7%E9%94%AE%20%E7%9B%B8%E5%BD%93%E5%AE%9E%E7%94%A8%EF%BC%81/"/>
    <id>http://yoursite.com/2019/10/24/10个常用的Win键快捷键 相当实用！/</id>
    <published>2019-10-24T07:00:47.000Z</published>
    <updated>2019-11-04T08:27:38.252Z</updated>
    
    <content type="html"><![CDATA[<p>1、Win + R 运行命令窗，cmd等必备。</p><p>2、Win + E 快速打开 文件资源管理器（我的电脑）。</p><p>3、Win+D：最小化桌面</p><p>按下此组合键后，屏幕上所有窗口都会瞬间最小化，再按一次又会恢复。</p><p>4、Ctrl + Alt + Del：任务管理器菜单</p><p>5、Win+→/↑/←/↓：窗口排版</p><p>Win键的搭配下，使用↑/↓/←/→四个按键就可以生成最大化、最小化、侧屏、右侧屏四个基础的排版功能。如果当前窗口已经处在左侧屏或右侧屏状态时，按下Win+↑/↓还可以进一步将变为左上、左下、右上、右下四个高级状态。</p><p>6、Win+++：放大镜</p><p>按下Win键不放，然后+++…… 别忘了用Win+—再缩小回来。</p><p>7、Win+P：启动投影仪/无线显示器</p><p>按下此组合键后，系统会在右窗格弹出一个菜单，根据需要选择即可，非常方便。如有无线显示器，也可以使用这个功能投射。</p><p>8、Win+Home：快速清理活动窗口</p><p>窗口打开太多，一个个关闭很麻烦。按下此组合键后，除当前窗口外的所有窗口都会最小化。</p><p>9、Win + TAB：</p><p>使用Win + Tab键可以预览所有当前打开的窗口，并且可以按需进行快速切换。</p><p>10、Win + Ctrl + D：新建虚拟桌面 Win + Ctrl + F4 关闭虚拟桌面</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1、Win + R 运行命令窗，cmd等必备。&lt;/p&gt;
&lt;p&gt;2、Win + E 快速打开 文件资源管理器（我的电脑）。&lt;/p&gt;
&lt;p&gt;3、Win+D：最小化桌面&lt;/p&gt;
&lt;p&gt;按下此组合键后，屏幕上所有窗口都会瞬间最小化，再按一次又会恢复。&lt;/p&gt;
&lt;p&gt;4、Ctrl +
      
    
    </summary>
    
    
      <category term="实用工具" scheme="http://yoursite.com/categories/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="实用工具" scheme="http://yoursite.com/tags/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
</feed>
